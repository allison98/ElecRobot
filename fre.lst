0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 25 18:11:33 2018
0000              5   ;--------------------------------------------------------
                  5   $name fre
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _TIMER0_Init
0000             28            public _waitms
0000             29            public _Timer3us
0000             30            public _Timer2_ISR
0000             31            public __c51_external_startup
0000             32   ;--------------------------------------------------------
0000             33   ; Special Function Registers
0000             34   ;--------------------------------------------------------
0000             35   _ACC            DATA 0xe0
0000             36   _ADC0ASAH       DATA 0xb6
0000             37   _ADC0ASAL       DATA 0xb5
0000             38   _ADC0ASCF       DATA 0xa1
0000             39   _ADC0ASCT       DATA 0xc7
0000             40   _ADC0CF0        DATA 0xbc
0000             41   _ADC0CF1        DATA 0xb9
0000             42   _ADC0CF2        DATA 0xdf
0000             43   _ADC0CN0        DATA 0xe8
0000             44   _ADC0CN1        DATA 0xb2
0000             45   _ADC0CN2        DATA 0xb3
0000             46   _ADC0GTH        DATA 0xc4
0000             47   _ADC0GTL        DATA 0xc3
0000             48   _ADC0H          DATA 0xbe
0000             49   _ADC0L          DATA 0xbd
0000             50   _ADC0LTH        DATA 0xc6
0000             51   _ADC0LTL        DATA 0xc5
0000             52   _ADC0MX         DATA 0xbb
0000             53   _B              DATA 0xf0
0000             54   _CKCON0         DATA 0x8e
0000             55   _CKCON1         DATA 0xa6
0000             56   _CLEN0          DATA 0xc6
0000             57   _CLIE0          DATA 0xc7
0000             58   _CLIF0          DATA 0xe8
0000             59   _CLKSEL         DATA 0xa9
0000             60   _CLOUT0         DATA 0xd1
0000             61   _CLU0CF         DATA 0xb1
0000             62   _CLU0FN         DATA 0xaf
0000             63   _CLU0MX         DATA 0x84
0000             64   _CLU1CF         DATA 0xb3
0000             65   _CLU1FN         DATA 0xb2
0000             66   _CLU1MX         DATA 0x85
0000             67   _CLU2CF         DATA 0xb6
0000             68   _CLU2FN         DATA 0xb5
0000             69   _CLU2MX         DATA 0x91
0000             70   _CLU3CF         DATA 0xbf
0000             71   _CLU3FN         DATA 0xbe
0000             72   _CLU3MX         DATA 0xae
0000             73   _CMP0CN0        DATA 0x9b
0000             74   _CMP0CN1        DATA 0x99
0000             75   _CMP0MD         DATA 0x9d
0000             76   _CMP0MX         DATA 0x9f
0000             77   _CMP1CN0        DATA 0xbf
0000             78   _CMP1CN1        DATA 0xac
0000             79   _CMP1MD         DATA 0xab
0000             80   _CMP1MX         DATA 0xaa
0000             81   _CRC0CN0        DATA 0xce
0000             82   _CRC0CN1        DATA 0x86
0000             83   _CRC0CNT        DATA 0xd3
0000             84   _CRC0DAT        DATA 0xcb
0000             85   _CRC0FLIP       DATA 0xcf
0000             86   _CRC0IN         DATA 0xca
0000             87   _CRC0ST         DATA 0xd2
0000             88   _DAC0CF0        DATA 0x91
0000             89   _DAC0CF1        DATA 0x92
0000             90   _DAC0H          DATA 0x85
0000             91   _DAC0L          DATA 0x84
0000             92   _DAC1CF0        DATA 0x93
0000             93   _DAC1CF1        DATA 0x94
0000             94   _DAC1H          DATA 0x8a
0000             95   _DAC1L          DATA 0x89
0000             96   _DAC2CF0        DATA 0x95
0000             97   _DAC2CF1        DATA 0x96
0000             98   _DAC2H          DATA 0x8c
0000             99   _DAC2L          DATA 0x8b
0000            100   _DAC3CF0        DATA 0x9a
0000            101   _DAC3CF1        DATA 0x9c
0000            102   _DAC3H          DATA 0x8e
0000            103   _DAC3L          DATA 0x8d
0000            104   _DACGCF0        DATA 0x88
0000            105   _DACGCF1        DATA 0x98
0000            106   _DACGCF2        DATA 0xa2
0000            107   _DERIVID        DATA 0xad
0000            108   _DEVICEID       DATA 0xb5
0000            109   _DPH            DATA 0x83
0000            110   _DPL            DATA 0x82
0000            111   _EIE1           DATA 0xe6
0000            112   _EIE2           DATA 0xf3
0000            113   _EIP1           DATA 0xbb
0000            114   _EIP1H          DATA 0xee
0000            115   _EIP2           DATA 0xed
0000            116   _EIP2H          DATA 0xf6
0000            117   _EMI0CN         DATA 0xe7
0000            118   _FLKEY          DATA 0xb7
0000            119   _HFO0CAL        DATA 0xc7
0000            120   _HFO1CAL        DATA 0xd6
0000            121   _HFOCN          DATA 0xef
0000            122   _I2C0ADM        DATA 0xff
0000            123   _I2C0CN0        DATA 0xba
0000            124   _I2C0DIN        DATA 0xbc
0000            125   _I2C0DOUT       DATA 0xbb
0000            126   _I2C0FCN0       DATA 0xad
0000            127   _I2C0FCN1       DATA 0xab
0000            128   _I2C0FCT        DATA 0xf5
0000            129   _I2C0SLAD       DATA 0xbd
0000            130   _I2C0STAT       DATA 0xb9
0000            131   _IE             DATA 0xa8
0000            132   _IP             DATA 0xb8
0000            133   _IPH            DATA 0xf2
0000            134   _IT01CF         DATA 0xe4
0000            135   _LFO0CN         DATA 0xb1
0000            136   _P0             DATA 0x80
0000            137   _P0MASK         DATA 0xfe
0000            138   _P0MAT          DATA 0xfd
0000            139   _P0MDIN         DATA 0xf1
0000            140   _P0MDOUT        DATA 0xa4
0000            141   _P0SKIP         DATA 0xd4
0000            142   _P1             DATA 0x90
0000            143   _P1MASK         DATA 0xee
0000            144   _P1MAT          DATA 0xed
0000            145   _P1MDIN         DATA 0xf2
0000            146   _P1MDOUT        DATA 0xa5
0000            147   _P1SKIP         DATA 0xd5
0000            148   _P2             DATA 0xa0
0000            149   _P2MASK         DATA 0xfc
0000            150   _P2MAT          DATA 0xfb
0000            151   _P2MDIN         DATA 0xf3
0000            152   _P2MDOUT        DATA 0xa6
0000            153   _P2SKIP         DATA 0xcc
0000            154   _P3             DATA 0xb0
0000            155   _P3MDIN         DATA 0xf4
0000            156   _P3MDOUT        DATA 0x9c
0000            157   _PCA0CENT       DATA 0x9e
0000            158   _PCA0CLR        DATA 0x9c
0000            159   _PCA0CN0        DATA 0xd8
0000            160   _PCA0CPH0       DATA 0xfc
0000            161   _PCA0CPH1       DATA 0xea
0000            162   _PCA0CPH2       DATA 0xec
0000            163   _PCA0CPH3       DATA 0xf5
0000            164   _PCA0CPH4       DATA 0x85
0000            165   _PCA0CPH5       DATA 0xde
0000            166   _PCA0CPL0       DATA 0xfb
0000            167   _PCA0CPL1       DATA 0xe9
0000            168   _PCA0CPL2       DATA 0xeb
0000            169   _PCA0CPL3       DATA 0xf4
0000            170   _PCA0CPL4       DATA 0x84
0000            171   _PCA0CPL5       DATA 0xdd
0000            172   _PCA0CPM0       DATA 0xda
0000            173   _PCA0CPM1       DATA 0xdb
0000            174   _PCA0CPM2       DATA 0xdc
0000            175   _PCA0CPM3       DATA 0xae
0000            176   _PCA0CPM4       DATA 0xaf
0000            177   _PCA0CPM5       DATA 0xcc
0000            178   _PCA0H          DATA 0xfa
0000            179   _PCA0L          DATA 0xf9
0000            180   _PCA0MD         DATA 0xd9
0000            181   _PCA0POL        DATA 0x96
0000            182   _PCA0PWM        DATA 0xf7
0000            183   _PCON0          DATA 0x87
0000            184   _PCON1          DATA 0xcd
0000            185   _PFE0CN         DATA 0xc1
0000            186   _PRTDRV         DATA 0xf6
0000            187   _PSCTL          DATA 0x8f
0000            188   _PSTAT0         DATA 0xaa
0000            189   _PSW            DATA 0xd0
0000            190   _REF0CN         DATA 0xd1
0000            191   _REG0CN         DATA 0xc9
0000            192   _REVID          DATA 0xb6
0000            193   _RSTSRC         DATA 0xef
0000            194   _SBCON1         DATA 0x94
0000            195   _SBRLH1         DATA 0x96
0000            196   _SBRLL1         DATA 0x95
0000            197   _SBUF           DATA 0x99
0000            198   _SBUF0          DATA 0x99
0000            199   _SBUF1          DATA 0x92
0000            200   _SCON           DATA 0x98
0000            201   _SCON0          DATA 0x98
0000            202   _SCON1          DATA 0xc8
0000            203   _SFRPAGE        DATA 0xa7
0000            204   _SFRPGCN        DATA 0xbc
0000            205   _SFRSTACK       DATA 0xd7
0000            206   _SMB0ADM        DATA 0xd6
0000            207   _SMB0ADR        DATA 0xd7
0000            208   _SMB0CF         DATA 0xc1
0000            209   _SMB0CN0        DATA 0xc0
0000            210   _SMB0DAT        DATA 0xc2
0000            211   _SMB0FCN0       DATA 0xc3
0000            212   _SMB0FCN1       DATA 0xc4
0000            213   _SMB0FCT        DATA 0xef
0000            214   _SMB0RXLN       DATA 0xc5
0000            215   _SMB0TC         DATA 0xac
0000            216   _SMOD1          DATA 0x93
0000            217   _SP             DATA 0x81
0000            218   _SPI0CFG        DATA 0xa1
0000            219   _SPI0CKR        DATA 0xa2
0000            220   _SPI0CN0        DATA 0xf8
0000            221   _SPI0DAT        DATA 0xa3
0000            222   _SPI0FCN0       DATA 0x9a
0000            223   _SPI0FCN1       DATA 0x9b
0000            224   _SPI0FCT        DATA 0xf7
0000            225   _SPI0PCF        DATA 0xdf
0000            226   _TCON           DATA 0x88
0000            227   _TH0            DATA 0x8c
0000            228   _TH1            DATA 0x8d
0000            229   _TL0            DATA 0x8a
0000            230   _TL1            DATA 0x8b
0000            231   _TMOD           DATA 0x89
0000            232   _TMR2CN0        DATA 0xc8
0000            233   _TMR2CN1        DATA 0xfd
0000            234   _TMR2H          DATA 0xcf
0000            235   _TMR2L          DATA 0xce
0000            236   _TMR2RLH        DATA 0xcb
0000            237   _TMR2RLL        DATA 0xca
0000            238   _TMR3CN0        DATA 0x91
0000            239   _TMR3CN1        DATA 0xfe
0000            240   _TMR3H          DATA 0x95
0000            241   _TMR3L          DATA 0x94
0000            242   _TMR3RLH        DATA 0x93
0000            243   _TMR3RLL        DATA 0x92
0000            244   _TMR4CN0        DATA 0x98
0000            245   _TMR4CN1        DATA 0xff
0000            246   _TMR4H          DATA 0xa5
0000            247   _TMR4L          DATA 0xa4
0000            248   _TMR4RLH        DATA 0xa3
0000            249   _TMR4RLL        DATA 0xa2
0000            250   _TMR5CN0        DATA 0xc0
0000            251   _TMR5CN1        DATA 0xf1
0000            252   _TMR5H          DATA 0xd5
0000            253   _TMR5L          DATA 0xd4
0000            254   _TMR5RLH        DATA 0xd3
0000            255   _TMR5RLL        DATA 0xd2
0000            256   _UART0PCF       DATA 0xd9
0000            257   _UART1FCN0      DATA 0x9d
0000            258   _UART1FCN1      DATA 0xd8
0000            259   _UART1FCT       DATA 0xfa
0000            260   _UART1LIN       DATA 0x9e
0000            261   _UART1PCF       DATA 0xda
0000            262   _VDM0CN         DATA 0xff
0000            263   _WDTCN          DATA 0x97
0000            264   _XBR0           DATA 0xe1
0000            265   _XBR1           DATA 0xe2
0000            266   _XBR2           DATA 0xe3
0000            267   _XOSC0CN        DATA 0x86
0000            268   _DPTR           DATA 0x8382
0000            269   _TMR2RL         DATA 0xcbca
0000            270   _TMR3RL         DATA 0x9392
0000            271   _TMR4RL         DATA 0xa3a2
0000            272   _TMR5RL         DATA 0xd3d2
0000            273   _TMR0           DATA 0x8c8a
0000            274   _TMR1           DATA 0x8d8b
0000            275   _TMR2           DATA 0xcfce
0000            276   _TMR3           DATA 0x9594
0000            277   _TMR4           DATA 0xa5a4
0000            278   _TMR5           DATA 0xd5d4
0000            279   _SBRL1          DATA 0x9695
0000            280   _PCA0           DATA 0xfaf9
0000            281   _PCA0CP0        DATA 0xfcfb
0000            282   _PCA0CP1        DATA 0xeae9
0000            283   _PCA0CP2        DATA 0xeceb
0000            284   _PCA0CP3        DATA 0xf5f4
0000            285   _PCA0CP4        DATA 0x8584
0000            286   _PCA0CP5        DATA 0xdedd
0000            287   _ADC0ASA        DATA 0xb6b5
0000            288   _ADC0GT         DATA 0xc4c3
0000            289   _ADC0           DATA 0xbebd
0000            290   _ADC0LT         DATA 0xc6c5
0000            291   _DAC0           DATA 0x8584
0000            292   _DAC1           DATA 0x8a89
0000            293   _DAC2           DATA 0x8c8b
0000            294   _DAC3           DATA 0x8e8d
0000            295   ;--------------------------------------------------------
0000            296   ; special function bits
0000            297   ;--------------------------------------------------------
0000            298   _ACC_0          BIT 0xe0
0000            299   _ACC_1          BIT 0xe1
0000            300   _ACC_2          BIT 0xe2
0000            301   _ACC_3          BIT 0xe3
0000            302   _ACC_4          BIT 0xe4
0000            303   _ACC_5          BIT 0xe5
0000            304   _ACC_6          BIT 0xe6
0000            305   _ACC_7          BIT 0xe7
0000            306   _TEMPE          BIT 0xe8
0000            307   _ADGN0          BIT 0xe9
0000            308   _ADGN1          BIT 0xea
0000            309   _ADWINT         BIT 0xeb
0000            310   _ADBUSY         BIT 0xec
0000            311   _ADINT          BIT 0xed
0000            312   _IPOEN          BIT 0xee
0000            313   _ADEN           BIT 0xef
0000            314   _B_0            BIT 0xf0
0000            315   _B_1            BIT 0xf1
0000            316   _B_2            BIT 0xf2
0000            317   _B_3            BIT 0xf3
0000            318   _B_4            BIT 0xf4
0000            319   _B_5            BIT 0xf5
0000            320   _B_6            BIT 0xf6
0000            321   _B_7            BIT 0xf7
0000            322   _C0FIF          BIT 0xe8
0000            323   _C0RIF          BIT 0xe9
0000            324   _C1FIF          BIT 0xea
0000            325   _C1RIF          BIT 0xeb
0000            326   _C2FIF          BIT 0xec
0000            327   _C2RIF          BIT 0xed
0000            328   _C3FIF          BIT 0xee
0000            329   _C3RIF          BIT 0xef
0000            330   _D1SRC0         BIT 0x88
0000            331   _D1SRC1         BIT 0x89
0000            332   _D1AMEN         BIT 0x8a
0000            333   _D01REFSL       BIT 0x8b
0000            334   _D3SRC0         BIT 0x8c
0000            335   _D3SRC1         BIT 0x8d
0000            336   _D3AMEN         BIT 0x8e
0000            337   _D23REFSL       BIT 0x8f
0000            338   _D0UDIS         BIT 0x98
0000            339   _D1UDIS         BIT 0x99
0000            340   _D2UDIS         BIT 0x9a
0000            341   _D3UDIS         BIT 0x9b
0000            342   _EX0            BIT 0xa8
0000            343   _ET0            BIT 0xa9
0000            344   _EX1            BIT 0xaa
0000            345   _ET1            BIT 0xab
0000            346   _ES0            BIT 0xac
0000            347   _ET2            BIT 0xad
0000            348   _ESPI0          BIT 0xae
0000            349   _EA             BIT 0xaf
0000            350   _PX0            BIT 0xb8
0000            351   _PT0            BIT 0xb9
0000            352   _PX1            BIT 0xba
0000            353   _PT1            BIT 0xbb
0000            354   _PS0            BIT 0xbc
0000            355   _PT2            BIT 0xbd
0000            356   _PSPI0          BIT 0xbe
0000            357   _P0_0           BIT 0x80
0000            358   _P0_1           BIT 0x81
0000            359   _P0_2           BIT 0x82
0000            360   _P0_3           BIT 0x83
0000            361   _P0_4           BIT 0x84
0000            362   _P0_5           BIT 0x85
0000            363   _P0_6           BIT 0x86
0000            364   _P0_7           BIT 0x87
0000            365   _P1_0           BIT 0x90
0000            366   _P1_1           BIT 0x91
0000            367   _P1_2           BIT 0x92
0000            368   _P1_3           BIT 0x93
0000            369   _P1_4           BIT 0x94
0000            370   _P1_5           BIT 0x95
0000            371   _P1_6           BIT 0x96
0000            372   _P1_7           BIT 0x97
0000            373   _P2_0           BIT 0xa0
0000            374   _P2_1           BIT 0xa1
0000            375   _P2_2           BIT 0xa2
0000            376   _P2_3           BIT 0xa3
0000            377   _P2_4           BIT 0xa4
0000            378   _P2_5           BIT 0xa5
0000            379   _P2_6           BIT 0xa6
0000            380   _P3_0           BIT 0xb0
0000            381   _P3_1           BIT 0xb1
0000            382   _P3_2           BIT 0xb2
0000            383   _P3_3           BIT 0xb3
0000            384   _P3_4           BIT 0xb4
0000            385   _P3_7           BIT 0xb7
0000            386   _CCF0           BIT 0xd8
0000            387   _CCF1           BIT 0xd9
0000            388   _CCF2           BIT 0xda
0000            389   _CCF3           BIT 0xdb
0000            390   _CCF4           BIT 0xdc
0000            391   _CCF5           BIT 0xdd
0000            392   _CR             BIT 0xde
0000            393   _CF             BIT 0xdf
0000            394   _PARITY         BIT 0xd0
0000            395   _F1             BIT 0xd1
0000            396   _OV             BIT 0xd2
0000            397   _RS0            BIT 0xd3
0000            398   _RS1            BIT 0xd4
0000            399   _F0             BIT 0xd5
0000            400   _AC             BIT 0xd6
0000            401   _CY             BIT 0xd7
0000            402   _RI             BIT 0x98
0000            403   _TI             BIT 0x99
0000            404   _RB8            BIT 0x9a
0000            405   _TB8            BIT 0x9b
0000            406   _REN            BIT 0x9c
0000            407   _CE             BIT 0x9d
0000            408   _SMODE          BIT 0x9e
0000            409   _RI1            BIT 0xc8
0000            410   _TI1            BIT 0xc9
0000            411   _RBX1           BIT 0xca
0000            412   _TBX1           BIT 0xcb
0000            413   _REN1           BIT 0xcc
0000            414   _PERR1          BIT 0xcd
0000            415   _OVR1           BIT 0xce
0000            416   _SI             BIT 0xc0
0000            417   _ACK            BIT 0xc1
0000            418   _ARBLOST        BIT 0xc2
0000            419   _ACKRQ          BIT 0xc3
0000            420   _STO            BIT 0xc4
0000            421   _STA            BIT 0xc5
0000            422   _TXMODE         BIT 0xc6
0000            423   _MASTER         BIT 0xc7
0000            424   _SPIEN          BIT 0xf8
0000            425   _TXNF           BIT 0xf9
0000            426   _NSSMD0         BIT 0xfa
0000            427   _NSSMD1         BIT 0xfb
0000            428   _RXOVRN         BIT 0xfc
0000            429   _MODF           BIT 0xfd
0000            430   _WCOL           BIT 0xfe
0000            431   _SPIF           BIT 0xff
0000            432   _IT0            BIT 0x88
0000            433   _IE0            BIT 0x89
0000            434   _IT1            BIT 0x8a
0000            435   _IE1            BIT 0x8b
0000            436   _TR0            BIT 0x8c
0000            437   _TF0            BIT 0x8d
0000            438   _TR1            BIT 0x8e
0000            439   _TF1            BIT 0x8f
0000            440   _T2XCLK0        BIT 0xc8
0000            441   _T2XCLK1        BIT 0xc9
0000            442   _TR2            BIT 0xca
0000            443   _T2SPLIT        BIT 0xcb
0000            444   _TF2CEN         BIT 0xcc
0000            445   _TF2LEN         BIT 0xcd
0000            446   _TF2L           BIT 0xce
0000            447   _TF2H           BIT 0xcf
0000            448   _T4XCLK0        BIT 0x98
0000            449   _T4XCLK1        BIT 0x99
0000            450   _TR4            BIT 0x9a
0000            451   _T4SPLIT        BIT 0x9b
0000            452   _TF4CEN         BIT 0x9c
0000            453   _TF4LEN         BIT 0x9d
0000            454   _TF4L           BIT 0x9e
0000            455   _TF4H           BIT 0x9f
0000            456   _T5XCLK0        BIT 0xc0
0000            457   _T5XCLK1        BIT 0xc1
0000            458   _TR5            BIT 0xc2
0000            459   _T5SPLIT        BIT 0xc3
0000            460   _TF5CEN         BIT 0xc4
0000            461   _TF5LEN         BIT 0xc5
0000            462   _TF5L           BIT 0xc6
0000            463   _TF5H           BIT 0xc7
0000            464   _RIE            BIT 0xd8
0000            465   _RXTO0          BIT 0xd9
0000            466   _RXTO1          BIT 0xda
0000            467   _RFRQ           BIT 0xdb
0000            468   _TIE            BIT 0xdc
0000            469   _TXHOLD         BIT 0xdd
0000            470   _TXNF1          BIT 0xde
0000            471   _TFRQ           BIT 0xdf
0000            472   ;--------------------------------------------------------
0000            473   ; overlayable register banks
0000            474   ;--------------------------------------------------------
0000            475            rbank0 segment data overlay
0000            476   ;--------------------------------------------------------
0000            477   ; internal ram data
0000            478   ;--------------------------------------------------------
0000            479            rseg R_DSEG
0000            480   _main_f_1_54:
0000            481            ds 4
0004            482   ;--------------------------------------------------------
0004            483   ; overlayable items in internal ram 
0004            484   ;--------------------------------------------------------
0000            485            rseg    R_OSEG
0000            486   ;--------------------------------------------------------
0000            487   ; indirectly addressable internal ram data
0000            488   ;--------------------------------------------------------
0000            489            rseg R_ISEG
0000            490   ;--------------------------------------------------------
0000            491   ; absolute internal ram data
0000            492   ;--------------------------------------------------------
0000            493            DSEG
0000            494   ;--------------------------------------------------------
0000            495   ; bit data
0000            496   ;--------------------------------------------------------
0000            497            rseg R_BSEG
0000            498   ;--------------------------------------------------------
0000            499   ; paged external ram data
0000            500   ;--------------------------------------------------------
0000            501            rseg R_PSEG
0000            502   ;--------------------------------------------------------
0000            503   ; external ram data
0000            504   ;--------------------------------------------------------
0000            505            rseg R_XSEG
0000            506   ;--------------------------------------------------------
0000            507   ; absolute external ram data
0000            508   ;--------------------------------------------------------
0000            509            XSEG
0000            510   ;--------------------------------------------------------
0000            511   ; external initialized ram data
0000            512   ;--------------------------------------------------------
0000            513            rseg R_IXSEG
0000            514            rseg R_HOME
0000            515            rseg R_GSINIT
0000            516            rseg R_CSEG
0000            517   ;--------------------------------------------------------
0000            518   ; Reset entry point and interrupt vectors
0000            519   ;--------------------------------------------------------
0000            520            CSEG at 0x0000
0000 020100     521            ljmp    _crt0
002B            522            CSEG at 0x002b
002B 020100     523            ljmp    _Timer2_ISR
002E            524   ;--------------------------------------------------------
002E            525   ; global & static initialisations
002E            526   ;--------------------------------------------------------
0000            527            rseg R_HOME
0000            528            rseg R_GSINIT
0000            529            rseg R_GSINIT
0000            530   ;--------------------------------------------------------
0000            531   ; data variables initialization
0000            532   ;--------------------------------------------------------
0000            533            rseg R_DINIT
0000            534            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            535   ;--------------------------------------------------------
0000            536   ; code
0000            537   ;--------------------------------------------------------
0000            538            rseg R_CSEG
0000            539   ;------------------------------------------------------------
0000            540   ;Allocation info for local variables in function '_c51_external_startup'
0000            541   ;------------------------------------------------------------
0000            542   ;------------------------------------------------------------
0000            543   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:17: char _c51_external_startup (void)
0000            544   ;        -----------------------------------------
0000            545   ;         function _c51_external_startup
0000            546   ;        -----------------------------------------
0000            547   __c51_external_startup:
0000            548            using   0
0000            549   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:20: SFRPAGE = 0x00;
0000 75A700     550            mov     _SFRPAGE,#0x00
0003            551   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:21: WDTCN = 0xDE; //First key
0003 7597DE     552            mov     _WDTCN,#0xDE
0006            553   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:22: WDTCN = 0xAD; //Second key
0006 7597AD     554            mov     _WDTCN,#0xAD
0009            555   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:24: VDM0CN |= 0x80;
0009 43FF80     556            orl     _VDM0CN,#0x80
000C            557   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:25: RSTSRC = 0x02;
000C 75EF02     558            mov     _RSTSRC,#0x02
000F            559   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:32: SFRPAGE = 0x10;
000F 75A710     560            mov     _SFRPAGE,#0x10
0012            561   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:33: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     562            mov     _PFE0CN,#0x20
0015            563   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:34: SFRPAGE = 0x00;
0015 75A700     564            mov     _SFRPAGE,#0x00
0018            565   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:55: CLKSEL = 0x00;
0018 75A900     566            mov     _CLKSEL,#0x00
001B            567   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:56: CLKSEL = 0x00;
001B 75A900     568            mov     _CLKSEL,#0x00
001E            569   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:57: while ((CLKSEL & 0x80) == 0);
001E            570   L002001?:
001E E5A9       571            mov     a,_CLKSEL
0020 30E728     572            jnb     acc.7,L002001?
0023            573   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:58: CLKSEL = 0x03;
0023 75A903     574            mov     _CLKSEL,#0x03
0026            575   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:59: CLKSEL = 0x03;
0026 75A903     576            mov     _CLKSEL,#0x03
0029            577   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:60: while ((CLKSEL & 0x80) == 0);
0029            578   L002004?:
0029 E5A9       579            mov     a,_CLKSEL
002B 30E7A8     580            jnb     acc.7,L002004?
002E            581   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:66: P2MDOUT|=0b_0000_0011;
002E 43A603     582            orl     _P2MDOUT,#0x03
0031            583   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:67: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
0031 43A410     584            orl     _P0MDOUT,#0x10
0034            585   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:68: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     586            mov     _XBR0,#0x01
0037            587   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:69: XBR1     = 0X10; // Enable T0 on P0.0
0037 75E210     588            mov     _XBR1,#0x10
003A            589   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:70: XBR2     = 0x40; // Enable crossbar and weak pull-ups
003A 75E340     590            mov     _XBR2,#0x40
003D            591   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:76: SCON0 = 0x10;
003D 759810     592            mov     _SCON0,#0x10
0040            593   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:77: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
0040 858E8E     594            mov     _CKCON0,_CKCON0
0043            595   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:78: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0043 758DE6     596            mov     _TH1,#0xE6
0046            597   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:79: TL1 = TH1;      // Init Timer1
0046 858D8B     598            mov     _TL1,_TH1
0049            599   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:80: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0049 53890F     600            anl     _TMOD,#0x0F
004C            601   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:81: TMOD |=  0x20;                       
004C 438920     602            orl     _TMOD,#0x20
004F            603   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:82: TR1 = 1; // START Timer1
004F D28E       604            setb    _TR1
0051            605   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:83: TI = 1;  // Indicate TX0 ready
0051 D299       606            setb    _TI
0053            607   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:86: TMR2CN0=0x00;   // Stop Timer2; Clear TF2;
0053 75C800     608            mov     _TMR2CN0,#0x00
0056            609   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:87: CKCON0|=0b_0001_0000;
0056 438E10     610            orl     _CKCON0,#0x10
0059            611   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:88: TMR2RL=(-(SYSCLK/(2*DEFAULT_F))); // Initialize reload value
0059 75CAEE     612            mov     _TMR2RL,#0xEE
005C 75CBF6     613            mov     (_TMR2RL >> 8),#0xF6
005F            614   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:89: TMR2=0xffff;   // Set to reload immediately
005F 75CEFF     615            mov     _TMR2,#0xFF
0062 75CFFF     616            mov     (_TMR2 >> 8),#0xFF
0065            617   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:90: ET2=1;         // Enable Timer2 interrupts
0065 D2AD       618            setb    _ET2
0067            619   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:91: TR2=1;         // Start Timer2
0067 D2CA       620            setb    _TR2
0069            621   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:92: EA=1; // Global interrupt enable
0069 D2AF       622            setb    _EA
006B            623   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:94: return 0;
006B 758200     624            mov     dpl,#0x00
006E 22         625            ret
006F            626   ;------------------------------------------------------------
006F            627   ;Allocation info for local variables in function 'Timer2_ISR'
006F            628   ;------------------------------------------------------------
006F            629   ;------------------------------------------------------------
006F            630   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:97: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
006F            631   ;        -----------------------------------------
006F            632   ;         function Timer2_ISR
006F            633   ;        -----------------------------------------
006F            634   _Timer2_ISR:
006F C0D0       635            push    psw
0071 75D000     636            mov     psw,#0x00
0074            637   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:99: TF2H = 0; // Clear Timer2 interrupt flag
0074 C2CF       638            clr     _TF2H
0076            639   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:100: OUT0=!OUT0;
0076 B2A0       640            cpl     _P2_0
0078            641   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:101: OUT1=!OUT0;
0078 A2A0       642            mov     c,_P2_0
007A B3         643            cpl     c
007B 92A1       644            mov     _P2_1,c
007D D0D0       645            pop     psw
007F 32         646            reti
0080            647   ;        eliminated unneeded push/pop dpl
0080            648   ;        eliminated unneeded push/pop dph
0080            649   ;        eliminated unneeded push/pop b
0080            650   ;        eliminated unneeded push/pop acc
0080            651   ;------------------------------------------------------------
0080            652   ;Allocation info for local variables in function 'Timer3us'
0080            653   ;------------------------------------------------------------
0080            654   ;us                        Allocated to registers r2 r3 
0080            655   ;i                         Allocated to registers r4 r5 
0080            656   ;------------------------------------------------------------
0080            657   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:104: void Timer3us(unsigned int us)
0080            658   ;        -----------------------------------------
0080            659   ;         function Timer3us
0080            660   ;        -----------------------------------------
0080            661   _Timer3us:
0080 AA82       662            mov     r2,dpl
0082 AB83       663            mov     r3,dph
0084            664   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:109: CKCON0|=0b_0100_0000;
0084 438E40     665            orl     _CKCON0,#0x40
0087            666   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:111: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0087 7592B8     667            mov     _TMR3RL,#0xB8
008A 7593FF     668            mov     (_TMR3RL >> 8),#0xFF
008D            669   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:112: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
008D 859294     670            mov     _TMR3,_TMR3RL
0090 859395     671            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0093            672   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:114: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0093 759104     673            mov     _TMR3CN0,#0x04
0096            674   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:115: for (i = 0; i < us; i++)       // Count <us> overflows
0096 7C00       675            mov     r4,#0x00
0098 7D00       676            mov     r5,#0x00
009A            677   L004004?:
009A C3         678            clr     c
009B EC         679            mov     a,r4
009C 9A         680            subb    a,r2
009D ED         681            mov     a,r5
009E 9B         682            subb    a,r3
009F 5001       683            jnc     L004007?
00A1            684   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:117: while (!(TMR3CN0 & 0x80));  // Wait for overflow
00A1            685   L004001?:
00A1 E591       686            mov     a,_TMR3CN0
00A3 30E728     687            jnb     acc.7,L004001?
00A6            688   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:118: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
00A6 53917F     689            anl     _TMR3CN0,#0x7F
00A9            690   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:115: for (i = 0; i < us; i++)       // Count <us> overflows
00A9 0C         691            inc     r4
00AA BC00A8     692            cjne    r4,#0x00,L004004?
00AD 0D         693            inc     r5
00AE 8001       694            sjmp    L004004?
00B0            695   L004007?:
00B0            696   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:120: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
00B0 759100     697            mov     _TMR3CN0,#0x00
00B3 22         698            ret
00B4            699   ;------------------------------------------------------------
00B4            700   ;Allocation info for local variables in function 'waitms'
00B4            701   ;------------------------------------------------------------
00B4            702   ;ms                        Allocated to registers r2 r3 
00B4            703   ;j                         Allocated to registers r4 r5 
00B4            704   ;k                         Allocated to registers r6 
00B4            705   ;------------------------------------------------------------
00B4            706   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:123: void waitms (unsigned int ms)
00B4            707   ;        -----------------------------------------
00B4            708   ;         function waitms
00B4            709   ;        -----------------------------------------
00B4            710   _waitms:
00B4 AA82       711            mov     r2,dpl
00B6 AB83       712            mov     r3,dph
00B8            713   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:127: for(j=0; j<ms; j++)
00B8 7C00       714            mov     r4,#0x00
00BA 7D00       715            mov     r5,#0x00
00BC            716   L005005?:
00BC C3         717            clr     c
00BD EC         718            mov     a,r4
00BE 9A         719            subb    a,r2
00BF ED         720            mov     a,r5
00C0 9B         721            subb    a,r3
00C1 5001       722            jnc     L005009?
00C3            723   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:128: for (k=0; k<4; k++) Timer3us(250);
00C3 7E00       724            mov     r6,#0x00
00C5            725   L005001?:
00C5 BE0428     726            cjne    r6,#0x04,L005018?
00C8            727   L005018?:
00C8 5001       728            jnc     L005007?
00CA 9000FA     729            mov     dptr,#0x00FA
00CD C002       730            push    ar2
00CF C003       731            push    ar3
00D1 C004       732            push    ar4
00D3 C005       733            push    ar5
00D5 C006       734            push    ar6
00D7 120100     735            lcall   _Timer3us
00DA D006       736            pop     ar6
00DC D005       737            pop     ar5
00DE D004       738            pop     ar4
00E0 D003       739            pop     ar3
00E2 D002       740            pop     ar2
00E4 0E         741            inc     r6
00E5 8001       742            sjmp    L005001?
00E7            743   L005007?:
00E7            744   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:127: for(j=0; j<ms; j++)
00E7 0C         745            inc     r4
00E8 BC0068     746            cjne    r4,#0x00,L005005?
00EB 0D         747            inc     r5
00EC 8001       748            sjmp    L005005?
00EE            749   L005009?:
00EE 22         750            ret
00EF            751   ;------------------------------------------------------------
00EF            752   ;Allocation info for local variables in function 'TIMER0_Init'
00EF            753   ;------------------------------------------------------------
00EF            754   ;------------------------------------------------------------
00EF            755   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:132: void TIMER0_Init(void)
00EF            756   ;        -----------------------------------------
00EF            757   ;         function TIMER0_Init
00EF            758   ;        -----------------------------------------
00EF            759   _TIMER0_Init:
00EF            760   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:134: TMOD &= 0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00EF 5389F0     761            anl     _TMOD,#0xF0
00F2            762   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:135: TMOD |= 0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
00F2 438901     763            orl     _TMOD,#0x01
00F5            764   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:136: TR0 = 0; // Stop Timer/Counter 0
00F5 C28C       765            clr     _TR0
00F7 22         766            ret
00F8            767   ;------------------------------------------------------------
00F8            768   ;Allocation info for local variables in function 'main'
00F8            769   ;------------------------------------------------------------
00F8            770   ;x                         Allocated to registers r2 r3 r4 r5 
00F8            771   ;f                         Allocated with name '_main_f_1_54'
00F8            772   ;------------------------------------------------------------
00F8            773   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:139: void main (void)
00F8            774   ;        -----------------------------------------
00F8            775   ;         function main
00F8            776   ;        -----------------------------------------
00F8            777   _main:
00F8            778   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:143: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
00F8 74A8       779            mov     a,#__str_0
00FA C0E0       780            push    acc
00FC 74B7       781            mov     a,#(__str_0 >> 8)
00FE C0E0       782            push    acc
0100 7480       783            mov     a,#0x80
0102 C0E0       784            push    acc
0104 120100     785            lcall   _printf
0107 1581       786            dec     sp
0109 1581       787            dec     sp
010B 1581       788            dec     sp
010D            789   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:145: "Check pins P2.0 and P2.1 with the oscilloscope.\r\n");
010D 7468       790            mov     a,#__str_1
010F C0E0       791            push    acc
0111 74B8       792            mov     a,#(__str_1 >> 8)
0113 C0E0       793            push    acc
0115 7480       794            mov     a,#0x80
0117 C0E0       795            push    acc
0119 120100     796            lcall   _printf
011C 1581       797            dec     sp
011E 1581       798            dec     sp
0120 1581       799            dec     sp
0122            800   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:146: TIMER0_Init();
0122 120100     801            lcall   _TIMER0_Init
0125            802   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:147: while(1)
0125            803   L007005?:
0125            804   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:151: printf("New frequency=");
0125 74E8       805            mov     a,#__str_2
0127 C0E0       806            push    acc
0129 74B8       807            mov     a,#(__str_2 >> 8)
012B C0E0       808            push    acc
012D 7480       809            mov     a,#0x80
012F C0E0       810            push    acc
0131 120100     811            lcall   _printf
0134 1581       812            dec     sp
0136 1581       813            dec     sp
0138 1581       814            dec     sp
013A            815   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:152: scanf("%lu", &f);
013A 74A8       816            mov     a,#_main_f_1_54
013C C0E0       817            push    acc
013E 74B3       818            mov     a,#(_main_f_1_54 >> 8)
0140 C0E0       819            push    acc
0142 7440       820            mov     a,#0x40
0144 C0E0       821            push    acc
0146 7428       822            mov     a,#__str_3
0148 C0E0       823            push    acc
014A 74B9       824            mov     a,#(__str_3 >> 8)
014C C0E0       825            push    acc
014E 7480       826            mov     a,#0x80
0150 C0E0       827            push    acc
0152 120100     828            lcall   _scanf
0155 E581       829            mov     a,sp
0157 24FA       830            add     a,#0xfa
0159 F581       831            mov     sp,a
015B            832   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:153: x=(SYSCLK/(2L*f));
015B E5A8       833            mov     a,_main_f_1_54
015D 25A8       834            add     a,_main_f_1_54
015F F500       835            mov     __divulong_PARM_2,a
0161 E5A9       836            mov     a,(_main_f_1_54 + 1)
0163 33         837            rlc     a
0164 F501       838            mov     (__divulong_PARM_2 + 1),a
0166 E5AA       839            mov     a,(_main_f_1_54 + 2)
0168 33         840            rlc     a
0169 F502       841            mov     (__divulong_PARM_2 + 2),a
016B E5AB       842            mov     a,(_main_f_1_54 + 3)
016D 33         843            rlc     a
016E F503       844            mov     (__divulong_PARM_2 + 3),a
0170 90A200     845            mov     dptr,#0xA200
0173 75F04A     846            mov     b,#0x4A
0176 7404       847            mov     a,#0x04
0178 120100     848            lcall   __divulong
017B AA82       849            mov     r2,dpl
017D AB83       850            mov     r3,dph
017F ACF0       851            mov     r4,b
0181 FD         852            mov     r5,a
0182            853   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:154: if(x>0xffff)
0182 C3         854            clr     c
0183 74FF       855            mov     a,#0xFF
0185 9A         856            subb    a,r2
0186 74FF       857            mov     a,#0xFF
0188 9B         858            subb    a,r3
0189 E4         859            clr     a
018A 9C         860            subb    a,r4
018B E4         861            clr     a
018C 9D         862            subb    a,r5
018D 5001       863            jnc     L007002?
018F            864   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:156: printf("Sorry %lu Hz is out of range.\n", f);
018F C0A8       865            push    _main_f_1_54
0191 C0A9       866            push    (_main_f_1_54 + 1)
0193 C0AA       867            push    (_main_f_1_54 + 2)
0195 C0AB       868            push    (_main_f_1_54 + 3)
0197 74B8       869            mov     a,#__str_4
0199 C0E0       870            push    acc
019B 74BA       871            mov     a,#(__str_4 >> 8)
019D C0E0       872            push    acc
019F 7480       873            mov     a,#0x80
01A1 C0E0       874            push    acc
01A3 120100     875            lcall   _printf
01A6 E581       876            mov     a,sp
01A8 24F9       877            add     a,#0xf9
01AA F581       878            mov     sp,a
01AC 020100     879            ljmp    L007003?
01AF            880   L007002?:
01AF            881   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:160: TR2=0; // Stop timer 2
01AF C2CA       882            clr     _TR2
01B1            883   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:161: TMR2RL=0x10000L-x; // Change reload value for new frequency
01B1 E4         884            clr     a
01B2 C3         885            clr     c
01B3 9A         886            subb    a,r2
01B4 FA         887            mov     r2,a
01B5 E4         888            clr     a
01B6 9B         889            subb    a,r3
01B7 FB         890            mov     r3,a
01B8 7401       891            mov     a,#0x01
01BA 9C         892            subb    a,r4
01BB E4         893            clr     a
01BC 9D         894            subb    a,r5
01BD 8ACA       895            mov     _TMR2RL,r2
01BF 8BCB       896            mov     (_TMR2RL >> 8),r3
01C1            897   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:162: TR2=1; // Start timer 2
01C1 D2CA       898            setb    _TR2
01C3            899   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:163: f=SYSCLK/(2L*(0x10000L-TMR2RL));
01C3 AACA       900            mov     r2,_TMR2RL
01C5 ABCB       901            mov     r3,(_TMR2RL >> 8)
01C7 7C00       902            mov     r4,#0x00
01C9 E4         903            clr     a
01CA FD         904            mov     r5,a
01CB C3         905            clr     c
01CC 9A         906            subb    a,r2
01CD FA         907            mov     r2,a
01CE E4         908            clr     a
01CF 9B         909            subb    a,r3
01D0 FB         910            mov     r3,a
01D1 7401       911            mov     a,#0x01
01D3 9C         912            subb    a,r4
01D4 FC         913            mov     r4,a
01D5 E4         914            clr     a
01D6 9D         915            subb    a,r5
01D7 FD         916            mov     r5,a
01D8 EA         917            mov     a,r2
01D9 2A         918            add     a,r2
01DA F500       919            mov     __divslong_PARM_2,a
01DC EB         920            mov     a,r3
01DD 33         921            rlc     a
01DE F501       922            mov     (__divslong_PARM_2 + 1),a
01E0 EC         923            mov     a,r4
01E1 33         924            rlc     a
01E2 F502       925            mov     (__divslong_PARM_2 + 2),a
01E4 ED         926            mov     a,r5
01E5 33         927            rlc     a
01E6 F503       928            mov     (__divslong_PARM_2 + 3),a
01E8 90A200     929            mov     dptr,#0xA200
01EB 75F04A     930            mov     b,#0x4A
01EE 7404       931            mov     a,#0x04
01F0 120100     932            lcall   __divslong
01F3 AA82       933            mov     r2,dpl
01F5 AB83       934            mov     r3,dph
01F7 ACF0       935            mov     r4,b
01F9 FD         936            mov     r5,a
01FA 8AA8       937            mov     _main_f_1_54,r2
01FC 8BA9       938            mov     (_main_f_1_54 + 1),r3
01FE 8CAA       939            mov     (_main_f_1_54 + 2),r4
0200 8DAB       940            mov     (_main_f_1_54 + 3),r5
0202            941   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:164: printf("\nActual frequency: %lu\n", f);
0202 C002       942            push    ar2
0204 C003       943            push    ar3
0206 C004       944            push    ar4
0208 C005       945            push    ar5
020A 74C8       946            mov     a,#__str_5
020C C0E0       947            push    acc
020E 74BB       948            mov     a,#(__str_5 >> 8)
0210 C0E0       949            push    acc
0212 7480       950            mov     a,#0x80
0214 C0E0       951            push    acc
0216 120100     952            lcall   _printf
0219 E581       953            mov     a,sp
021B 24F9       954            add     a,#0xf9
021D F581       955            mov     sp,a
021F            956   L007003?:
021F            957   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:167: TL0=0; 
021F 758A00     958            mov     _TL0,#0x00
0222            959   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:168: TH0=0;
0222 758C00     960            mov     _TH0,#0x00
0225            961   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:169: TF0=0;
0225 C28D       962            clr     _TF0
0227            963   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:170: TR0=0;
0227 C28C       964            clr     _TR0
0229            965   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:171: TR0=1;
0229 D28C       966            setb    _TR0
022B            967   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:172: waitms(1000/(2*f));
022B E5A8       968            mov     a,_main_f_1_54
022D 25A8       969            add     a,_main_f_1_54
022F F500       970            mov     __divulong_PARM_2,a
0231 E5A9       971            mov     a,(_main_f_1_54 + 1)
0233 33         972            rlc     a
0234 F501       973            mov     (__divulong_PARM_2 + 1),a
0236 E5AA       974            mov     a,(_main_f_1_54 + 2)
0238 33         975            rlc     a
0239 F502       976            mov     (__divulong_PARM_2 + 2),a
023B E5AB       977            mov     a,(_main_f_1_54 + 3)
023D 33         978            rlc     a
023E F503       979            mov     (__divulong_PARM_2 + 3),a
0240 9003E8     980            mov     dptr,#0x03E8
0243 E4         981            clr     a
0244 F5F0       982            mov     b,a
0246 120100     983            lcall   __divulong
0249 120100     984            lcall   _waitms
024C            985   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:173: f=0;
024C E4         986            clr     a
024D F5A8       987            mov     _main_f_1_54,a
024F F5A9       988            mov     (_main_f_1_54 + 1),a
0251 F5AA       989            mov     (_main_f_1_54 + 2),a
0253 F5AB       990            mov     (_main_f_1_54 + 3),a
0255            991   ;        C:\Users\allisony\Documents\ElecRobot\fre.c:174: TR2=0;
0255 C2CA       992            clr     _TR2
0257 020100     993            ljmp    L007005?
025A            994            rseg R_CSEG
025A            995   
0000            996            rseg R_XINIT
0000            997   
0000            998            rseg R_CONST
0000            999   __str_0:
0000 1B        1000            db 0x1B
0001 5B324A    1001            db '[2J'
0004 00        1002            db 0x00
0005           1003   __str_1:
0005 56617269  1004            db 'Variable frequency generator for the EFM8LB1.'
     61626C65
     20667265
     7175656E
     63792067
     656E6572
     61746F72
     20666F72
     20746865
     2045464D
     384C4231
     2E
0032 0D        1005            db 0x0D
0033 0A        1006            db 0x0A
0034 43686563  1007            db 'Check pins P2'
     6B207069
     6E732050
     32
0041 2E302061  1008            db '.0 and P2.1 with the oscilloscope.'
     6E642050
     322E3120
     77697468
     20746865
     206F7363
     696C6C6F
     73636F70
     652E
0063 0D        1009            db 0x0D
0064 0A        1010            db 0x0A
0065 00        1011            db 0x00
0066           1012   __str_2:
0066 4E657720  1013            db 'New frequency='
     66726571
     75656E63
     793D
0074 00        1014            db 0x00
0075           1015   __str_3:
0075 256C75    1016            db '%lu'
0078 00        1017            db 0x00
0079           1018   __str_4:
0079 536F7272  1019            db 'Sorry %lu Hz is out of range.'
     7920256C
     7520487A
     20697320
     6F757420
     6F662072
     616E6765
     2E
0096 0A        1020            db 0x0A
0097 00        1021            db 0x00
0098           1022   __str_5:
0098 0A        1023            db 0x0A
0099 41637475  1024            db 'Actual frequency: %lu'
     616C2066
     72657175
     656E6379
     3A20256C
     75
00AE 0A        1025            db 0x0A
00AF 00        1026            db 0x00
00B0           1027   
002E           1028            CSEG
002E           1029   
002E           1030   end
