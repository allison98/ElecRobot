0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Wed Apr 04 10:27:10 2018
0000              5   ;--------------------------------------------------------
                  5   $name idkwhatsgoingon___WithBluetooth
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _arrayEqual_PARM_3
0000             28            public _arrayEqual_PARM_2
0000             29            public _InitPinADC_PARM_2
0000             30            public _main
0000             31            public _bluetoothMaze
0000             32            public _forward1
0000             33            public _checkLeft
0000             34            public _checkRight
0000             35            public _puts1
0000             36            public _getchar1
0000             37            public _putchar1
0000             38            public _laserPattern
0000             39            public _detectobstacle
0000             40            public _checkMode
0000             41            public _recieveData
0000             42            public _waitquarterperiod
0000             43            public _getDigitalSignal
0000             44            public _voltsAtPeak
0000             45            public _checkCommands
0000             46            public _arrayEqual
0000             47            public _periodcalc
0000             48            public _PWMStop
0000             49            public _PWMRight
0000             50            public _PWMLeft
0000             51            public _PWMbackward
0000             52            public _PWMforward
0000             53            public _InitPinADC
0000             54            public _Volts_at_Pin
0000             55            public _TIMER0_Init
0000             56            public _InitADC
0000             57            public _Timer2_ISR
0000             58            public _ADC_at_Pin
0000             59            public _waitms
0000             60            public _Timer3us
0000             61            public _UART1_Init
0000             62            public __c51_external_startup
0000             63            public _bluetoothMaze_PARM_2
0000             64            public _x
0000             65            public _command
0000             66            public _right
0000             67            public _left
0000             68            public _backward
0000             69            public _forward
0000             70            public _stop
0000             71            public _claw_flag
0000             72            public _flag
0000             73            public _cartMoveB
0000             74            public _cartMoveF
0000             75            public _pwmSig6
0000             76            public _pwmSig5
0000             77            public _pwmSig4
0000             78            public _pwmSig3
0000             79            public _pwmSig2
0000             80            public _pwmSig1
0000             81            public _pwm_count3
0000             82            public _pwm_count2
0000             83            public _pwm_count1
0000             84            public _pwm_count
0000             85   ;--------------------------------------------------------
0000             86   ; Special Function Registers
0000             87   ;--------------------------------------------------------
0000             88   _ACC            DATA 0xe0
0000             89   _ADC0ASAH       DATA 0xb6
0000             90   _ADC0ASAL       DATA 0xb5
0000             91   _ADC0ASCF       DATA 0xa1
0000             92   _ADC0ASCT       DATA 0xc7
0000             93   _ADC0CF0        DATA 0xbc
0000             94   _ADC0CF1        DATA 0xb9
0000             95   _ADC0CF2        DATA 0xdf
0000             96   _ADC0CN0        DATA 0xe8
0000             97   _ADC0CN1        DATA 0xb2
0000             98   _ADC0CN2        DATA 0xb3
0000             99   _ADC0GTH        DATA 0xc4
0000            100   _ADC0GTL        DATA 0xc3
0000            101   _ADC0H          DATA 0xbe
0000            102   _ADC0L          DATA 0xbd
0000            103   _ADC0LTH        DATA 0xc6
0000            104   _ADC0LTL        DATA 0xc5
0000            105   _ADC0MX         DATA 0xbb
0000            106   _B              DATA 0xf0
0000            107   _CKCON0         DATA 0x8e
0000            108   _CKCON1         DATA 0xa6
0000            109   _CLEN0          DATA 0xc6
0000            110   _CLIE0          DATA 0xc7
0000            111   _CLIF0          DATA 0xe8
0000            112   _CLKSEL         DATA 0xa9
0000            113   _CLOUT0         DATA 0xd1
0000            114   _CLU0CF         DATA 0xb1
0000            115   _CLU0FN         DATA 0xaf
0000            116   _CLU0MX         DATA 0x84
0000            117   _CLU1CF         DATA 0xb3
0000            118   _CLU1FN         DATA 0xb2
0000            119   _CLU1MX         DATA 0x85
0000            120   _CLU2CF         DATA 0xb6
0000            121   _CLU2FN         DATA 0xb5
0000            122   _CLU2MX         DATA 0x91
0000            123   _CLU3CF         DATA 0xbf
0000            124   _CLU3FN         DATA 0xbe
0000            125   _CLU3MX         DATA 0xae
0000            126   _CMP0CN0        DATA 0x9b
0000            127   _CMP0CN1        DATA 0x99
0000            128   _CMP0MD         DATA 0x9d
0000            129   _CMP0MX         DATA 0x9f
0000            130   _CMP1CN0        DATA 0xbf
0000            131   _CMP1CN1        DATA 0xac
0000            132   _CMP1MD         DATA 0xab
0000            133   _CMP1MX         DATA 0xaa
0000            134   _CRC0CN0        DATA 0xce
0000            135   _CRC0CN1        DATA 0x86
0000            136   _CRC0CNT        DATA 0xd3
0000            137   _CRC0DAT        DATA 0xcb
0000            138   _CRC0FLIP       DATA 0xcf
0000            139   _CRC0IN         DATA 0xca
0000            140   _CRC0ST         DATA 0xd2
0000            141   _DAC0CF0        DATA 0x91
0000            142   _DAC0CF1        DATA 0x92
0000            143   _DAC0H          DATA 0x85
0000            144   _DAC0L          DATA 0x84
0000            145   _DAC1CF0        DATA 0x93
0000            146   _DAC1CF1        DATA 0x94
0000            147   _DAC1H          DATA 0x8a
0000            148   _DAC1L          DATA 0x89
0000            149   _DAC2CF0        DATA 0x95
0000            150   _DAC2CF1        DATA 0x96
0000            151   _DAC2H          DATA 0x8c
0000            152   _DAC2L          DATA 0x8b
0000            153   _DAC3CF0        DATA 0x9a
0000            154   _DAC3CF1        DATA 0x9c
0000            155   _DAC3H          DATA 0x8e
0000            156   _DAC3L          DATA 0x8d
0000            157   _DACGCF0        DATA 0x88
0000            158   _DACGCF1        DATA 0x98
0000            159   _DACGCF2        DATA 0xa2
0000            160   _DERIVID        DATA 0xad
0000            161   _DEVICEID       DATA 0xb5
0000            162   _DPH            DATA 0x83
0000            163   _DPL            DATA 0x82
0000            164   _EIE1           DATA 0xe6
0000            165   _EIE2           DATA 0xf3
0000            166   _EIP1           DATA 0xbb
0000            167   _EIP1H          DATA 0xee
0000            168   _EIP2           DATA 0xed
0000            169   _EIP2H          DATA 0xf6
0000            170   _EMI0CN         DATA 0xe7
0000            171   _FLKEY          DATA 0xb7
0000            172   _HFO0CAL        DATA 0xc7
0000            173   _HFO1CAL        DATA 0xd6
0000            174   _HFOCN          DATA 0xef
0000            175   _I2C0ADM        DATA 0xff
0000            176   _I2C0CN0        DATA 0xba
0000            177   _I2C0DIN        DATA 0xbc
0000            178   _I2C0DOUT       DATA 0xbb
0000            179   _I2C0FCN0       DATA 0xad
0000            180   _I2C0FCN1       DATA 0xab
0000            181   _I2C0FCT        DATA 0xf5
0000            182   _I2C0SLAD       DATA 0xbd
0000            183   _I2C0STAT       DATA 0xb9
0000            184   _IE             DATA 0xa8
0000            185   _IP             DATA 0xb8
0000            186   _IPH            DATA 0xf2
0000            187   _IT01CF         DATA 0xe4
0000            188   _LFO0CN         DATA 0xb1
0000            189   _P0             DATA 0x80
0000            190   _P0MASK         DATA 0xfe
0000            191   _P0MAT          DATA 0xfd
0000            192   _P0MDIN         DATA 0xf1
0000            193   _P0MDOUT        DATA 0xa4
0000            194   _P0SKIP         DATA 0xd4
0000            195   _P1             DATA 0x90
0000            196   _P1MASK         DATA 0xee
0000            197   _P1MAT          DATA 0xed
0000            198   _P1MDIN         DATA 0xf2
0000            199   _P1MDOUT        DATA 0xa5
0000            200   _P1SKIP         DATA 0xd5
0000            201   _P2             DATA 0xa0
0000            202   _P2MASK         DATA 0xfc
0000            203   _P2MAT          DATA 0xfb
0000            204   _P2MDIN         DATA 0xf3
0000            205   _P2MDOUT        DATA 0xa6
0000            206   _P2SKIP         DATA 0xcc
0000            207   _P3             DATA 0xb0
0000            208   _P3MDIN         DATA 0xf4
0000            209   _P3MDOUT        DATA 0x9c
0000            210   _PCA0CENT       DATA 0x9e
0000            211   _PCA0CLR        DATA 0x9c
0000            212   _PCA0CN0        DATA 0xd8
0000            213   _PCA0CPH0       DATA 0xfc
0000            214   _PCA0CPH1       DATA 0xea
0000            215   _PCA0CPH2       DATA 0xec
0000            216   _PCA0CPH3       DATA 0xf5
0000            217   _PCA0CPH4       DATA 0x85
0000            218   _PCA0CPH5       DATA 0xde
0000            219   _PCA0CPL0       DATA 0xfb
0000            220   _PCA0CPL1       DATA 0xe9
0000            221   _PCA0CPL2       DATA 0xeb
0000            222   _PCA0CPL3       DATA 0xf4
0000            223   _PCA0CPL4       DATA 0x84
0000            224   _PCA0CPL5       DATA 0xdd
0000            225   _PCA0CPM0       DATA 0xda
0000            226   _PCA0CPM1       DATA 0xdb
0000            227   _PCA0CPM2       DATA 0xdc
0000            228   _PCA0CPM3       DATA 0xae
0000            229   _PCA0CPM4       DATA 0xaf
0000            230   _PCA0CPM5       DATA 0xcc
0000            231   _PCA0H          DATA 0xfa
0000            232   _PCA0L          DATA 0xf9
0000            233   _PCA0MD         DATA 0xd9
0000            234   _PCA0POL        DATA 0x96
0000            235   _PCA0PWM        DATA 0xf7
0000            236   _PCON0          DATA 0x87
0000            237   _PCON1          DATA 0xcd
0000            238   _PFE0CN         DATA 0xc1
0000            239   _PRTDRV         DATA 0xf6
0000            240   _PSCTL          DATA 0x8f
0000            241   _PSTAT0         DATA 0xaa
0000            242   _PSW            DATA 0xd0
0000            243   _REF0CN         DATA 0xd1
0000            244   _REG0CN         DATA 0xc9
0000            245   _REVID          DATA 0xb6
0000            246   _RSTSRC         DATA 0xef
0000            247   _SBCON1         DATA 0x94
0000            248   _SBRLH1         DATA 0x96
0000            249   _SBRLL1         DATA 0x95
0000            250   _SBUF           DATA 0x99
0000            251   _SBUF0          DATA 0x99
0000            252   _SBUF1          DATA 0x92
0000            253   _SCON           DATA 0x98
0000            254   _SCON0          DATA 0x98
0000            255   _SCON1          DATA 0xc8
0000            256   _SFRPAGE        DATA 0xa7
0000            257   _SFRPGCN        DATA 0xbc
0000            258   _SFRSTACK       DATA 0xd7
0000            259   _SMB0ADM        DATA 0xd6
0000            260   _SMB0ADR        DATA 0xd7
0000            261   _SMB0CF         DATA 0xc1
0000            262   _SMB0CN0        DATA 0xc0
0000            263   _SMB0DAT        DATA 0xc2
0000            264   _SMB0FCN0       DATA 0xc3
0000            265   _SMB0FCN1       DATA 0xc4
0000            266   _SMB0FCT        DATA 0xef
0000            267   _SMB0RXLN       DATA 0xc5
0000            268   _SMB0TC         DATA 0xac
0000            269   _SMOD1          DATA 0x93
0000            270   _SP             DATA 0x81
0000            271   _SPI0CFG        DATA 0xa1
0000            272   _SPI0CKR        DATA 0xa2
0000            273   _SPI0CN0        DATA 0xf8
0000            274   _SPI0DAT        DATA 0xa3
0000            275   _SPI0FCN0       DATA 0x9a
0000            276   _SPI0FCN1       DATA 0x9b
0000            277   _SPI0FCT        DATA 0xf7
0000            278   _SPI0PCF        DATA 0xdf
0000            279   _TCON           DATA 0x88
0000            280   _TH0            DATA 0x8c
0000            281   _TH1            DATA 0x8d
0000            282   _TL0            DATA 0x8a
0000            283   _TL1            DATA 0x8b
0000            284   _TMOD           DATA 0x89
0000            285   _TMR2CN0        DATA 0xc8
0000            286   _TMR2CN1        DATA 0xfd
0000            287   _TMR2H          DATA 0xcf
0000            288   _TMR2L          DATA 0xce
0000            289   _TMR2RLH        DATA 0xcb
0000            290   _TMR2RLL        DATA 0xca
0000            291   _TMR3CN0        DATA 0x91
0000            292   _TMR3CN1        DATA 0xfe
0000            293   _TMR3H          DATA 0x95
0000            294   _TMR3L          DATA 0x94
0000            295   _TMR3RLH        DATA 0x93
0000            296   _TMR3RLL        DATA 0x92
0000            297   _TMR4CN0        DATA 0x98
0000            298   _TMR4CN1        DATA 0xff
0000            299   _TMR4H          DATA 0xa5
0000            300   _TMR4L          DATA 0xa4
0000            301   _TMR4RLH        DATA 0xa3
0000            302   _TMR4RLL        DATA 0xa2
0000            303   _TMR5CN0        DATA 0xc0
0000            304   _TMR5CN1        DATA 0xf1
0000            305   _TMR5H          DATA 0xd5
0000            306   _TMR5L          DATA 0xd4
0000            307   _TMR5RLH        DATA 0xd3
0000            308   _TMR5RLL        DATA 0xd2
0000            309   _UART0PCF       DATA 0xd9
0000            310   _UART1FCN0      DATA 0x9d
0000            311   _UART1FCN1      DATA 0xd8
0000            312   _UART1FCT       DATA 0xfa
0000            313   _UART1LIN       DATA 0x9e
0000            314   _UART1PCF       DATA 0xda
0000            315   _VDM0CN         DATA 0xff
0000            316   _WDTCN          DATA 0x97
0000            317   _XBR0           DATA 0xe1
0000            318   _XBR1           DATA 0xe2
0000            319   _XBR2           DATA 0xe3
0000            320   _XOSC0CN        DATA 0x86
0000            321   _DPTR           DATA 0x8382
0000            322   _TMR2RL         DATA 0xcbca
0000            323   _TMR3RL         DATA 0x9392
0000            324   _TMR4RL         DATA 0xa3a2
0000            325   _TMR5RL         DATA 0xd3d2
0000            326   _TMR0           DATA 0x8c8a
0000            327   _TMR1           DATA 0x8d8b
0000            328   _TMR2           DATA 0xcfce
0000            329   _TMR3           DATA 0x9594
0000            330   _TMR4           DATA 0xa5a4
0000            331   _TMR5           DATA 0xd5d4
0000            332   _SBRL1          DATA 0x9695
0000            333   _PCA0           DATA 0xfaf9
0000            334   _PCA0CP0        DATA 0xfcfb
0000            335   _PCA0CP1        DATA 0xeae9
0000            336   _PCA0CP2        DATA 0xeceb
0000            337   _PCA0CP3        DATA 0xf5f4
0000            338   _PCA0CP4        DATA 0x8584
0000            339   _PCA0CP5        DATA 0xdedd
0000            340   _ADC0ASA        DATA 0xb6b5
0000            341   _ADC0GT         DATA 0xc4c3
0000            342   _ADC0           DATA 0xbebd
0000            343   _ADC0LT         DATA 0xc6c5
0000            344   _DAC0           DATA 0x8584
0000            345   _DAC1           DATA 0x8a89
0000            346   _DAC2           DATA 0x8c8b
0000            347   _DAC3           DATA 0x8e8d
0000            348   ;--------------------------------------------------------
0000            349   ; special function bits
0000            350   ;--------------------------------------------------------
0000            351   _ACC_0          BIT 0xe0
0000            352   _ACC_1          BIT 0xe1
0000            353   _ACC_2          BIT 0xe2
0000            354   _ACC_3          BIT 0xe3
0000            355   _ACC_4          BIT 0xe4
0000            356   _ACC_5          BIT 0xe5
0000            357   _ACC_6          BIT 0xe6
0000            358   _ACC_7          BIT 0xe7
0000            359   _TEMPE          BIT 0xe8
0000            360   _ADGN0          BIT 0xe9
0000            361   _ADGN1          BIT 0xea
0000            362   _ADWINT         BIT 0xeb
0000            363   _ADBUSY         BIT 0xec
0000            364   _ADINT          BIT 0xed
0000            365   _IPOEN          BIT 0xee
0000            366   _ADEN           BIT 0xef
0000            367   _B_0            BIT 0xf0
0000            368   _B_1            BIT 0xf1
0000            369   _B_2            BIT 0xf2
0000            370   _B_3            BIT 0xf3
0000            371   _B_4            BIT 0xf4
0000            372   _B_5            BIT 0xf5
0000            373   _B_6            BIT 0xf6
0000            374   _B_7            BIT 0xf7
0000            375   _C0FIF          BIT 0xe8
0000            376   _C0RIF          BIT 0xe9
0000            377   _C1FIF          BIT 0xea
0000            378   _C1RIF          BIT 0xeb
0000            379   _C2FIF          BIT 0xec
0000            380   _C2RIF          BIT 0xed
0000            381   _C3FIF          BIT 0xee
0000            382   _C3RIF          BIT 0xef
0000            383   _D1SRC0         BIT 0x88
0000            384   _D1SRC1         BIT 0x89
0000            385   _D1AMEN         BIT 0x8a
0000            386   _D01REFSL       BIT 0x8b
0000            387   _D3SRC0         BIT 0x8c
0000            388   _D3SRC1         BIT 0x8d
0000            389   _D3AMEN         BIT 0x8e
0000            390   _D23REFSL       BIT 0x8f
0000            391   _D0UDIS         BIT 0x98
0000            392   _D1UDIS         BIT 0x99
0000            393   _D2UDIS         BIT 0x9a
0000            394   _D3UDIS         BIT 0x9b
0000            395   _EX0            BIT 0xa8
0000            396   _ET0            BIT 0xa9
0000            397   _EX1            BIT 0xaa
0000            398   _ET1            BIT 0xab
0000            399   _ES0            BIT 0xac
0000            400   _ET2            BIT 0xad
0000            401   _ESPI0          BIT 0xae
0000            402   _EA             BIT 0xaf
0000            403   _PX0            BIT 0xb8
0000            404   _PT0            BIT 0xb9
0000            405   _PX1            BIT 0xba
0000            406   _PT1            BIT 0xbb
0000            407   _PS0            BIT 0xbc
0000            408   _PT2            BIT 0xbd
0000            409   _PSPI0          BIT 0xbe
0000            410   _P0_0           BIT 0x80
0000            411   _P0_1           BIT 0x81
0000            412   _P0_2           BIT 0x82
0000            413   _P0_3           BIT 0x83
0000            414   _P0_4           BIT 0x84
0000            415   _P0_5           BIT 0x85
0000            416   _P0_6           BIT 0x86
0000            417   _P0_7           BIT 0x87
0000            418   _P1_0           BIT 0x90
0000            419   _P1_1           BIT 0x91
0000            420   _P1_2           BIT 0x92
0000            421   _P1_3           BIT 0x93
0000            422   _P1_4           BIT 0x94
0000            423   _P1_5           BIT 0x95
0000            424   _P1_6           BIT 0x96
0000            425   _P1_7           BIT 0x97
0000            426   _P2_0           BIT 0xa0
0000            427   _P2_1           BIT 0xa1
0000            428   _P2_2           BIT 0xa2
0000            429   _P2_3           BIT 0xa3
0000            430   _P2_4           BIT 0xa4
0000            431   _P2_5           BIT 0xa5
0000            432   _P2_6           BIT 0xa6
0000            433   _P3_0           BIT 0xb0
0000            434   _P3_1           BIT 0xb1
0000            435   _P3_2           BIT 0xb2
0000            436   _P3_3           BIT 0xb3
0000            437   _P3_4           BIT 0xb4
0000            438   _P3_7           BIT 0xb7
0000            439   _CCF0           BIT 0xd8
0000            440   _CCF1           BIT 0xd9
0000            441   _CCF2           BIT 0xda
0000            442   _CCF3           BIT 0xdb
0000            443   _CCF4           BIT 0xdc
0000            444   _CCF5           BIT 0xdd
0000            445   _CR             BIT 0xde
0000            446   _CF             BIT 0xdf
0000            447   _PARITY         BIT 0xd0
0000            448   _F1             BIT 0xd1
0000            449   _OV             BIT 0xd2
0000            450   _RS0            BIT 0xd3
0000            451   _RS1            BIT 0xd4
0000            452   _F0             BIT 0xd5
0000            453   _AC             BIT 0xd6
0000            454   _CY             BIT 0xd7
0000            455   _RI             BIT 0x98
0000            456   _TI             BIT 0x99
0000            457   _RB8            BIT 0x9a
0000            458   _TB8            BIT 0x9b
0000            459   _REN            BIT 0x9c
0000            460   _CE             BIT 0x9d
0000            461   _SMODE          BIT 0x9e
0000            462   _RI1            BIT 0xc8
0000            463   _TI1            BIT 0xc9
0000            464   _RBX1           BIT 0xca
0000            465   _TBX1           BIT 0xcb
0000            466   _REN1           BIT 0xcc
0000            467   _PERR1          BIT 0xcd
0000            468   _OVR1           BIT 0xce
0000            469   _SI             BIT 0xc0
0000            470   _ACK            BIT 0xc1
0000            471   _ARBLOST        BIT 0xc2
0000            472   _ACKRQ          BIT 0xc3
0000            473   _STO            BIT 0xc4
0000            474   _STA            BIT 0xc5
0000            475   _TXMODE         BIT 0xc6
0000            476   _MASTER         BIT 0xc7
0000            477   _SPIEN          BIT 0xf8
0000            478   _TXNF           BIT 0xf9
0000            479   _NSSMD0         BIT 0xfa
0000            480   _NSSMD1         BIT 0xfb
0000            481   _RXOVRN         BIT 0xfc
0000            482   _MODF           BIT 0xfd
0000            483   _WCOL           BIT 0xfe
0000            484   _SPIF           BIT 0xff
0000            485   _IT0            BIT 0x88
0000            486   _IE0            BIT 0x89
0000            487   _IT1            BIT 0x8a
0000            488   _IE1            BIT 0x8b
0000            489   _TR0            BIT 0x8c
0000            490   _TF0            BIT 0x8d
0000            491   _TR1            BIT 0x8e
0000            492   _TF1            BIT 0x8f
0000            493   _T2XCLK0        BIT 0xc8
0000            494   _T2XCLK1        BIT 0xc9
0000            495   _TR2            BIT 0xca
0000            496   _T2SPLIT        BIT 0xcb
0000            497   _TF2CEN         BIT 0xcc
0000            498   _TF2LEN         BIT 0xcd
0000            499   _TF2L           BIT 0xce
0000            500   _TF2H           BIT 0xcf
0000            501   _T4XCLK0        BIT 0x98
0000            502   _T4XCLK1        BIT 0x99
0000            503   _TR4            BIT 0x9a
0000            504   _T4SPLIT        BIT 0x9b
0000            505   _TF4CEN         BIT 0x9c
0000            506   _TF4LEN         BIT 0x9d
0000            507   _TF4L           BIT 0x9e
0000            508   _TF4H           BIT 0x9f
0000            509   _T5XCLK0        BIT 0xc0
0000            510   _T5XCLK1        BIT 0xc1
0000            511   _TR5            BIT 0xc2
0000            512   _T5SPLIT        BIT 0xc3
0000            513   _TF5CEN         BIT 0xc4
0000            514   _TF5LEN         BIT 0xc5
0000            515   _TF5L           BIT 0xc6
0000            516   _TF5H           BIT 0xc7
0000            517   _RIE            BIT 0xd8
0000            518   _RXTO0          BIT 0xd9
0000            519   _RXTO1          BIT 0xda
0000            520   _RFRQ           BIT 0xdb
0000            521   _TIE            BIT 0xdc
0000            522   _TXHOLD         BIT 0xdd
0000            523   _TXNF1          BIT 0xde
0000            524   _TFRQ           BIT 0xdf
0000            525   ;--------------------------------------------------------
0000            526   ; overlayable register banks
0000            527   ;--------------------------------------------------------
0000            528            rbank0 segment data overlay
0000            529   ;--------------------------------------------------------
0000            530   ; internal ram data
0000            531   ;--------------------------------------------------------
0000            532            rseg R_DSEG
0000            533   _pwm_count:
0000            534            ds 1
0001            535   _pwm_count1:
0001            536            ds 1
0002            537   _pwm_count2:
0002            538            ds 1
0003            539   _pwm_count3:
0003            540            ds 1
0004            541   _pwmSig1:
0004            542            ds 2
0006            543   _pwmSig2:
0006            544            ds 2
0008            545   _pwmSig3:
0008            546            ds 2
000A            547   _pwmSig4:
000A            548            ds 2
000C            549   _pwmSig5:
000C            550            ds 2
000E            551   _pwmSig6:
000E            552            ds 2
0010            553   _cartMoveF:
0010            554            ds 2
0012            555   _cartMoveB:
0012            556            ds 2
0014            557   _flag:
0014            558            ds 2
0016            559   _claw_flag:
0016            560            ds 2
0018            561   _stop:
0018            562            ds 8
0020            563   _forward:
0020            564            ds 8
0028            565   _backward:
0028            566            ds 8
0030            567   _left:
0030            568            ds 8
0038            569   _right:
0038            570            ds 8
0040            571   _command:
0040            572            ds 8
0048            573   _x:
0048            574            ds 2
004A            575   _bluetoothMaze_PARM_2:
004A            576            ds 2
004C            577   _bluetoothMaze_xcoord_1_119:
004C            578            ds 2
004E            579   _bluetoothMaze_x_1_120:
004E            580            ds 2
0050            581   _bluetoothMaze_y_1_120:
0050            582            ds 2
0052            583   _bluetoothMaze_threshold_1_120:
0052            584            ds 4
0056            585   _main_pir_voltage_1_135:
0056            586            ds 4
005A            587   _main_xcoord_1_135:
005A            588            ds 1
005B            589   _main_ycoord_1_135:
005B            590            ds 1
005C            591   _main_temp_1_135:
005C            592            ds 4
0060            593   _main_getCoord_1_135:
0060            594            ds 2
0062            595   _main_sloc0_1_0:
0062            596            ds 4
0066            597   ;--------------------------------------------------------
0066            598   ; overlayable items in internal ram 
0066            599   ;--------------------------------------------------------
0000            600            rseg    R_OSEG
0000            601            rseg    R_OSEG
0000            602            rseg    R_OSEG
0000            603   _InitPinADC_PARM_2:
0000            604            ds 1
0001            605            rseg    R_OSEG
0001            606   _arrayEqual_PARM_2:
0001            607            ds 2
0003            608   _arrayEqual_PARM_3:
0003            609            ds 3
0006            610   _arrayEqual_arr1_1_80:
0006            611            ds 3
0009            612            rseg    R_OSEG
0009            613            rseg    R_OSEG
0009            614   ;--------------------------------------------------------
0009            615   ; indirectly addressable internal ram data
0009            616   ;--------------------------------------------------------
0000            617            rseg R_ISEG
0000            618   ;--------------------------------------------------------
0000            619   ; absolute internal ram data
0000            620   ;--------------------------------------------------------
0000            621            DSEG
0000            622   ;--------------------------------------------------------
0000            623   ; bit data
0000            624   ;--------------------------------------------------------
0000            625            rseg R_BSEG
0000            626   _Timer2_ISR_sloc0_1_0:
0000            627            DBIT    1
0001            628   ;--------------------------------------------------------
0001            629   ; paged external ram data
0001            630   ;--------------------------------------------------------
0000            631            rseg R_PSEG
0000            632   ;--------------------------------------------------------
0000            633   ; external ram data
0000            634   ;--------------------------------------------------------
0000            635            rseg R_XSEG
0000            636   ;--------------------------------------------------------
0000            637   ; absolute external ram data
0000            638   ;--------------------------------------------------------
0000            639            XSEG
0000            640   ;--------------------------------------------------------
0000            641   ; external initialized ram data
0000            642   ;--------------------------------------------------------
0000            643            rseg R_IXSEG
0000            644            rseg R_HOME
0000            645            rseg R_GSINIT
0000            646            rseg R_CSEG
0000            647   ;--------------------------------------------------------
0000            648   ; Reset entry point and interrupt vectors
0000            649   ;--------------------------------------------------------
0000            650            CSEG at 0x0000
0000 020100     651            ljmp    _crt0
002B            652            CSEG at 0x002b
002B 020100     653            ljmp    _Timer2_ISR
002E            654   ;--------------------------------------------------------
002E            655   ; global & static initialisations
002E            656   ;--------------------------------------------------------
0000            657            rseg R_HOME
0000            658            rseg R_GSINIT
0000            659            rseg R_GSINIT
0000            660   ;--------------------------------------------------------
0000            661   ; data variables initialization
0000            662   ;--------------------------------------------------------
0000            663            rseg R_DINIT
0000            664   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:62: volatile unsigned char pwm_count = 0; // used in the timer 2 ISR
0000 752800     665            mov     _pwm_count,#0x00
0003            666   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:63: volatile unsigned char pwm_count1 = 0; // this will be usec in the timer 3 ISR
0003 75E800     667            mov     _pwm_count1,#0x00
0006            668   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:64: volatile unsigned char pwm_count2 = 0; // this will be used in the timer 4 ISR
0006 75A800     669            mov     _pwm_count2,#0x00
0009            670   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:65: volatile unsigned char pwm_count3 = 0; //
0009 756800     671            mov     _pwm_count3,#0x00
000C            672   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:80: volatile int flag = 0;
000C E4         673            clr     a
000D F528       674            mov     _flag,a
000F F529       675            mov     (_flag + 1),a
0011            676   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:81: volatile int claw_flag = 0;
0011 E4         677            clr     a
0012 F5E8       678            mov     _claw_flag,a
0014 F5E9       679            mov     (_claw_flag + 1),a
0016            680   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:82: int stop[]={0,0,0,0};
0016 75A800     681            mov     _stop,#0x00
0019 75A900     682            mov     (_stop + 1),#0x00
001C 75AA00     683            mov     (_stop + 0x0002),#0x00
001F 75AB00     684            mov     ((_stop + 0x0002) + 1),#0x00
0022 75AC00     685            mov     (_stop + 0x0004),#0x00
0025 75AD00     686            mov     ((_stop + 0x0004) + 1),#0x00
0028 75AE00     687            mov     (_stop + 0x0006),#0x00
002B 75AF00     688            mov     ((_stop + 0x0006) + 1),#0x00
002E            689   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:83: int forward[]={1,1,1,1};
002E 756801     690            mov     _forward,#0x01
0031 756900     691            mov     (_forward + 1),#0x00
0034 756A01     692            mov     (_forward + 0x0002),#0x01
0037 756B00     693            mov     ((_forward + 0x0002) + 1),#0x00
003A 756C01     694            mov     (_forward + 0x0004),#0x01
003D 756D00     695            mov     ((_forward + 0x0004) + 1),#0x00
0040 756E01     696            mov     (_forward + 0x0006),#0x01
0043 756F00     697            mov     ((_forward + 0x0006) + 1),#0x00
0046            698   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:84: int backward[]={1,0,1,1};
0046 752801     699            mov     _backward,#0x01
0049 752900     700            mov     (_backward + 1),#0x00
004C 752A00     701            mov     (_backward + 0x0002),#0x00
004F 752B00     702            mov     ((_backward + 0x0002) + 1),#0x00
0052 752C01     703            mov     (_backward + 0x0004),#0x01
0055 752D00     704            mov     ((_backward + 0x0004) + 1),#0x00
0058 752E01     705            mov     (_backward + 0x0006),#0x01
005B 752F00     706            mov     ((_backward + 0x0006) + 1),#0x00
005E            707   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:85: int left[]={1,0,0,1};
005E 75E801     708            mov     _left,#0x01
0061 75E900     709            mov     (_left + 1),#0x00
0064 75EA00     710            mov     (_left + 0x0002),#0x00
0067 75EB00     711            mov     ((_left + 0x0002) + 1),#0x00
006A 75EC00     712            mov     (_left + 0x0004),#0x00
006D 75ED00     713            mov     ((_left + 0x0004) + 1),#0x00
0070 75EE01     714            mov     (_left + 0x0006),#0x01
0073 75EF00     715            mov     ((_left + 0x0006) + 1),#0x00
0076            716   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:86: int right[]={1,0,0,0};
0076 75A801     717            mov     _right,#0x01
0079 75A900     718            mov     (_right + 1),#0x00
007C 75AA00     719            mov     (_right + 0x0002),#0x00
007F 75AB00     720            mov     ((_right + 0x0002) + 1),#0x00
0082 75AC00     721            mov     (_right + 0x0004),#0x00
0085 75AD00     722            mov     ((_right + 0x0004) + 1),#0x00
0088 75AE00     723            mov     (_right + 0x0006),#0x00
008B 75AF00     724            mov     ((_right + 0x0006) + 1),#0x00
008E            725   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:88: int command[4] = {0,0,0,0};
008E 756800     726            mov     _command,#0x00
0091 756900     727            mov     (_command + 1),#0x00
0094 756A00     728            mov     (_command + 0x0002),#0x00
0097 756B00     729            mov     ((_command + 0x0002) + 1),#0x00
009A 756C00     730            mov     (_command + 0x0004),#0x00
009D 756D00     731            mov     ((_command + 0x0004) + 1),#0x00
00A0 756E00     732            mov     (_command + 0x0006),#0x00
00A3 756F00     733            mov     ((_command + 0x0006) + 1),#0x00
00A6            734   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:90: volatile unsigned int x = 2;
00A6 752802     735            mov     _x,#0x02
00A9 E4         736            clr     a
00AA F529       737            mov     (_x + 1),a
00AC            738            ; The linker places a 'ret' at the end of segment R_DINIT.
00AC            739   ;--------------------------------------------------------
00AC            740   ; code
00AC            741   ;--------------------------------------------------------
0000            742            rseg R_CSEG
0000            743   ;------------------------------------------------------------
0000            744   ;Allocation info for local variables in function '_c51_external_startup'
0000            745   ;------------------------------------------------------------
0000            746   ;------------------------------------------------------------
0000            747   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:92: char _c51_external_startup(void)
0000            748   ;        -----------------------------------------
0000            749   ;         function _c51_external_startup
0000            750   ;        -----------------------------------------
0000            751   __c51_external_startup:
0000            752            using   0
0000            753   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:95: SFRPAGE = 0x00;
0000 75A700     754            mov     _SFRPAGE,#0x00
0003            755   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:96: WDTCN = 0xDE; //First key
0003 7597DE     756            mov     _WDTCN,#0xDE
0006            757   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:97: WDTCN = 0xAD; //Second key
0006 7597AD     758            mov     _WDTCN,#0xAD
0009            759   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:99: VDM0CN = 0x80;       // enable VDD monitor
0009 75FF80     760            mov     _VDM0CN,#0x80
000C            761   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:100: RSTSRC = 0x02 | 0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     762            mov     _RSTSRC,#0x06
000F            763   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:107: SFRPAGE = 0x10;
000F 75A710     764            mov     _SFRPAGE,#0x10
0012            765   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:108: PFE0CN = 0x20; // SYSCLK < 75 MHz.
0012 75C120     766            mov     _PFE0CN,#0x20
0015            767   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:109: SFRPAGE = 0x00;
0015 75A700     768            mov     _SFRPAGE,#0x00
0018            769   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:130: CLKSEL = 0x00;
0018 75A900     770            mov     _CLKSEL,#0x00
001B            771   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:131: CLKSEL = 0x00;
001B 75A900     772            mov     _CLKSEL,#0x00
001E            773   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:132: while ((CLKSEL & 0x80) == 0);
001E            774   L002001?:
001E E5A9       775            mov     a,_CLKSEL
0020 30E718     776            jnb     acc.7,L002001?
0023            777   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:133: CLKSEL = 0x03;
0023 75A903     778            mov     _CLKSEL,#0x03
0026            779   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:134: CLKSEL = 0x03;
0026 75A903     780            mov     _CLKSEL,#0x03
0029            781   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:135: while ((CLKSEL & 0x80) == 0);
0029            782   L002004?:
0029 E5A9       783            mov     a,_CLKSEL
002B 30E798     784            jnb     acc.7,L002004?
002E            785   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:140: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     786            orl     _P0MDOUT,#0x10
0031            787   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:141: XBR0 = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)
0031 75E101     788            mov     _XBR0,#0x01
0034            789   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:142: XBR1 = 0X00;
0034 75E200     790            mov     _XBR1,#0x00
0037            791   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:143: XBR2 = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     792            mov     _XBR2,#0x40
003A            793   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:149: SCON0 = 0x10;
003A 759810     794            mov     _SCON0,#0x10
003D            795   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:150: TH1 = 0x100 - ((SYSCLK / BAUDRATE) / (2L * 12L));
003D 758DE6     796            mov     _TH1,#0xE6
0040            797   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:151: TL1 = TH1;      // Init Timer1
0040 858D8B     798            mov     _TL1,_TH1
0043            799   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:152: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     800            anl     _TMOD,#0x0F
0046            801   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:153: TMOD |= 0x20;
0046 438920     802            orl     _TMOD,#0x20
0049            803   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:154: TR1 = 1; // START Timer1
0049 D28E       804            setb    _TR1
004B            805   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:155: TI = 1;  // Indicate TX0 ready
004B D299       806            setb    _TI
004D            807   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:158: TMR2CN0 = 0x00;   // Stop Timer2; Clear TF2;
004D 75C800     808            mov     _TMR2CN0,#0x00
0050            809   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:159: CKCON0 |= 0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     810            orl     _CKCON0,#0x10
0053            811   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:160: TMR2RL = (0x10000L - (SYSCLK / 10000L)); // Initialize reload value
0053 75CAE0     812            mov     _TMR2RL,#0xE0
0056 75CBE3     813            mov     (_TMR2RL >> 8),#0xE3
0059            814   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:161: TMR2 = 0xffff;   // Set to reload immediately
0059 75CEFF     815            mov     _TMR2,#0xFF
005C 75CFFF     816            mov     (_TMR2 >> 8),#0xFF
005F            817   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:162: ET2 = 1;         // Enable Timer2 interrupts
005F D2AD       818            setb    _ET2
0061            819   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:163: TR2 = 1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       820            setb    _TR2
0063            821   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:181: EA = 1; // Enable interrupts
0063 D2AF       822            setb    _EA
0065            823   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:184: return 0;
0065 758200     824            mov     dpl,#0x00
0068 22         825            ret
0069            826   ;------------------------------------------------------------
0069            827   ;Allocation info for local variables in function 'UART1_Init'
0069            828   ;------------------------------------------------------------
0069            829   ;baudrate                  Allocated to registers r2 r3 r4 r5 
0069            830   ;------------------------------------------------------------
0069            831   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:187: void UART1_Init (unsigned long baudrate)
0069            832   ;        -----------------------------------------
0069            833   ;         function UART1_Init
0069            834   ;        -----------------------------------------
0069            835   _UART1_Init:
0069 AA82       836            mov     r2,dpl
006B AB83       837            mov     r3,dph
006D ACF0       838            mov     r4,b
006F FD         839            mov     r5,a
0070            840   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:189: SFRPAGE = 0x20;
0070 75A720     841            mov     _SFRPAGE,#0x20
0073            842   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:190: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
0073 75930C     843            mov     _SMOD1,#0x0C
0076            844   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:191: SCON1 = 0x10;
0076 75C810     845            mov     _SCON1,#0x10
0079            846   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:192: SBCON1 =0x00;   // disable baud rate generator
0079 759400     847            mov     _SBCON1,#0x00
007C            848   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:193: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
007C 8A00       849            mov     __divulong_PARM_2,r2
007E 8B01       850            mov     (__divulong_PARM_2 + 1),r3
0080 8C02       851            mov     (__divulong_PARM_2 + 2),r4
0082 8D03       852            mov     (__divulong_PARM_2 + 3),r5
0084 90A200     853            mov     dptr,#0xA200
0087 75F04A     854            mov     b,#0x4A
008A 7404       855            mov     a,#0x04
008C 120100     856            lcall   __divulong
008F AA82       857            mov     r2,dpl
0091 AB83       858            mov     r3,dph
0093 ACF0       859            mov     r4,b
0095 FD         860            mov     r5,a
0096 750018     861            mov     __divulong_PARM_2,#0x18
0099 E4         862            clr     a
009A F501       863            mov     (__divulong_PARM_2 + 1),a
009C F502       864            mov     (__divulong_PARM_2 + 2),a
009E F503       865            mov     (__divulong_PARM_2 + 3),a
00A0 8A82       866            mov     dpl,r2
00A2 8B83       867            mov     dph,r3
00A4 8CF0       868            mov     b,r4
00A6 ED         869            mov     a,r5
00A7 120100     870            lcall   __divulong
00AA AA82       871            mov     r2,dpl
00AC AB83       872            mov     r3,dph
00AE ACF0       873            mov     r4,b
00B0 FD         874            mov     r5,a
00B1 E4         875            clr     a
00B2 C3         876            clr     c
00B3 9A         877            subb    a,r2
00B4 FA         878            mov     r2,a
00B5 E4         879            clr     a
00B6 9B         880            subb    a,r3
00B7 FB         881            mov     r3,a
00B8 7401       882            mov     a,#0x01
00BA 9C         883            subb    a,r4
00BB E4         884            clr     a
00BC 9D         885            subb    a,r5
00BD 8A95       886            mov     _SBRL1,r2
00BF 8B96       887            mov     (_SBRL1 >> 8),r3
00C1            888   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:194: TI1 = 1; // indicate ready for TX
00C1 D2C9       889            setb    _TI1
00C3            890   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:195: SBCON1 |= 0x40;   // enable baud rate generator
00C3 439440     891            orl     _SBCON1,#0x40
00C6            892   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:196: SFRPAGE = 0x00;
00C6 75A700     893            mov     _SFRPAGE,#0x00
00C9 22         894            ret
00CA            895   ;------------------------------------------------------------
00CA            896   ;Allocation info for local variables in function 'Timer3us'
00CA            897   ;------------------------------------------------------------
00CA            898   ;us                        Allocated to registers r2 r3 
00CA            899   ;i                         Allocated to registers r4 r5 
00CA            900   ;------------------------------------------------------------
00CA            901   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:200: void Timer3us(unsigned int us)
00CA            902   ;        -----------------------------------------
00CA            903   ;         function Timer3us
00CA            904   ;        -----------------------------------------
00CA            905   _Timer3us:
00CA AA82       906            mov     r2,dpl
00CC AB83       907            mov     r3,dph
00CE            908   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:205: CKCON0|=0b_0100_0000;
00CE 438E40     909            orl     _CKCON0,#0x40
00D1            910   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:207: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
00D1 7592B8     911            mov     _TMR3RL,#0xB8
00D4 7593FF     912            mov     (_TMR3RL >> 8),#0xFF
00D7            913   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:208: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
00D7 859294     914            mov     _TMR3,_TMR3RL
00DA 859395     915            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
00DD            916   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:210: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
00DD 759104     917            mov     _TMR3CN0,#0x04
00E0            918   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:211: for (i = 0; i < us; i++)       // Count <us> overflows
00E0 7C00       919            mov     r4,#0x00
00E2 7D00       920            mov     r5,#0x00
00E4            921   L004004?:
00E4 C3         922            clr     c
00E5 EC         923            mov     a,r4
00E6 9A         924            subb    a,r2
00E7 ED         925            mov     a,r5
00E8 9B         926            subb    a,r3
00E9 5001       927            jnc     L004007?
00EB            928   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:213: while (!(TMR3CN0 & 0x80));  // Wait for overflow
00EB            929   L004001?:
00EB E591       930            mov     a,_TMR3CN0
00ED 30E7A8     931            jnb     acc.7,L004001?
00F0            932   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:214: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
00F0 53917F     933            anl     _TMR3CN0,#0x7F
00F3            934   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:211: for (i = 0; i < us; i++)       // Count <us> overflows
00F3 0C         935            inc     r4
00F4 BC0028     936            cjne    r4,#0x00,L004004?
00F7 0D         937            inc     r5
00F8 8001       938            sjmp    L004004?
00FA            939   L004007?:
00FA            940   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:216: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
00FA 759100     941            mov     _TMR3CN0,#0x00
00FD 22         942            ret
00FE            943   ;------------------------------------------------------------
00FE            944   ;Allocation info for local variables in function 'waitms'
00FE            945   ;------------------------------------------------------------
00FE            946   ;ms                        Allocated to registers r2 r3 
00FE            947   ;j                         Allocated to registers r4 r5 
00FE            948   ;k                         Allocated to registers r6 
00FE            949   ;------------------------------------------------------------
00FE            950   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:218: void waitms (unsigned int ms)
00FE            951   ;        -----------------------------------------
00FE            952   ;         function waitms
00FE            953   ;        -----------------------------------------
00FE            954   _waitms:
00FE AA82       955            mov     r2,dpl
0100 AB83       956            mov     r3,dph
0102            957   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:222: for(j=0; j<ms; j++)
0102 7C00       958            mov     r4,#0x00
0104 7D00       959            mov     r5,#0x00
0106            960   L005005?:
0106 C3         961            clr     c
0107 EC         962            mov     a,r4
0108 9A         963            subb    a,r2
0109 ED         964            mov     a,r5
010A 9B         965            subb    a,r3
010B 5001       966            jnc     L005009?
010D            967   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:223: for (k=0; k<4; k++) Timer3us(250);
010D 7E00       968            mov     r6,#0x00
010F            969   L005001?:
010F BE04A8     970            cjne    r6,#0x04,L005018?
0112            971   L005018?:
0112 5001       972            jnc     L005007?
0114 9000FA     973            mov     dptr,#0x00FA
0117 C002       974            push    ar2
0119 C003       975            push    ar3
011B C004       976            push    ar4
011D C005       977            push    ar5
011F C006       978            push    ar6
0121 120100     979            lcall   _Timer3us
0124 D006       980            pop     ar6
0126 D005       981            pop     ar5
0128 D004       982            pop     ar4
012A D003       983            pop     ar3
012C D002       984            pop     ar2
012E 0E         985            inc     r6
012F 8001       986            sjmp    L005001?
0131            987   L005007?:
0131            988   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:222: for(j=0; j<ms; j++)
0131 0C         989            inc     r4
0132 BC00E8     990            cjne    r4,#0x00,L005005?
0135 0D         991            inc     r5
0136 8001       992            sjmp    L005005?
0138            993   L005009?:
0138 22         994            ret
0139            995   ;------------------------------------------------------------
0139            996   ;Allocation info for local variables in function 'ADC_at_Pin'
0139            997   ;------------------------------------------------------------
0139            998   ;pin                       Allocated to registers 
0139            999   ;------------------------------------------------------------
0139           1000   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:227: unsigned int ADC_at_Pin(unsigned char pin)
0139           1001   ;        -----------------------------------------
0139           1002   ;         function ADC_at_Pin
0139           1003   ;        -----------------------------------------
0139           1004   _ADC_at_Pin:
0139 8582BB    1005            mov     _ADC0MX,dpl
013C           1006   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:230: ADBUSY = 1;       // Dummy conversion first to select new pin
013C D2EC      1007            setb    _ADBUSY
013E           1008   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:231: while (ADBUSY); // Wait for dummy conversion to finish
013E           1009   L006001?:
013E 20EC28    1010            jb      _ADBUSY,L006001?
0141           1011   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:232: ADBUSY = 1;     // Convert voltage at the pin
0141 D2EC      1012            setb    _ADBUSY
0143           1013   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:233: while (ADBUSY); // Wait for conversion to complete
0143           1014   L006004?:
0143 20EC68    1015            jb      _ADBUSY,L006004?
0146           1016   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:234: return (ADC0);
0146 85BD82    1017            mov     dpl,_ADC0
0149 85BE83    1018            mov     dph,(_ADC0 >> 8)
014C 22        1019            ret
014D           1020   ;------------------------------------------------------------
014D           1021   ;Allocation info for local variables in function 'Timer2_ISR'
014D           1022   ;------------------------------------------------------------
014D           1023   ;------------------------------------------------------------
014D           1024   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:238: void Timer2_ISR(void) interrupt 5
014D           1025   ;        -----------------------------------------
014D           1026   ;         function Timer2_ISR
014D           1027   ;        -----------------------------------------
014D           1028   _Timer2_ISR:
014D C0E0      1029            push    acc
014F C002      1030            push    ar2
0151 C003      1031            push    ar3
0153 C0D0      1032            push    psw
0155 75D000    1033            mov     psw,#0x00
0158           1034   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:240: TF2H = 0; // Clear Timer2 interrupt flag
0158 C2CF      1035            clr     _TF2H
015A           1036   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:242: pwm_count++;
015A 0528      1037            inc     _pwm_count
015C           1038   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:243: if (pwm_count>100)
015C E528      1039            mov     a,_pwm_count
015E 249B      1040            add     a,#0xff - 0x64
0160 5001      1041            jnc     L007002?
0162           1042   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:244: pwm_count = 0;
0162 752800    1043            mov     _pwm_count,#0x00
0165           1044   L007002?:
0165           1045   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:247: motorR1 = pwm_count>pwmSig1 ? 0 : 1;
0165 AA28      1046            mov     r2,_pwm_count
0167 7B00      1047            mov     r3,#0x00
0169 C3        1048            clr     c
016A E528      1049            mov     a,_pwmSig1
016C 9A        1050            subb    a,r2
016D E529      1051            mov     a,(_pwmSig1 + 1)
016F 9B        1052            subb    a,r3
0170 9298      1053            mov  _Timer2_ISR_sloc0_1_0,c
0172 B3        1054            cpl     c
0173 9294      1055            mov     _P1_4,c
0175           1056   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:248: motorR2 = pwm_count>pwmSig2 ? 0 : 1;
0175 AA28      1057            mov     r2,_pwm_count
0177 7B00      1058            mov     r3,#0x00
0179 C3        1059            clr     c
017A E5E8      1060            mov     a,_pwmSig2
017C 9A        1061            subb    a,r2
017D E5E9      1062            mov     a,(_pwmSig2 + 1)
017F 9B        1063            subb    a,r3
0180 9298      1064            mov  _Timer2_ISR_sloc0_1_0,c
0182 B3        1065            cpl     c
0183 9295      1066            mov     _P1_5,c
0185           1067   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:250: motorL1 = pwm_count>pwmSig3 ? 0 : 1;
0185 AA28      1068            mov     r2,_pwm_count
0187 7B00      1069            mov     r3,#0x00
0189 C3        1070            clr     c
018A E5A8      1071            mov     a,_pwmSig3
018C 9A        1072            subb    a,r2
018D E5A9      1073            mov     a,(_pwmSig3 + 1)
018F 9B        1074            subb    a,r3
0190 9298      1075            mov  _Timer2_ISR_sloc0_1_0,c
0192 B3        1076            cpl     c
0193 9292      1077            mov     _P1_2,c
0195           1078   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:251: motorL2 = pwm_count>pwmSig4 ? 0 : 1;
0195 AA28      1079            mov     r2,_pwm_count
0197 7B00      1080            mov     r3,#0x00
0199 C3        1081            clr     c
019A E568      1082            mov     a,_pwmSig4
019C 9A        1083            subb    a,r2
019D E569      1084            mov     a,(_pwmSig4 + 1)
019F 9B        1085            subb    a,r3
01A0 9298      1086            mov  _Timer2_ISR_sloc0_1_0,c
01A2 B3        1087            cpl     c
01A3 9293      1088            mov     _P1_3,c
01A5           1089   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:253: OUT0=pwm_count>80?0:1;
01A5 E528      1090            mov     a,_pwm_count
01A7 24AF      1091            add     a,#0xff - 0x50
01A9 9298      1092            mov  _Timer2_ISR_sloc0_1_0,c
01AB B3        1093            cpl     c
01AC 92A0      1094            mov     _P2_0,c
01AE D0D0      1095            pop     psw
01B0 D003      1096            pop     ar3
01B2 D002      1097            pop     ar2
01B4 D0E0      1098            pop     acc
01B6 32        1099            reti
01B7           1100   ;        eliminated unneeded push/pop dpl
01B7           1101   ;        eliminated unneeded push/pop dph
01B7           1102   ;        eliminated unneeded push/pop b
01B7           1103   ;------------------------------------------------------------
01B7           1104   ;Allocation info for local variables in function 'InitADC'
01B7           1105   ;------------------------------------------------------------
01B7           1106   ;------------------------------------------------------------
01B7           1107   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:283: void InitADC(void)
01B7           1108   ;        -----------------------------------------
01B7           1109   ;         function InitADC
01B7           1110   ;        -----------------------------------------
01B7           1111   _InitADC:
01B7           1112   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:285: SFRPAGE = 0x00;
01B7 75A700    1113            mov     _SFRPAGE,#0x00
01BA           1114   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:286: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
01BA 75B280    1115            mov     _ADC0CN1,#0x80
01BD           1116   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:287: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
01BD 75BCF8    1117            mov     _ADC0CF0,#0xF8
01C0           1118   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:288: ADC0CF1 = 0b_0_0_011110; // Same as default for now
01C0 75B91E    1119            mov     _ADC0CF1,#0x1E
01C3           1120   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:289: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
01C3 75E800    1121            mov     _ADC0CN0,#0x00
01C6           1122   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:290: ADC0CF2 = 0b_0_01_11111; // GND pin, Vref=VDD
01C6 75DF3F    1123            mov     _ADC0CF2,#0x3F
01C9           1124   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:291: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
01C9 75B300    1125            mov     _ADC0CN2,#0x00
01CC           1126   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:292: ADEN = 1; // Enable ADC
01CC D2EF      1127            setb    _ADEN
01CE 22        1128            ret
01CF           1129   ;------------------------------------------------------------
01CF           1130   ;Allocation info for local variables in function 'TIMER0_Init'
01CF           1131   ;------------------------------------------------------------
01CF           1132   ;------------------------------------------------------------
01CF           1133   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:294: void TIMER0_Init(void)
01CF           1134   ;        -----------------------------------------
01CF           1135   ;         function TIMER0_Init
01CF           1136   ;        -----------------------------------------
01CF           1137   _TIMER0_Init:
01CF           1138   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:296: TMOD &= 0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
01CF 5389F0    1139            anl     _TMOD,#0xF0
01D2           1140   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:297: TMOD |= 0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
01D2 438901    1141            orl     _TMOD,#0x01
01D5           1142   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:298: TR0 = 0; // Stop Timer/Counter 0
01D5 C28C      1143            clr     _TR0
01D7 22        1144            ret
01D8           1145   ;------------------------------------------------------------
01D8           1146   ;Allocation info for local variables in function 'Volts_at_Pin'
01D8           1147   ;------------------------------------------------------------
01D8           1148   ;pin                       Allocated to registers r2 
01D8           1149   ;------------------------------------------------------------
01D8           1150   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:303: float Volts_at_Pin(unsigned char pin)
01D8           1151   ;        -----------------------------------------
01D8           1152   ;         function Volts_at_Pin
01D8           1153   ;        -----------------------------------------
01D8           1154   _Volts_at_Pin:
01D8           1155   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:305: return ((ADC_at_Pin(pin)*VDD) / 0b_0011_1111_1111_1111);
01D8 120100    1156            lcall   _ADC_at_Pin
01DB 120100    1157            lcall   ___uint2fs
01DE AA82      1158            mov     r2,dpl
01E0 AB83      1159            mov     r3,dph
01E2 ACF0      1160            mov     r4,b
01E4 FD        1161            mov     r5,a
01E5 C002      1162            push    ar2
01E7 C003      1163            push    ar3
01E9 C004      1164            push    ar4
01EB C005      1165            push    ar5
01ED 906C8B    1166            mov     dptr,#0x6C8B
01F0 75F053    1167            mov     b,#0x53
01F3 7440      1168            mov     a,#0x40
01F5 120100    1169            lcall   ___fsmul
01F8 AA82      1170            mov     r2,dpl
01FA AB83      1171            mov     r3,dph
01FC ACF0      1172            mov     r4,b
01FE FD        1173            mov     r5,a
01FF E581      1174            mov     a,sp
0201 24FC      1175            add     a,#0xfc
0203 F581      1176            mov     sp,a
0205 E4        1177            clr     a
0206 C0E0      1178            push    acc
0208 74FC      1179            mov     a,#0xFC
020A C0E0      1180            push    acc
020C 747F      1181            mov     a,#0x7F
020E C0E0      1182            push    acc
0210 7446      1183            mov     a,#0x46
0212 C0E0      1184            push    acc
0214 8A82      1185            mov     dpl,r2
0216 8B83      1186            mov     dph,r3
0218 8CF0      1187            mov     b,r4
021A ED        1188            mov     a,r5
021B 120100    1189            lcall   ___fsdiv
021E AA82      1190            mov     r2,dpl
0220 AB83      1191            mov     r3,dph
0222 ACF0      1192            mov     r4,b
0224 FD        1193            mov     r5,a
0225 E581      1194            mov     a,sp
0227 24FC      1195            add     a,#0xfc
0229 F581      1196            mov     sp,a
022B 8A82      1197            mov     dpl,r2
022D 8B83      1198            mov     dph,r3
022F 8CF0      1199            mov     b,r4
0231 ED        1200            mov     a,r5
0232 22        1201            ret
0233           1202   ;------------------------------------------------------------
0233           1203   ;Allocation info for local variables in function 'InitPinADC'
0233           1204   ;------------------------------------------------------------
0233           1205   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
0233           1206   ;portno                    Allocated to registers r2 
0233           1207   ;mask                      Allocated to registers r3 
0233           1208   ;------------------------------------------------------------
0233           1209   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:307: void InitPinADC(unsigned char portno, unsigned char pinno)
0233           1210   ;        -----------------------------------------
0233           1211   ;         function InitPinADC
0233           1212   ;        -----------------------------------------
0233           1213   _InitPinADC:
0233 AA82      1214            mov     r2,dpl
0235           1215   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:311: mask = 1 << pinno;
0235 85F0F0    1216            mov     b,_InitPinADC_PARM_2
0238 05F0      1217            inc     b
023A 7401      1218            mov     a,#0x01
023C 8001      1219            sjmp    L011013?
023E           1220   L011011?:
023E 25E0      1221            add     a,acc
0240           1222   L011013?:
0240 D5F068    1223            djnz    b,L011011?
0243 FB        1224            mov     r3,a
0244           1225   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:313: SFRPAGE = 0x20;
0244 75A720    1226            mov     _SFRPAGE,#0x20
0247           1227   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:314: switch (portno)
0247 BA00A8    1228            cjne    r2,#0x00,L011014?
024A 8001      1229            sjmp    L011001?
024C           1230   L011014?:
024C BA0128    1231            cjne    r2,#0x01,L011015?
024F 8001      1232            sjmp    L011002?
0251           1233   L011015?:
0251           1234   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:316: case 0:
0251 BA02A8    1235            cjne    r2,#0x02,L011005?
0254 8001      1236            sjmp    L011003?
0256           1237   L011001?:
0256           1238   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:317: P0MDIN &= (~mask); // Set pin as analog input
0256 EB        1239            mov     a,r3
0257 F4        1240            cpl     a
0258 FA        1241            mov     r2,a
0259 52F1      1242            anl     _P0MDIN,a
025B           1243   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:318: P0SKIP |= mask; // Skip Crossbar decoding for this pin
025B EB        1244            mov     a,r3
025C 42D4      1245            orl     _P0SKIP,a
025E           1246   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:319: break;
025E           1247   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:320: case 1:
025E 8001      1248            sjmp    L011005?
0260           1249   L011002?:
0260           1250   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:321: P1MDIN &= (~mask); // Set pin as analog input
0260 EB        1251            mov     a,r3
0261 F4        1252            cpl     a
0262 FA        1253            mov     r2,a
0263 52F2      1254            anl     _P1MDIN,a
0265           1255   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:322: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0265 EB        1256            mov     a,r3
0266 42D5      1257            orl     _P1SKIP,a
0268           1258   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:323: break;
0268           1259   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:324: case 2:
0268 8001      1260            sjmp    L011005?
026A           1261   L011003?:
026A           1262   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:325: P2MDIN &= (~mask); // Set pin as analog input
026A EB        1263            mov     a,r3
026B F4        1264            cpl     a
026C FA        1265            mov     r2,a
026D 52F3      1266            anl     _P2MDIN,a
026F           1267   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:326: P2SKIP |= mask; // Skip Crossbar decoding for this pin
026F EB        1268            mov     a,r3
0270 42CC      1269            orl     _P2SKIP,a
0272           1270   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:330: }
0272           1271   L011005?:
0272           1272   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:331: SFRPAGE = 0x00;
0272 75A700    1273            mov     _SFRPAGE,#0x00
0275 22        1274            ret
0276           1275   ;------------------------------------------------------------
0276           1276   ;Allocation info for local variables in function 'PWMforward'
0276           1277   ;------------------------------------------------------------
0276           1278   ;------------------------------------------------------------
0276           1279   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:340: void PWMforward(void) {
0276           1280   ;        -----------------------------------------
0276           1281   ;         function PWMforward
0276           1282   ;        -----------------------------------------
0276           1283   _PWMforward:
0276           1284   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:341: pwmSig1 = 99;
0276 752863    1285            mov     _pwmSig1,#0x63
0279 E4        1286            clr     a
027A F529      1287            mov     (_pwmSig1 + 1),a
027C           1288   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:342: pwmSig2 = 0;
027C           1289   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:344: pwmSig3 = 0;
027C E4        1290            clr     a
027D F5E8      1291            mov     _pwmSig2,a
027F F5E9      1292            mov     (_pwmSig2 + 1),a
0281 F5A8      1293            mov     _pwmSig3,a
0283 F5A9      1294            mov     (_pwmSig3 + 1),a
0285           1295   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:345: pwmSig4 =99;
0285 756863    1296            mov     _pwmSig4,#0x63
0288 E4        1297            clr     a
0289 F569      1298            mov     (_pwmSig4 + 1),a
028B           1299   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:347: LEDRED = 1;
028B D287      1300            setb    _P0_7
028D           1301   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:348: LEDGREEN = 1;
028D D286      1302            setb    _P0_6
028F           1303   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:349: LEDWHITE = 1;
028F D290      1304            setb    _P1_0
0291           1305   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:350: SPEAKER = 0;
0291 C2A5      1306            clr     _P2_5
0293           1307   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:351: printf("Forward\n\r");
0293 7428      1308            mov     a,#__str_0
0295 C0E0      1309            push    acc
0297 74CA      1310            mov     a,#(__str_0 >> 8)
0299 C0E0      1311            push    acc
029B 7480      1312            mov     a,#0x80
029D C0E0      1313            push    acc
029F 120100    1314            lcall   _printf
02A2 1581      1315            dec     sp
02A4 1581      1316            dec     sp
02A6 1581      1317            dec     sp
02A8 22        1318            ret
02A9           1319   ;------------------------------------------------------------
02A9           1320   ;Allocation info for local variables in function 'PWMbackward'
02A9           1321   ;------------------------------------------------------------
02A9           1322   ;------------------------------------------------------------
02A9           1323   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:354: void PWMbackward(void) {
02A9           1324   ;        -----------------------------------------
02A9           1325   ;         function PWMbackward
02A9           1326   ;        -----------------------------------------
02A9           1327   _PWMbackward:
02A9           1328   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:355: pwmSig1 = 0;
02A9 E4        1329            clr     a
02AA F528      1330            mov     _pwmSig1,a
02AC F529      1331            mov     (_pwmSig1 + 1),a
02AE           1332   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:356: pwmSig2 = 99;
02AE 75E863    1333            mov     _pwmSig2,#0x63
02B1 E4        1334            clr     a
02B2 F5E9      1335            mov     (_pwmSig2 + 1),a
02B4           1336   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:358: pwmSig3 = 99;
02B4 75A863    1337            mov     _pwmSig3,#0x63
02B7 E4        1338            clr     a
02B8 F5A9      1339            mov     (_pwmSig3 + 1),a
02BA           1340   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:359: pwmSig4 = 0;
02BA E4        1341            clr     a
02BB F568      1342            mov     _pwmSig4,a
02BD F569      1343            mov     (_pwmSig4 + 1),a
02BF           1344   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:361: LEDRED = 1;
02BF D287      1345            setb    _P0_7
02C1           1346   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:362: LEDGREEN = 1;
02C1 D286      1347            setb    _P0_6
02C3           1348   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:363: LEDWHITE = 0;
02C3 C290      1349            clr     _P1_0
02C5           1350   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:364: SPEAKER = 1;
02C5 D2A5      1351            setb    _P2_5
02C7           1352   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:365: printf("Backward\n\r");
02C7 74A8      1353            mov     a,#__str_1
02C9 C0E0      1354            push    acc
02CB 74CA      1355            mov     a,#(__str_1 >> 8)
02CD C0E0      1356            push    acc
02CF 7480      1357            mov     a,#0x80
02D1 C0E0      1358            push    acc
02D3 120100    1359            lcall   _printf
02D6 1581      1360            dec     sp
02D8 1581      1361            dec     sp
02DA 1581      1362            dec     sp
02DC 22        1363            ret
02DD           1364   ;------------------------------------------------------------
02DD           1365   ;Allocation info for local variables in function 'PWMLeft'
02DD           1366   ;------------------------------------------------------------
02DD           1367   ;------------------------------------------------------------
02DD           1368   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:368: void PWMLeft(void) {
02DD           1369   ;        -----------------------------------------
02DD           1370   ;         function PWMLeft
02DD           1371   ;        -----------------------------------------
02DD           1372   _PWMLeft:
02DD           1373   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:369: pwmSig1 = 0;
02DD E4        1374            clr     a
02DE F528      1375            mov     _pwmSig1,a
02E0 F529      1376            mov     (_pwmSig1 + 1),a
02E2           1377   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:370: pwmSig2 = 99;
02E2 75E863    1378            mov     _pwmSig2,#0x63
02E5 E4        1379            clr     a
02E6 F5E9      1380            mov     (_pwmSig2 + 1),a
02E8           1381   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:372: pwmSig3 = 0;
02E8 E4        1382            clr     a
02E9 F5A8      1383            mov     _pwmSig3,a
02EB F5A9      1384            mov     (_pwmSig3 + 1),a
02ED           1385   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:373: pwmSig4 = 99;
02ED 756863    1386            mov     _pwmSig4,#0x63
02F0 E4        1387            clr     a
02F1 F569      1388            mov     (_pwmSig4 + 1),a
02F3           1389   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:375: LEDRED = 1;
02F3 D287      1390            setb    _P0_7
02F5           1391   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:376: LEDGREEN = 0;
02F5 C286      1392            clr     _P0_6
02F7           1393   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:377: LEDWHITE = 1;
02F7 D290      1394            setb    _P1_0
02F9           1395   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:378: SPEAKER = 0;
02F9 C2A5      1396            clr     _P2_5
02FB           1397   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:380: printf("Left\n\r");
02FB 74E8      1398            mov     a,#__str_2
02FD C0E0      1399            push    acc
02FF 74CA      1400            mov     a,#(__str_2 >> 8)
0301 C0E0      1401            push    acc
0303 7480      1402            mov     a,#0x80
0305 C0E0      1403            push    acc
0307 120100    1404            lcall   _printf
030A 1581      1405            dec     sp
030C 1581      1406            dec     sp
030E 1581      1407            dec     sp
0310 22        1408            ret
0311           1409   ;------------------------------------------------------------
0311           1410   ;Allocation info for local variables in function 'PWMRight'
0311           1411   ;------------------------------------------------------------
0311           1412   ;------------------------------------------------------------
0311           1413   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:383: void PWMRight(void) {
0311           1414   ;        -----------------------------------------
0311           1415   ;         function PWMRight
0311           1416   ;        -----------------------------------------
0311           1417   _PWMRight:
0311           1418   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:384: pwmSig1 = 99;
0311 752863    1419            mov     _pwmSig1,#0x63
0314 E4        1420            clr     a
0315 F529      1421            mov     (_pwmSig1 + 1),a
0317           1422   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:385: pwmSig2 = 0;
0317 E4        1423            clr     a
0318 F5E8      1424            mov     _pwmSig2,a
031A F5E9      1425            mov     (_pwmSig2 + 1),a
031C           1426   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:387: pwmSig3 = 99;
031C 75A863    1427            mov     _pwmSig3,#0x63
031F E4        1428            clr     a
0320 F5A9      1429            mov     (_pwmSig3 + 1),a
0322           1430   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:388: pwmSig4 = 0;
0322 E4        1431            clr     a
0323 F568      1432            mov     _pwmSig4,a
0325 F569      1433            mov     (_pwmSig4 + 1),a
0327           1434   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:390: LEDRED = 1;
0327 D287      1435            setb    _P0_7
0329           1436   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:391: LEDGREEN = 0;
0329 C286      1437            clr     _P0_6
032B           1438   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:392: LEDWHITE = 1;
032B D290      1439            setb    _P1_0
032D           1440   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:393: SPEAKER = 0;   
032D C2A5      1441            clr     _P2_5
032F           1442   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:395: printf("Right\n\r");
032F 7428      1443            mov     a,#__str_3
0331 C0E0      1444            push    acc
0333 74CB      1445            mov     a,#(__str_3 >> 8)
0335 C0E0      1446            push    acc
0337 7480      1447            mov     a,#0x80
0339 C0E0      1448            push    acc
033B 120100    1449            lcall   _printf
033E 1581      1450            dec     sp
0340 1581      1451            dec     sp
0342 1581      1452            dec     sp
0344 22        1453            ret
0345           1454   ;------------------------------------------------------------
0345           1455   ;Allocation info for local variables in function 'PWMStop'
0345           1456   ;------------------------------------------------------------
0345           1457   ;------------------------------------------------------------
0345           1458   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:398: void PWMStop(void) {
0345           1459   ;        -----------------------------------------
0345           1460   ;         function PWMStop
0345           1461   ;        -----------------------------------------
0345           1462   _PWMStop:
0345           1463   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:399: pwmSig1 = 0;
0345           1464   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:400: pwmSig2 = 0;
0345           1465   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:402: pwmSig3 = 0;
0345           1466   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:403: pwmSig4 = 0;
0345 E4        1467            clr     a
0346 F528      1468            mov     _pwmSig1,a
0348 F529      1469            mov     (_pwmSig1 + 1),a
034A F5E8      1470            mov     _pwmSig2,a
034C F5E9      1471            mov     (_pwmSig2 + 1),a
034E F5A8      1472            mov     _pwmSig3,a
0350 F5A9      1473            mov     (_pwmSig3 + 1),a
0352 F568      1474            mov     _pwmSig4,a
0354 F569      1475            mov     (_pwmSig4 + 1),a
0356           1476   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:405: LEDRED = 0;
0356 C287      1477            clr     _P0_7
0358           1478   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:406: LEDGREEN = 1;
0358 D286      1479            setb    _P0_6
035A           1480   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:407: LEDWHITE = 1;
035A D290      1481            setb    _P1_0
035C           1482   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:408: SPEAKER = 0;
035C C2A5      1483            clr     _P2_5
035E           1484   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:410: printf("Stop\n\r");
035E 7468      1485            mov     a,#__str_4
0360 C0E0      1486            push    acc
0362 74CB      1487            mov     a,#(__str_4 >> 8)
0364 C0E0      1488            push    acc
0366 7480      1489            mov     a,#0x80
0368 C0E0      1490            push    acc
036A 120100    1491            lcall   _printf
036D 1581      1492            dec     sp
036F 1581      1493            dec     sp
0371 1581      1494            dec     sp
0373 22        1495            ret
0374           1496   ;------------------------------------------------------------
0374           1497   ;Allocation info for local variables in function 'periodcalc'
0374           1498   ;------------------------------------------------------------
0374           1499   ;period1                   Allocated to registers r2 r3 r4 r5 
0374           1500   ;overflow_count            Allocated to registers r2 r3 
0374           1501   ;------------------------------------------------------------
0374           1502   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:413: float periodcalc(void) {
0374           1503   ;        -----------------------------------------
0374           1504   ;         function periodcalc
0374           1505   ;        -----------------------------------------
0374           1506   _periodcalc:
0374           1507   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:417: TL0=0; 
0374 758A00    1508            mov     _TL0,#0x00
0377           1509   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:418: TH0=0;
0377 758C00    1510            mov     _TH0,#0x00
037A           1511   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:419: TF0=0;
037A C28D      1512            clr     _TF0
037C           1513   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:421: TR0=0;
037C C28C      1514            clr     _TR0
037E           1515   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:423: while(P1_6!=0); // Wait for the signal to be zero
037E           1516   L017001?:
037E 2096A8    1517            jb      _P1_6,L017001?
0381           1518   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:424: while(P1_6!=1); // Wait for the signal to be one
0381           1519   L017004?:
0381 3096E8    1520            jnb     _P1_6,L017004?
0384           1521   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:425: TR0=1; // Start the timer
0384 D28C      1522            setb    _TR0
0386           1523   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:426: while(P1_6!=0) // Wait for the signal to be zero
0386 7A00      1524            mov     r2,#0x00
0388 7B00      1525            mov     r3,#0x00
038A           1526   L017009?:
038A 309668    1527            jnb     _P1_6,L017026?
038D           1528   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:428: if(TF0==1) // Did the 16-bit timer overflow?
038D           1529   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:430: TF0=0;
038D 108DA8    1530            jbc     _TF0,L017033?
0390 8001      1531            sjmp    L017009?
0392           1532   L017033?:
0392           1533   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:431: overflow_count++;
0392 0A        1534            inc     r2
0393 BA0028    1535            cjne    r2,#0x00,L017009?
0396 0B        1536            inc     r3
0397           1537   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:435: while(P1_6!=1) // Wait for the signal to be zero
0397 8001      1538            sjmp    L017009?
0399           1539   L017026?:
0399           1540   L017014?:
0399 209628    1541            jb      _P1_6,L017016?
039C           1542   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:437: if(TF0==1) // Did the 16-bit timer overflow?
039C           1543   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:439: TF0=0;
039C 108D68    1544            jbc     _TF0,L017035?
039F 8001      1545            sjmp    L017014?
03A1           1546   L017035?:
03A1           1547   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:440: overflow_count++;
03A1 0A        1548            inc     r2
03A2 BA00E8    1549            cjne    r2,#0x00,L017014?
03A5 0B        1550            inc     r3
03A6 8001      1551            sjmp    L017014?
03A8           1552   L017016?:
03A8           1553   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:445: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
03A8 C28C      1554            clr     _TR0
03AA           1555   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:446: period1=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
03AA 8A82      1556            mov     dpl,r2
03AC 8B83      1557            mov     dph,r3
03AE 120100    1558            lcall   ___sint2fs
03B1 AA82      1559            mov     r2,dpl
03B3 AB83      1560            mov     r3,dph
03B5 ACF0      1561            mov     r4,b
03B7 FD        1562            mov     r5,a
03B8 C002      1563            push    ar2
03BA C003      1564            push    ar3
03BC C004      1565            push    ar4
03BE C005      1566            push    ar5
03C0 900000    1567            mov     dptr,#0x0000
03C3 75F080    1568            mov     b,#0x80
03C6 7447      1569            mov     a,#0x47
03C8 120100    1570            lcall   ___fsmul
03CB AA82      1571            mov     r2,dpl
03CD AB83      1572            mov     r3,dph
03CF ACF0      1573            mov     r4,b
03D1 FD        1574            mov     r5,a
03D2 E581      1575            mov     a,sp
03D4 24FC      1576            add     a,#0xfc
03D6 F581      1577            mov     sp,a
03D8 858C82    1578            mov     dpl,_TH0
03DB C002      1579            push    ar2
03DD C003      1580            push    ar3
03DF C004      1581            push    ar4
03E1 C005      1582            push    ar5
03E3 120100    1583            lcall   ___uchar2fs
03E6 AE82      1584            mov     r6,dpl
03E8 AF83      1585            mov     r7,dph
03EA A8F0      1586            mov     r0,b
03EC F9        1587            mov     r1,a
03ED C006      1588            push    ar6
03EF C007      1589            push    ar7
03F1 C000      1590            push    ar0
03F3 C001      1591            push    ar1
03F5 900000    1592            mov     dptr,#0x0000
03F8 75F080    1593            mov     b,#0x80
03FB 7443      1594            mov     a,#0x43
03FD 120100    1595            lcall   ___fsmul
0400 AE82      1596            mov     r6,dpl
0402 AF83      1597            mov     r7,dph
0404 A8F0      1598            mov     r0,b
0406 F9        1599            mov     r1,a
0407 E581      1600            mov     a,sp
0409 24FC      1601            add     a,#0xfc
040B F581      1602            mov     sp,a
040D D005      1603            pop     ar5
040F D004      1604            pop     ar4
0411 D003      1605            pop     ar3
0413 D002      1606            pop     ar2
0415 C006      1607            push    ar6
0417 C007      1608            push    ar7
0419 C000      1609            push    ar0
041B C001      1610            push    ar1
041D 8A82      1611            mov     dpl,r2
041F 8B83      1612            mov     dph,r3
0421 8CF0      1613            mov     b,r4
0423 ED        1614            mov     a,r5
0424 120100    1615            lcall   ___fsadd
0427 AA82      1616            mov     r2,dpl
0429 AB83      1617            mov     r3,dph
042B ACF0      1618            mov     r4,b
042D FD        1619            mov     r5,a
042E E581      1620            mov     a,sp
0430 24FC      1621            add     a,#0xfc
0432 F581      1622            mov     sp,a
0434 AE8A      1623            mov     r6,_TL0
0436 7F00      1624            mov     r7,#0x00
0438 8E82      1625            mov     dpl,r6
043A 8F83      1626            mov     dph,r7
043C C002      1627            push    ar2
043E C003      1628            push    ar3
0440 C004      1629            push    ar4
0442 C005      1630            push    ar5
0444 120100    1631            lcall   ___sint2fs
0447 AE82      1632            mov     r6,dpl
0449 AF83      1633            mov     r7,dph
044B A8F0      1634            mov     r0,b
044D F9        1635            mov     r1,a
044E D005      1636            pop     ar5
0450 D004      1637            pop     ar4
0452 D003      1638            pop     ar3
0454 D002      1639            pop     ar2
0456 C006      1640            push    ar6
0458 C007      1641            push    ar7
045A C000      1642            push    ar0
045C C001      1643            push    ar1
045E 8A82      1644            mov     dpl,r2
0460 8B83      1645            mov     dph,r3
0462 8CF0      1646            mov     b,r4
0464 ED        1647            mov     a,r5
0465 120100    1648            lcall   ___fsadd
0468 AA82      1649            mov     r2,dpl
046A AB83      1650            mov     r3,dph
046C ACF0      1651            mov     r4,b
046E FD        1652            mov     r5,a
046F E581      1653            mov     a,sp
0471 24FC      1654            add     a,#0xfc
0473 F581      1655            mov     sp,a
0475 C002      1656            push    ar2
0477 C003      1657            push    ar3
0479 C004      1658            push    ar4
047B C005      1659            push    ar5
047D 90F4FC    1660            mov     dptr,#0xF4FC
0480 75F032    1661            mov     b,#0x32
0483 7434      1662            mov     a,#0x34
0485 120100    1663            lcall   ___fsmul
0488 AA82      1664            mov     r2,dpl
048A AB83      1665            mov     r3,dph
048C ACF0      1666            mov     r4,b
048E FD        1667            mov     r5,a
048F E581      1668            mov     a,sp
0491 24FC      1669            add     a,#0xfc
0493 F581      1670            mov     sp,a
0495           1671   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:447: printf("%f\n\r", period1);
0495 C002      1672            push    ar2
0497 C003      1673            push    ar3
0499 C004      1674            push    ar4
049B C005      1675            push    ar5
049D C002      1676            push    ar2
049F C003      1677            push    ar3
04A1 C004      1678            push    ar4
04A3 C005      1679            push    ar5
04A5 7468      1680            mov     a,#__str_5
04A7 C0E0      1681            push    acc
04A9 74CE      1682            mov     a,#(__str_5 >> 8)
04AB C0E0      1683            push    acc
04AD 7480      1684            mov     a,#0x80
04AF C0E0      1685            push    acc
04B1 120100    1686            lcall   _printf
04B4 E581      1687            mov     a,sp
04B6 24F9      1688            add     a,#0xf9
04B8 F581      1689            mov     sp,a
04BA           1690   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:448: return period1*1000; //return period of high pulse in seconds
04BA 900000    1691            mov     dptr,#0x0000
04BD 75F07A    1692            mov     b,#0x7A
04C0 7444      1693            mov     a,#0x44
04C2 120100    1694            lcall   ___fsmul
04C5 AA82      1695            mov     r2,dpl
04C7 AB83      1696            mov     r3,dph
04C9 ACF0      1697            mov     r4,b
04CB FD        1698            mov     r5,a
04CC E581      1699            mov     a,sp
04CE 24FC      1700            add     a,#0xfc
04D0 F581      1701            mov     sp,a
04D2 8A82      1702            mov     dpl,r2
04D4 8B83      1703            mov     dph,r3
04D6 8CF0      1704            mov     b,r4
04D8 ED        1705            mov     a,r5
04D9 22        1706            ret
04DA           1707   ;------------------------------------------------------------
04DA           1708   ;Allocation info for local variables in function 'arrayEqual'
04DA           1709   ;------------------------------------------------------------
04DA           1710   ;size                      Allocated with name '_arrayEqual_PARM_2'
04DA           1711   ;arr2                      Allocated with name '_arrayEqual_PARM_3'
04DA           1712   ;arr1                      Allocated with name '_arrayEqual_arr1_1_80'
04DA           1713   ;i                         Allocated to registers r5 r6 
04DA           1714   ;------------------------------------------------------------
04DA           1715   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:453: int arrayEqual (int arr1[], int size, int arr2[]){
04DA           1716   ;        -----------------------------------------
04DA           1717   ;         function arrayEqual
04DA           1718   ;        -----------------------------------------
04DA           1719   _arrayEqual:
04DA 858248    1720            mov     _arrayEqual_arr1_1_80,dpl
04DD 858349    1721            mov     (_arrayEqual_arr1_1_80 + 1),dph
04E0 85F04A    1722            mov     (_arrayEqual_arr1_1_80 + 2),b
04E3           1723   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:455: for(i=0; i<size; i++){
04E3 7D00      1724            mov     r5,#0x00
04E5 7E00      1725            mov     r6,#0x00
04E7           1726   L018003?:
04E7 C3        1727            clr     c
04E8 ED        1728            mov     a,r5
04E9 95A0      1729            subb    a,_arrayEqual_PARM_2
04EB EE        1730            mov     a,r6
04EC 6480      1731            xrl     a,#0x80
04EE 85A1F0    1732            mov     b,(_arrayEqual_PARM_2 + 1)
04F1 63F080    1733            xrl     b,#0x80
04F4 95F0      1734            subb    a,b
04F6 5001      1735            jnc     L018006?
04F8           1736   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:456: if(arr1[i]!=arr2[i])
04F8 8D07      1737            mov     ar7,r5
04FA EE        1738            mov     a,r6
04FB CF        1739            xch     a,r7
04FC 25E0      1740            add     a,acc
04FE CF        1741            xch     a,r7
04FF 33        1742            rlc     a
0500 F8        1743            mov     r0,a
0501 EF        1744            mov     a,r7
0502 2548      1745            add     a,_arrayEqual_arr1_1_80
0504 F9        1746            mov     r1,a
0505 E8        1747            mov     a,r0
0506 3549      1748            addc    a,(_arrayEqual_arr1_1_80 + 1)
0508 FA        1749            mov     r2,a
0509 AB4A      1750            mov     r3,(_arrayEqual_arr1_1_80 + 2)
050B 8982      1751            mov     dpl,r1
050D 8A83      1752            mov     dph,r2
050F 8BF0      1753            mov     b,r3
0511 120100    1754            lcall   __gptrget
0514 F9        1755            mov     r1,a
0515 A3        1756            inc     dptr
0516 120100    1757            lcall   __gptrget
0519 FA        1758            mov     r2,a
051A EF        1759            mov     a,r7
051B 2550      1760            add     a,_arrayEqual_PARM_3
051D FF        1761            mov     r7,a
051E E8        1762            mov     a,r0
051F 3551      1763            addc    a,(_arrayEqual_PARM_3 + 1)
0521 F8        1764            mov     r0,a
0522 AB52      1765            mov     r3,(_arrayEqual_PARM_3 + 2)
0524 8F82      1766            mov     dpl,r7
0526 8883      1767            mov     dph,r0
0528 8BF0      1768            mov     b,r3
052A 120100    1769            lcall   __gptrget
052D FF        1770            mov     r7,a
052E A3        1771            inc     dptr
052F 120100    1772            lcall   __gptrget
0532 F8        1773            mov     r0,a
0533 E9        1774            mov     a,r1
0534 B50768    1775            cjne    a,ar7,L018013?
0537 EA        1776            mov     a,r2
0538 B50068    1777            cjne    a,ar0,L018013?
053B 8001      1778            sjmp    L018005?
053D           1779   L018013?:
053D           1780   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:457: return 0; 
053D 900000    1781            mov     dptr,#0x0000
0540 22        1782            ret
0541           1783   L018005?:
0541           1784   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:455: for(i=0; i<size; i++){
0541 0D        1785            inc     r5
0542 BD00A8    1786            cjne    r5,#0x00,L018003?
0545 0E        1787            inc     r6
0546 8001      1788            sjmp    L018003?
0548           1789   L018006?:
0548           1790   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:459: return 1; 
0548 900001    1791            mov     dptr,#0x0001
054B 22        1792            ret
054C           1793   ;------------------------------------------------------------
054C           1794   ;Allocation info for local variables in function 'checkCommands'
054C           1795   ;------------------------------------------------------------
054C           1796   ;------------------------------------------------------------
054C           1797   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:465: void checkCommands (void){
054C           1798   ;        -----------------------------------------
054C           1799   ;         function checkCommands
054C           1800   ;        -----------------------------------------
054C           1801   _checkCommands:
054C           1802   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:466: if(arrayEqual(command, 4, stop)) PWMStop();
054C 7550A8    1803            mov     _arrayEqual_PARM_3,#_stop
054F 755100    1804            mov     (_arrayEqual_PARM_3 + 1),#0x00
0552 755240    1805            mov     (_arrayEqual_PARM_3 + 2),#0x40
0555 75A004    1806            mov     _arrayEqual_PARM_2,#0x04
0558 E4        1807            clr     a
0559 F5A1      1808            mov     (_arrayEqual_PARM_2 + 1),a
055B 904C68    1809            mov     dptr,#_command
055E 75F040    1810            mov     b,#0x40
0561 120100    1811            lcall   _arrayEqual
0564 E582      1812            mov     a,dpl
0566 8583F0    1813            mov     b,dph
0569 45F0      1814            orl     a,b
056B 6001      1815            jz      L019014?
056D 120100    1816            lcall   _PWMStop
0570 020100    1817            ljmp    L019015?
0573           1818   L019014?:
0573           1819   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:467: else if (arrayEqual(command,4,forward)) PWMforward(); 
0573 755068    1820            mov     _arrayEqual_PARM_3,#_forward
0576 755100    1821            mov     (_arrayEqual_PARM_3 + 1),#0x00
0579 755240    1822            mov     (_arrayEqual_PARM_3 + 2),#0x40
057C 75A004    1823            mov     _arrayEqual_PARM_2,#0x04
057F E4        1824            clr     a
0580 F5A1      1825            mov     (_arrayEqual_PARM_2 + 1),a
0582 904C68    1826            mov     dptr,#_command
0585 75F040    1827            mov     b,#0x40
0588 120100    1828            lcall   _arrayEqual
058B E582      1829            mov     a,dpl
058D 8583F0    1830            mov     b,dph
0590 45F0      1831            orl     a,b
0592 6001      1832            jz      L019011?
0594 120100    1833            lcall   _PWMforward
0597 020100    1834            ljmp    L019015?
059A           1835   L019011?:
059A           1836   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:468: else if (arrayEqual(command,4,backward)) PWMbackward(); 
059A 755028    1837            mov     _arrayEqual_PARM_3,#_backward
059D 755100    1838            mov     (_arrayEqual_PARM_3 + 1),#0x00
05A0 755240    1839            mov     (_arrayEqual_PARM_3 + 2),#0x40
05A3 75A004    1840            mov     _arrayEqual_PARM_2,#0x04
05A6 E4        1841            clr     a
05A7 F5A1      1842            mov     (_arrayEqual_PARM_2 + 1),a
05A9 904C68    1843            mov     dptr,#_command
05AC 75F040    1844            mov     b,#0x40
05AF 120100    1845            lcall   _arrayEqual
05B2 E582      1846            mov     a,dpl
05B4 8583F0    1847            mov     b,dph
05B7 45F0      1848            orl     a,b
05B9 6001      1849            jz      L019008?
05BB 120100    1850            lcall   _PWMbackward
05BE 8001      1851            sjmp    L019015?
05C0           1852   L019008?:
05C0           1853   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:469: else if (arrayEqual(command,4, left)) PWMLeft(); 
05C0 7550E8    1854            mov     _arrayEqual_PARM_3,#_left
05C3 755100    1855            mov     (_arrayEqual_PARM_3 + 1),#0x00
05C6 755240    1856            mov     (_arrayEqual_PARM_3 + 2),#0x40
05C9 75A004    1857            mov     _arrayEqual_PARM_2,#0x04
05CC E4        1858            clr     a
05CD F5A1      1859            mov     (_arrayEqual_PARM_2 + 1),a
05CF 904C68    1860            mov     dptr,#_command
05D2 75F040    1861            mov     b,#0x40
05D5 120100    1862            lcall   _arrayEqual
05D8 E582      1863            mov     a,dpl
05DA 8583F0    1864            mov     b,dph
05DD 45F0      1865            orl     a,b
05DF 6001      1866            jz      L019005?
05E1 120100    1867            lcall   _PWMLeft
05E4 8001      1868            sjmp    L019015?
05E6           1869   L019005?:
05E6           1870   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:470: else if (arrayEqual(command,4, right)) PWMRight(); 
05E6 7550A8    1871            mov     _arrayEqual_PARM_3,#_right
05E9 755100    1872            mov     (_arrayEqual_PARM_3 + 1),#0x00
05EC 755240    1873            mov     (_arrayEqual_PARM_3 + 2),#0x40
05EF 75A004    1874            mov     _arrayEqual_PARM_2,#0x04
05F2 E4        1875            clr     a
05F3 F5A1      1876            mov     (_arrayEqual_PARM_2 + 1),a
05F5 904C68    1877            mov     dptr,#_command
05F8 75F040    1878            mov     b,#0x40
05FB 120100    1879            lcall   _arrayEqual
05FE E582      1880            mov     a,dpl
0600 8583F0    1881            mov     b,dph
0603 45F0      1882            orl     a,b
0605 6001      1883            jz      L019002?
0607 120100    1884            lcall   _PWMRight
060A 8001      1885            sjmp    L019015?
060C           1886   L019002?:
060C           1887   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:471: else PWMStop(); //defaults to a halt (redundant)
060C 120100    1888            lcall   _PWMStop
060F           1889   L019015?:
060F           1890   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:472: waitms(350);
060F 90015E    1891            mov     dptr,#0x015E
0612 020100    1892            ljmp    _waitms
0615           1893   ;------------------------------------------------------------
0615           1894   ;Allocation info for local variables in function 'voltsAtPeak'
0615           1895   ;------------------------------------------------------------
0615           1896   ;------------------------------------------------------------
0615           1897   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:478: float voltsAtPeak(void) {
0615           1898   ;        -----------------------------------------
0615           1899   ;         function voltsAtPeak
0615           1900   ;        -----------------------------------------
0615           1901   _voltsAtPeak:
0615           1902   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:480: while(ADC_at_Pin(QFP32_MUX_P1_6)==0); //this waiting for the pin to be high/ 1 
0615           1903   L020001?:
0615 75820C    1904            mov     dpl,#0x0C
0618 120100    1905            lcall   _ADC_at_Pin
061B E582      1906            mov     a,dpl
061D 8583F0    1907            mov     b,dph
0620 45F0      1908            orl     a,b
0622 6001      1909            jz      L020001?
0624           1910   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:481: Timer3us((PERIOD*1.0E6)/4.0); //PERIOD IS DEFINED
0624 900000    1911            mov     dptr,#0x0000
0627 120100    1912            lcall   _Timer3us
062A           1913   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:482: return(Volts_at_Pin(QFP32_MUX_P1_6));
062A 75820C    1914            mov     dpl,#0x0C
062D 020100    1915            ljmp    _Volts_at_Pin
0630           1916   ;------------------------------------------------------------
0630           1917   ;Allocation info for local variables in function 'getDigitalSignal'
0630           1918   ;------------------------------------------------------------
0630           1919   ;------------------------------------------------------------
0630           1920   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:495: int getDigitalSignal (void){
0630           1921   ;        -----------------------------------------
0630           1922   ;         function getDigitalSignal
0630           1923   ;        -----------------------------------------
0630           1924   _getDigitalSignal:
0630           1925   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:497: if (Volts_at_Pin(QFP32_MUX_P2_3)>=thresholdVolt) //not too low to be a noise/ a valid signal for high, 1
0630 758210    1926            mov     dpl,#0x10
0633 120100    1927            lcall   _Volts_at_Pin
0636 AA82      1928            mov     r2,dpl
0638 AB83      1929            mov     r3,dph
063A ACF0      1930            mov     r4,b
063C FD        1931            mov     r5,a
063D E4        1932            clr     a
063E C0E0      1933            push    acc
0640 C0E0      1934            push    acc
0642 C0E0      1935            push    acc
0644 743F      1936            mov     a,#0x3F
0646 C0E0      1937            push    acc
0648 8A82      1938            mov     dpl,r2
064A 8B83      1939            mov     dph,r3
064C 8CF0      1940            mov     b,r4
064E ED        1941            mov     a,r5
064F 120100    1942            lcall   ___fslt
0652 AA82      1943            mov     r2,dpl
0654 E581      1944            mov     a,sp
0656 24FC      1945            add     a,#0xfc
0658 F581      1946            mov     sp,a
065A EA        1947            mov     a,r2
065B 7001      1948            jnz     L021002?
065D           1949   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:499: printf("\nread 1:  at pin 2.3: %f\r", Volts_at_Pin(QFP32_MUX_P2_3));
065D 758210    1950            mov     dpl,#0x10
0660 120100    1951            lcall   _Volts_at_Pin
0663 AA82      1952            mov     r2,dpl
0665 AB83      1953            mov     r3,dph
0667 ACF0      1954            mov     r4,b
0669 FD        1955            mov     r5,a
066A C002      1956            push    ar2
066C C003      1957            push    ar3
066E C004      1958            push    ar4
0670 C005      1959            push    ar5
0672 7428      1960            mov     a,#__str_6
0674 C0E0      1961            push    acc
0676 74D2      1962            mov     a,#(__str_6 >> 8)
0678 C0E0      1963            push    acc
067A 7480      1964            mov     a,#0x80
067C C0E0      1965            push    acc
067E 120100    1966            lcall   _printf
0681 E581      1967            mov     a,sp
0683 24F9      1968            add     a,#0xf9
0685 F581      1969            mov     sp,a
0687           1970   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:500: return 1;
0687 900001    1971            mov     dptr,#0x0001
068A           1972   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:504: return 0; 
068A 22        1973            ret
068B           1974   L021002?:
068B 900000    1975            mov     dptr,#0x0000
068E 22        1976            ret
068F           1977   ;------------------------------------------------------------
068F           1978   ;Allocation info for local variables in function 'waitquarterperiod'
068F           1979   ;------------------------------------------------------------
068F           1980   ;------------------------------------------------------------
068F           1981   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:511: void waitquarterperiod(void){
068F           1982   ;        -----------------------------------------
068F           1983   ;         function waitquarterperiod
068F           1984   ;        -----------------------------------------
068F           1985   _waitquarterperiod:
068F           1986   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:512: waitms(constant_delay_time);
068F 900014    1987            mov     dptr,#0x0014
0692 020100    1988            ljmp    _waitms
0695           1989   ;------------------------------------------------------------
0695           1990   ;Allocation info for local variables in function 'recieveData'
0695           1991   ;------------------------------------------------------------
0695           1992   ;checkcomm                 Allocated to registers 
0695           1993   ;i                         Allocated to registers r2 r3 
0695           1994   ;------------------------------------------------------------
0695           1995   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:518: void recieveData (){
0695           1996   ;        -----------------------------------------
0695           1997   ;         function recieveData
0695           1998   ;        -----------------------------------------
0695           1999   _recieveData:
0695           2000   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:522: while(getDigitalSignal()==0);          //wait for the signal to be 1 
0695           2001   L023001?:
0695 120100    2002            lcall   _getDigitalSignal
0698 E582      2003            mov     a,dpl
069A 8583F0    2004            mov     b,dph
069D 45F0      2005            orl     a,b
069F 6001      2006            jz      L023001?
06A1           2007   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:526: waitms(175);   //wait 
06A1 9000AF    2008            mov     dptr,#0x00AF
06A4 120100    2009            lcall   _waitms
06A7           2010   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:527: command[0] = 1;
06A7 756801    2011            mov     _command,#0x01
06AA 756900    2012            mov     (_command + 1),#0x00
06AD           2013   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:529: for( i=1; i<4; i++){
06AD 7A01      2014            mov     r2,#0x01
06AF 7B00      2015            mov     r3,#0x00
06B1           2016   L023004?:
06B1 C3        2017            clr     c
06B2 EA        2018            mov     a,r2
06B3 9404      2019            subb    a,#0x04
06B5 EB        2020            mov     a,r3
06B6 6480      2021            xrl     a,#0x80
06B8 9480      2022            subb    a,#0x80
06BA 5001      2023            jnc     L023007?
06BC           2024   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:530: waitms(358); //wait for a period
06BC 900166    2025            mov     dptr,#0x0166
06BF C002      2026            push    ar2
06C1 C003      2027            push    ar3
06C3 120100    2028            lcall   _waitms
06C6 D003      2029            pop     ar3
06C8 D002      2030            pop     ar2
06CA           2031   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:531: command[i]=getDigitalSignal();         
06CA 8A04      2032            mov     ar4,r2
06CC EB        2033            mov     a,r3
06CD CC        2034            xch     a,r4
06CE 25E0      2035            add     a,acc
06D0 CC        2036            xch     a,r4
06D1 33        2037            rlc     a
06D2 EC        2038            mov     a,r4
06D3 2468      2039            add     a,#_command
06D5 F8        2040            mov     r0,a
06D6 C002      2041            push    ar2
06D8 C003      2042            push    ar3
06DA C000      2043            push    ar0
06DC 120100    2044            lcall   _getDigitalSignal
06DF E582      2045            mov     a,dpl
06E1 8583F0    2046            mov     b,dph
06E4 D000      2047            pop     ar0
06E6 D003      2048            pop     ar3
06E8 D002      2049            pop     ar2
06EA F6        2050            mov     @r0,a
06EB 08        2051            inc     r0
06EC A6F0      2052            mov     @r0,b
06EE 18        2053            dec     r0
06EF           2054   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:529: for( i=1; i<4; i++){
06EF 0A        2055            inc     r2
06F0 BA00A8    2056            cjne    r2,#0x00,L023004?
06F3 0B        2057            inc     r3
06F4 8001      2058            sjmp    L023004?
06F6           2059   L023007?:
06F6           2060   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:534: checkCommands();                               //does activity depending on the command given 
06F6 020100    2061            ljmp    _checkCommands
06F9           2062   ;------------------------------------------------------------
06F9           2063   ;Allocation info for local variables in function 'checkMode'
06F9           2064   ;------------------------------------------------------------
06F9           2065   ;------------------------------------------------------------
06F9           2066   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:543: int checkMode(){
06F9           2067   ;        -----------------------------------------
06F9           2068   ;         function checkMode
06F9           2069   ;        -----------------------------------------
06F9           2070   _checkMode:
06F9           2071   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:544: if(!BUTTON1 || x == 0){
06F9 30B128    2072            jnb     _P3_1,L024001?
06FC E528      2073            mov     a,_x
06FE 4529      2074            orl     a,(_x + 1)
0700 7001      2075            jnz     L024033?
0702           2076   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:545: while(!BUTTON1);
0702           2077   L024001?:
0702 30B128    2078            jnb     _P3_1,L024001?
0705           2079   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:546: x= 0;
0705           2080   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:547: return 0;
0705 E4        2081            clr     a
0706 F528      2082            mov     _x,a
0708 F529      2083            mov     (_x + 1),a
070A F582      2084            mov     dpl,a
070C F583      2085            mov     dph,a
070E 22        2086            ret
070F           2087   L024033?:
070F           2088   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:549: else if(!BUTTON2 || x == 1){
070F 30B3A8    2089            jnb     _P3_3,L024004?
0712 7401      2090            mov     a,#0x01
0714 B528E8    2091            cjne    a,_x,L024057?
0717 E4        2092            clr     a
0718 B529E8    2093            cjne    a,(_x + 1),L024057?
071B 8001      2094            sjmp    L024058?
071D           2095   L024057?:
071D 8001      2096            sjmp    L024029?
071F           2097   L024058?:
071F           2098   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:550: while(!BUTTON2);
071F           2099   L024004?:
071F 30B3A8    2100            jnb     _P3_3,L024004?
0722           2101   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:551: x = 1;
0722 752801    2102            mov     _x,#0x01
0725 E4        2103            clr     a
0726 F529      2104            mov     (_x + 1),a
0728           2105   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:552: return 1;
0728 900001    2106            mov     dptr,#0x0001
072B 22        2107            ret
072C           2108   L024029?:
072C           2109   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:554: else if(!BUTTON3 || x == 3){
072C 30B7A8    2110            jnb     _P3_7,L024007?
072F 7403      2111            mov     a,#0x03
0731 B528E8    2112            cjne    a,_x,L024061?
0734 E4        2113            clr     a
0735 B529E8    2114            cjne    a,(_x + 1),L024061?
0738 8001      2115            sjmp    L024062?
073A           2116   L024061?:
073A 8001      2117            sjmp    L024025?
073C           2118   L024062?:
073C           2119   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:555: while(!BUTTON3);
073C           2120   L024007?:
073C 30B7A8    2121            jnb     _P3_7,L024007?
073F           2122   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:556: x = 3;
073F 752803    2123            mov     _x,#0x03
0742 E4        2124            clr     a
0743 F529      2125            mov     (_x + 1),a
0745           2126   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:557: return 3;
0745 900003    2127            mov     dptr,#0x0003
0748 22        2128            ret
0749           2129   L024025?:
0749           2130   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:559: else if(!BUTTON4 || x == 4){
0749 3085A8    2131            jnb     _P0_5,L024010?
074C 7404      2132            mov     a,#0x04
074E B528E8    2133            cjne    a,_x,L024065?
0751 E4        2134            clr     a
0752 B529E8    2135            cjne    a,(_x + 1),L024065?
0755 8001      2136            sjmp    L024066?
0757           2137   L024065?:
0757 8001      2138            sjmp    L024021?
0759           2139   L024066?:
0759           2140   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:560: while(!BUTTON4);
0759           2141   L024010?:
0759 3085A8    2142            jnb     _P0_5,L024010?
075C           2143   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:561: x = 4;
075C 752804    2144            mov     _x,#0x04
075F E4        2145            clr     a
0760 F529      2146            mov     (_x + 1),a
0762           2147   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:562: return 4;
0762 900004    2148            mov     dptr,#0x0004
0765 22        2149            ret
0766           2150   L024021?:
0766           2151   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:564: else if(!BUTTON5 || x == 5){
0766 3083A8    2152            jnb     _P0_3,L024013?
0769 7405      2153            mov     a,#0x05
076B B528E8    2154            cjne    a,_x,L024069?
076E E4        2155            clr     a
076F B529E8    2156            cjne    a,(_x + 1),L024069?
0772 8001      2157            sjmp    L024070?
0774           2158   L024069?:
0774 8001      2159            sjmp    L024017?
0776           2160   L024070?:
0776           2161   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:565: while(!BUTTON5);
0776           2162   L024013?:
0776 3083A8    2163            jnb     _P0_3,L024013?
0779           2164   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:566: x = 5;
0779 752805    2165            mov     _x,#0x05
077C E4        2166            clr     a
077D F529      2167            mov     (_x + 1),a
077F           2168   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:567: return 5;
077F 900005    2169            mov     dptr,#0x0005
0782 22        2170            ret
0783           2171   L024017?:
0783           2172   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:570: x = 2;
0783 752802    2173            mov     _x,#0x02
0786 E4        2174            clr     a
0787 F529      2175            mov     (_x + 1),a
0789           2176   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:571: return 2;
0789 900002    2177            mov     dptr,#0x0002
078C 22        2178            ret
078D           2179   ;------------------------------------------------------------
078D           2180   ;Allocation info for local variables in function 'detectobstacle'
078D           2181   ;------------------------------------------------------------
078D           2182   ;threshold                 Allocated to registers r2 r3 r4 r5 
078D           2183   ;------------------------------------------------------------
078D           2184   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:576: void detectobstacle(float threshold){
078D           2185   ;        -----------------------------------------
078D           2186   ;         function detectobstacle
078D           2187   ;        -----------------------------------------
078D           2188   _detectobstacle:
078D AA82      2189            mov     r2,dpl
078F AB83      2190            mov     r3,dph
0791 ACF0      2191            mov     r4,b
0793 FD        2192            mov     r5,a
0794           2193   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:587: if(threshold <= 0.6 ){
0794 749A      2194            mov     a,#0x9A
0796 C0E0      2195            push    acc
0798 7499      2196            mov     a,#0x99
079A C0E0      2197            push    acc
079C 7419      2198            mov     a,#0x19
079E C0E0      2199            push    acc
07A0 743F      2200            mov     a,#0x3F
07A2 C0E0      2201            push    acc
07A4 8A82      2202            mov     dpl,r2
07A6 8B83      2203            mov     dph,r3
07A8 8CF0      2204            mov     b,r4
07AA ED        2205            mov     a,r5
07AB 120100    2206            lcall   ___fsgt
07AE AA82      2207            mov     r2,dpl
07B0 E581      2208            mov     a,sp
07B2 24FC      2209            add     a,#0xfc
07B4 F581      2210            mov     sp,a
07B6 EA        2211            mov     a,r2
07B7 7001      2212            jnz     L025002?
07B9           2213   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:589: printf("Turn right \r\n");
07B9 7428      2214            mov     a,#__str_7
07BB C0E0      2215            push    acc
07BD 74D8      2216            mov     a,#(__str_7 >> 8)
07BF C0E0      2217            push    acc
07C1 7480      2218            mov     a,#0x80
07C3 C0E0      2219            push    acc
07C5 120100    2220            lcall   _printf
07C8 1581      2221            dec     sp
07CA 1581      2222            dec     sp
07CC 1581      2223            dec     sp
07CE           2224   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:590: PWMRight();
07CE 120100    2225            lcall   _PWMRight
07D1           2226   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:591: waitms(500); //Make waits longer
07D1 9001F4    2227            mov     dptr,#0x01F4
07D4 120100    2228            lcall   _waitms
07D7           2229   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:592: waitms(500); 
07D7 9001F4    2230            mov     dptr,#0x01F4
07DA 120100    2231            lcall   _waitms
07DD           2232   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:593: waitms(300); 
07DD 90012C    2233            mov     dptr,#0x012C
07E0 120100    2234            lcall   _waitms
07E3           2235   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:595: PWMStop();
07E3 120100    2236            lcall   _PWMStop
07E6           2237   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:596: waitms(500);
07E6 9001F4    2238            mov     dptr,#0x01F4
07E9 120100    2239            lcall   _waitms
07EC           2240   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:597: waitms(250);
07EC 9000FA    2241            mov     dptr,#0x00FA
07EF 020100    2242            ljmp    _waitms
07F2           2243   L025002?:
07F2           2244   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:602: printf("Go Straight \r\n");
07F2 7468      2245            mov     a,#__str_8
07F4 C0E0      2246            push    acc
07F6 74D8      2247            mov     a,#(__str_8 >> 8)
07F8 C0E0      2248            push    acc
07FA 7480      2249            mov     a,#0x80
07FC C0E0      2250            push    acc
07FE 120100    2251            lcall   _printf
0801 1581      2252            dec     sp
0803 1581      2253            dec     sp
0805 1581      2254            dec     sp
0807           2255   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:604: PWMforward();
0807 020100    2256            ljmp    _PWMforward
080A           2257   ;------------------------------------------------------------
080A           2258   ;Allocation info for local variables in function 'laserPattern'
080A           2259   ;------------------------------------------------------------
080A           2260   ;rate                      Allocated to registers r2 r3 r4 r5 
080A           2261   ;------------------------------------------------------------
080A           2262   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:611: void laserPattern(float rate){
080A           2263   ;        -----------------------------------------
080A           2264   ;         function laserPattern
080A           2265   ;        -----------------------------------------
080A           2266   _laserPattern:
080A AA82      2267            mov     r2,dpl
080C AB83      2268            mov     r3,dph
080E ACF0      2269            mov     r4,b
0810 FD        2270            mov     r5,a
0811           2271   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:612: LASER = 0;
0811 C2B0      2272            clr     _P3_0
0813           2273   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:613: if(rate<0.8)
0813 C002      2274            push    ar2
0815 C003      2275            push    ar3
0817 C004      2276            push    ar4
0819 C005      2277            push    ar5
081B 74CD      2278            mov     a,#0xCD
081D C0E0      2279            push    acc
081F 74CC      2280            mov     a,#0xCC
0821 C0E0      2281            push    acc
0823 744C      2282            mov     a,#0x4C
0825 C0E0      2283            push    acc
0827 743F      2284            mov     a,#0x3F
0829 C0E0      2285            push    acc
082B 8A82      2286            mov     dpl,r2
082D 8B83      2287            mov     dph,r3
082F 8CF0      2288            mov     b,r4
0831 ED        2289            mov     a,r5
0832 120100    2290            lcall   ___fslt
0835 AE82      2291            mov     r6,dpl
0837 E581      2292            mov     a,sp
0839 24FC      2293            add     a,#0xfc
083B F581      2294            mov     sp,a
083D D005      2295            pop     ar5
083F D004      2296            pop     ar4
0841 D003      2297            pop     ar3
0843 D002      2298            pop     ar2
0845 EE        2299            mov     a,r6
0846 6001      2300            jz      L026010?
0848           2301   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:614: waitms(200);
0848 9000C8    2302            mov     dptr,#0x00C8
084B 120100    2303            lcall   _waitms
084E 020100    2304            ljmp    L026011?
0851           2305   L026010?:
0851           2306   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:615: else if(rate>=0.8 && rate<2.0)
0851 EE        2307            mov     a,r6
0852 7001      2308            jnz     L026006?
0854 C002      2309            push    ar2
0856 C003      2310            push    ar3
0858 C004      2311            push    ar4
085A C005      2312            push    ar5
085C E4        2313            clr     a
085D C0E0      2314            push    acc
085F C0E0      2315            push    acc
0861 C0E0      2316            push    acc
0863 7440      2317            mov     a,#0x40
0865 C0E0      2318            push    acc
0867 8A82      2319            mov     dpl,r2
0869 8B83      2320            mov     dph,r3
086B 8CF0      2321            mov     b,r4
086D ED        2322            mov     a,r5
086E 120100    2323            lcall   ___fslt
0871 AE82      2324            mov     r6,dpl
0873 E581      2325            mov     a,sp
0875 24FC      2326            add     a,#0xfc
0877 F581      2327            mov     sp,a
0879 D005      2328            pop     ar5
087B D004      2329            pop     ar4
087D D003      2330            pop     ar3
087F D002      2331            pop     ar2
0881 EE        2332            mov     a,r6
0882 6001      2333            jz      L026006?
0884           2334   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:616: waitms(500);
0884 9001F4    2335            mov     dptr,#0x01F4
0887 120100    2336            lcall   _waitms
088A 8001      2337            sjmp    L026011?
088C           2338   L026006?:
088C           2339   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:617: else if(rate>=2.0 && rate<2.8)
088C C002      2340            push    ar2
088E C003      2341            push    ar3
0890 C004      2342            push    ar4
0892 C005      2343            push    ar5
0894 E4        2344            clr     a
0895 C0E0      2345            push    acc
0897 C0E0      2346            push    acc
0899 C0E0      2347            push    acc
089B 7440      2348            mov     a,#0x40
089D C0E0      2349            push    acc
089F 8A82      2350            mov     dpl,r2
08A1 8B83      2351            mov     dph,r3
08A3 8CF0      2352            mov     b,r4
08A5 ED        2353            mov     a,r5
08A6 120100    2354            lcall   ___fslt
08A9 AE82      2355            mov     r6,dpl
08AB E581      2356            mov     a,sp
08AD 24FC      2357            add     a,#0xfc
08AF F581      2358            mov     sp,a
08B1 D005      2359            pop     ar5
08B3 D004      2360            pop     ar4
08B5 D003      2361            pop     ar3
08B7 D002      2362            pop     ar2
08B9 EE        2363            mov     a,r6
08BA 7001      2364            jnz     L026002?
08BC 7433      2365            mov     a,#0x33
08BE C0E0      2366            push    acc
08C0 C0E0      2367            push    acc
08C2 C0E0      2368            push    acc
08C4 7440      2369            mov     a,#0x40
08C6 C0E0      2370            push    acc
08C8 8A82      2371            mov     dpl,r2
08CA 8B83      2372            mov     dph,r3
08CC 8CF0      2373            mov     b,r4
08CE ED        2374            mov     a,r5
08CF 120100    2375            lcall   ___fslt
08D2 AA82      2376            mov     r2,dpl
08D4 E581      2377            mov     a,sp
08D6 24FC      2378            add     a,#0xfc
08D8 F581      2379            mov     sp,a
08DA EA        2380            mov     a,r2
08DB 6001      2381            jz      L026002?
08DD           2382   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:618: waitms(800);
08DD 900320    2383            mov     dptr,#0x0320
08E0 120100    2384            lcall   _waitms
08E3 8001      2385            sjmp    L026011?
08E5           2386   L026002?:
08E5           2387   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:620: waitms(1000);
08E5 9003E8    2388            mov     dptr,#0x03E8
08E8 120100    2389            lcall   _waitms
08EB           2390   L026011?:
08EB           2391   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:621: LASER = 1;
08EB D2B0      2392            setb    _P3_0
08ED 22        2393            ret
08EE           2394   ;------------------------------------------------------------
08EE           2395   ;Allocation info for local variables in function 'putchar1'
08EE           2396   ;------------------------------------------------------------
08EE           2397   ;c                         Allocated to registers r2 
08EE           2398   ;------------------------------------------------------------
08EE           2399   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:625: void putchar1 (char c) 
08EE           2400   ;        -----------------------------------------
08EE           2401   ;         function putchar1
08EE           2402   ;        -----------------------------------------
08EE           2403   _putchar1:
08EE AA82      2404            mov     r2,dpl
08F0           2405   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:627: SFRPAGE = 0x20;
08F0 75A720    2406            mov     _SFRPAGE,#0x20
08F3           2407   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:628: if (c == '\n') 
08F3 BA0AA8    2408            cjne    r2,#0x0A,L027006?
08F6           2409   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:630: while (!TI1);
08F6           2410   L027001?:
08F6           2411   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:631: TI1=0;
08F6 10C928    2412            jbc     _TI1,L027017?
08F9 8001      2413            sjmp    L027001?
08FB           2414   L027017?:
08FB           2415   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:632: SBUF1 = '\r';
08FB 75920D    2416            mov     _SBUF1,#0x0D
08FE           2417   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:634: while (!TI1);
08FE           2418   L027006?:
08FE           2419   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:635: TI1=0;
08FE 10C968    2420            jbc     _TI1,L027018?
0901 8001      2421            sjmp    L027006?
0903           2422   L027018?:
0903           2423   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:636: SBUF1 = c;
0903 8A92      2424            mov     _SBUF1,r2
0905           2425   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:637: SFRPAGE = 0x00;
0905 75A700    2426            mov     _SFRPAGE,#0x00
0908 22        2427            ret
0909           2428   ;------------------------------------------------------------
0909           2429   ;Allocation info for local variables in function 'getchar1'
0909           2430   ;------------------------------------------------------------
0909           2431   ;c                         Allocated to registers 
0909           2432   ;------------------------------------------------------------
0909           2433   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:640: char getchar1 (void)
0909           2434   ;        -----------------------------------------
0909           2435   ;         function getchar1
0909           2436   ;        -----------------------------------------
0909           2437   _getchar1:
0909           2438   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:643: SFRPAGE = 0x20;
0909 75A720    2439            mov     _SFRPAGE,#0x20
090C           2440   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:644: while (!RI1);
090C           2441   L028001?:
090C           2442   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:645: RI1=0;
090C 10C8E8    2443            jbc     _RI1,L028008?
090F 8001      2444            sjmp    L028001?
0911           2445   L028008?:
0911           2446   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:647: SCON1&=0b_0011_1111;
0911 53C83F    2447            anl     _SCON1,#0x3F
0914           2448   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:648: c = SBUF1;
0914 859282    2449            mov     dpl,_SBUF1
0917           2450   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:649: SFRPAGE = 0x00;
0917 75A700    2451            mov     _SFRPAGE,#0x00
091A           2452   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:650: return (c);
091A 22        2453            ret
091B           2454   ;------------------------------------------------------------
091B           2455   ;Allocation info for local variables in function 'puts1'
091B           2456   ;------------------------------------------------------------
091B           2457   ;buff                      Allocated to registers r2 r3 r4 
091B           2458   ;j                         Allocated to registers r5 r6 
091B           2459   ;------------------------------------------------------------
091B           2460   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:653: void puts1(char * buff)
091B           2461   ;        -----------------------------------------
091B           2462   ;         function puts1
091B           2463   ;        -----------------------------------------
091B           2464   _puts1:
091B AA82      2465            mov     r2,dpl
091D AB83      2466            mov     r3,dph
091F ACF0      2467            mov     r4,b
0921           2468   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:656: for(j=0; buff[j]!=0; j++) 
0921 7D00      2469            mov     r5,#0x00
0923 7E00      2470            mov     r6,#0x00
0925           2471   L029001?:
0925 ED        2472            mov     a,r5
0926 2A        2473            add     a,r2
0927 FF        2474            mov     r7,a
0928 EE        2475            mov     a,r6
0929 3B        2476            addc    a,r3
092A F8        2477            mov     r0,a
092B 8C01      2478            mov     ar1,r4
092D 8F82      2479            mov     dpl,r7
092F 8883      2480            mov     dph,r0
0931 89F0      2481            mov     b,r1
0933 120100    2482            lcall   __gptrget
0936 FF        2483            mov     r7,a
0937 6001      2484            jz      L029005?
0939           2485   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:657: putchar1(buff[j]);
0939 8F82      2486            mov     dpl,r7
093B C002      2487            push    ar2
093D C003      2488            push    ar3
093F C004      2489            push    ar4
0941 C005      2490            push    ar5
0943 C006      2491            push    ar6
0945 120100    2492            lcall   _putchar1
0948 D006      2493            pop     ar6
094A D005      2494            pop     ar5
094C D004      2495            pop     ar4
094E D003      2496            pop     ar3
0950 D002      2497            pop     ar2
0952           2498   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:656: for(j=0; buff[j]!=0; j++) 
0952 0D        2499            inc     r5
0953 BD0028    2500            cjne    r5,#0x00,L029001?
0956 0E        2501            inc     r6
0957 8001      2502            sjmp    L029001?
0959           2503   L029005?:
0959 22        2504            ret
095A           2505   ;------------------------------------------------------------
095A           2506   ;Allocation info for local variables in function 'checkRight'
095A           2507   ;------------------------------------------------------------
095A           2508   ;threshold                 Allocated to registers r2 r3 r4 r5 
095A           2509   ;------------------------------------------------------------
095A           2510   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:661: int checkRight(float threshold){
095A           2511   ;        -----------------------------------------
095A           2512   ;         function checkRight
095A           2513   ;        -----------------------------------------
095A           2514   _checkRight:
095A AA82      2515            mov     r2,dpl
095C AB83      2516            mov     r3,dph
095E ACF0      2517            mov     r4,b
0960 FD        2518            mov     r5,a
0961           2519   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:662: PWMRight();
0961 C002      2520            push    ar2
0963 C003      2521            push    ar3
0965 C004      2522            push    ar4
0967 C005      2523            push    ar5
0969 120100    2524            lcall   _PWMRight
096C D005      2525            pop     ar5
096E D004      2526            pop     ar4
0970 D003      2527            pop     ar3
0972 D002      2528            pop     ar2
0974           2529   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:663: if(threshold <= 0.6)
0974 749A      2530            mov     a,#0x9A
0976 C0E0      2531            push    acc
0978 7499      2532            mov     a,#0x99
097A C0E0      2533            push    acc
097C 7419      2534            mov     a,#0x19
097E C0E0      2535            push    acc
0980 743F      2536            mov     a,#0x3F
0982 C0E0      2537            push    acc
0984 8A82      2538            mov     dpl,r2
0986 8B83      2539            mov     dph,r3
0988 8CF0      2540            mov     b,r4
098A ED        2541            mov     a,r5
098B 120100    2542            lcall   ___fsgt
098E AA82      2543            mov     r2,dpl
0990 E581      2544            mov     a,sp
0992 24FC      2545            add     a,#0xfc
0994 F581      2546            mov     sp,a
0996 EA        2547            mov     a,r2
0997 7001      2548            jnz     L030002?
0999           2549   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:664: return 0;
0999 900000    2550            mov     dptr,#0x0000
099C           2551   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:666: return 1;
099C 22        2552            ret
099D           2553   L030002?:
099D 900001    2554            mov     dptr,#0x0001
09A0 22        2555            ret
09A1           2556   ;------------------------------------------------------------
09A1           2557   ;Allocation info for local variables in function 'checkLeft'
09A1           2558   ;------------------------------------------------------------
09A1           2559   ;threshold                 Allocated to registers r2 r3 r4 r5 
09A1           2560   ;------------------------------------------------------------
09A1           2561   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:669: int checkLeft(float threshold){
09A1           2562   ;        -----------------------------------------
09A1           2563   ;         function checkLeft
09A1           2564   ;        -----------------------------------------
09A1           2565   _checkLeft:
09A1 AA82      2566            mov     r2,dpl
09A3 AB83      2567            mov     r3,dph
09A5 ACF0      2568            mov     r4,b
09A7 FD        2569            mov     r5,a
09A8           2570   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:670: PWMLeft();
09A8 C002      2571            push    ar2
09AA C003      2572            push    ar3
09AC C004      2573            push    ar4
09AE C005      2574            push    ar5
09B0 120100    2575            lcall   _PWMLeft
09B3 D005      2576            pop     ar5
09B5 D004      2577            pop     ar4
09B7 D003      2578            pop     ar3
09B9 D002      2579            pop     ar2
09BB           2580   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:671: if(threshold <= 0.6)
09BB 749A      2581            mov     a,#0x9A
09BD C0E0      2582            push    acc
09BF 7499      2583            mov     a,#0x99
09C1 C0E0      2584            push    acc
09C3 7419      2585            mov     a,#0x19
09C5 C0E0      2586            push    acc
09C7 743F      2587            mov     a,#0x3F
09C9 C0E0      2588            push    acc
09CB 8A82      2589            mov     dpl,r2
09CD 8B83      2590            mov     dph,r3
09CF 8CF0      2591            mov     b,r4
09D1 ED        2592            mov     a,r5
09D2 120100    2593            lcall   ___fsgt
09D5 AA82      2594            mov     r2,dpl
09D7 E581      2595            mov     a,sp
09D9 24FC      2596            add     a,#0xfc
09DB F581      2597            mov     sp,a
09DD EA        2598            mov     a,r2
09DE 7001      2599            jnz     L031002?
09E0           2600   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:672: return 0;
09E0 900000    2601            mov     dptr,#0x0000
09E3           2602   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:674: return 1;
09E3 22        2603            ret
09E4           2604   L031002?:
09E4 900001    2605            mov     dptr,#0x0001
09E7 22        2606            ret
09E8           2607   ;------------------------------------------------------------
09E8           2608   ;Allocation info for local variables in function 'forward1'
09E8           2609   ;------------------------------------------------------------
09E8           2610   ;------------------------------------------------------------
09E8           2611   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:677: void forward1(){
09E8           2612   ;        -----------------------------------------
09E8           2613   ;         function forward1
09E8           2614   ;        -----------------------------------------
09E8           2615   _forward1:
09E8           2616   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:678: PWMforward();
09E8 120100    2617            lcall   _PWMforward
09EB           2618   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:679: waitms(1100);
09EB 90044C    2619            mov     dptr,#0x044C
09EE 120100    2620            lcall   _waitms
09F1           2621   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:680: PWMStop();
09F1 020100    2622            ljmp    _PWMStop
09F4           2623   ;------------------------------------------------------------
09F4           2624   ;Allocation info for local variables in function 'bluetoothMaze'
09F4           2625   ;------------------------------------------------------------
09F4           2626   ;ycoord                    Allocated with name '_bluetoothMaze_PARM_2'
09F4           2627   ;xcoord                    Allocated with name '_bluetoothMaze_xcoord_1_119'
09F4           2628   ;x                         Allocated with name '_bluetoothMaze_x_1_120'
09F4           2629   ;y                         Allocated with name '_bluetoothMaze_y_1_120'
09F4           2630   ;threshold                 Allocated with name '_bluetoothMaze_threshold_1_120'
09F4           2631   ;period                    Allocated to registers r2 r3 r4 r5 
09F4           2632   ;overflow_count            Allocated to registers r0 r1 
09F4           2633   ;------------------------------------------------------------
09F4           2634   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:683: void bluetoothMaze(int xcoord, int ycoord){
09F4           2635   ;        -----------------------------------------
09F4           2636   ;         function bluetoothMaze
09F4           2637   ;        -----------------------------------------
09F4           2638   _bluetoothMaze:
09F4 858238    2639            mov     _bluetoothMaze_xcoord_1_119,dpl
09F7 858339    2640            mov     (_bluetoothMaze_xcoord_1_119 + 1),dph
09FA           2641   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:684: int x = 0;
09FA           2642   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:685: int y = 0;
09FA E4        2643            clr     a
09FB F588      2644            mov     _bluetoothMaze_x_1_120,a
09FD F589      2645            mov     (_bluetoothMaze_x_1_120 + 1),a
09FF F5D8      2646            mov     _bluetoothMaze_y_1_120,a
0A01 F5D9      2647            mov     (_bluetoothMaze_y_1_120 + 1),a
0A03           2648   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:690: while(x<=5 && x>=0 && y<=5 && y>=0){
0A03           2649   L033041?:
0A03 C3        2650            clr     c
0A04 7405      2651            mov     a,#0x05
0A06 9588      2652            subb    a,_bluetoothMaze_x_1_120
0A08 E4        2653            clr     a
0A09 6480      2654            xrl     a,#0x80
0A0B 8589F0    2655            mov     b,(_bluetoothMaze_x_1_120 + 1)
0A0E 63F080    2656            xrl     b,#0x80
0A11 95F0      2657            subb    a,b
0A13 5001      2658            jnc     L033073?
0A15 22        2659            ret
0A16           2660   L033073?:
0A16 E589      2661            mov     a,(_bluetoothMaze_x_1_120 + 1)
0A18 30E7A8    2662            jnb     acc.7,L033074?
0A1B 22        2663            ret
0A1C           2664   L033074?:
0A1C C3        2665            clr     c
0A1D 7405      2666            mov     a,#0x05
0A1F 95D8      2667            subb    a,_bluetoothMaze_y_1_120
0A21 E4        2668            clr     a
0A22 6480      2669            xrl     a,#0x80
0A24 85D9F0    2670            mov     b,(_bluetoothMaze_y_1_120 + 1)
0A27 63F080    2671            xrl     b,#0x80
0A2A 95F0      2672            subb    a,b
0A2C 5001      2673            jnc     L033075?
0A2E 22        2674            ret
0A2F           2675   L033075?:
0A2F E5D9      2676            mov     a,(_bluetoothMaze_y_1_120 + 1)
0A31 30E728    2677            jnb     acc.7,L033076?
0A34 22        2678            ret
0A35           2679   L033076?:
0A35           2680   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:692: TL0=0; 
0A35 758A00    2681            mov     _TL0,#0x00
0A38           2682   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:693: TH0=0;
0A38 758C00    2683            mov     _TH0,#0x00
0A3B           2684   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:694: TF0=0;
0A3B C28D      2685            clr     _TF0
0A3D           2686   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:696: while(P2_1!=0); // Wait for the signal to be zero
0A3D           2687   L033001?:
0A3D 20A168    2688            jb      _P2_1,L033001?
0A40           2689   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:697: while(P2_1!=1); // Wait for the signal to be one
0A40           2690   L033004?:
0A40 30A1A8    2691            jnb     _P2_1,L033004?
0A43           2692   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:698: TR0=1; // Start the timer
0A43 D28C      2693            setb    _TR0
0A45           2694   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:699: while(P2_1!=0) // Wait for the signal to be zero
0A45 7800      2695            mov     r0,#0x00
0A47 7900      2696            mov     r1,#0x00
0A49           2697   L033009?:
0A49 30A128    2698            jnb     _P2_1,L033011?
0A4C           2699   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:701: if(TF0==1) // Did the 16-bit timer overflow?
0A4C           2700   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:703: TF0=0;
0A4C 108D68    2701            jbc     _TF0,L033080?
0A4F 8001      2702            sjmp    L033009?
0A51           2703   L033080?:
0A51           2704   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:704: overflow_count++;
0A51 08        2705            inc     r0
0A52 B800E8    2706            cjne    r0,#0x00,L033009?
0A55 09        2707            inc     r1
0A56 8001      2708            sjmp    L033009?
0A58           2709   L033011?:
0A58           2710   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:715: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0A58 C28C      2711            clr     _TR0
0A5A           2712   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:716: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0A5A 8882      2713            mov     dpl,r0
0A5C 8983      2714            mov     dph,r1
0A5E 120100    2715            lcall   ___sint2fs
0A61 A882      2716            mov     r0,dpl
0A63 A983      2717            mov     r1,dph
0A65 AAF0      2718            mov     r2,b
0A67 FB        2719            mov     r3,a
0A68 C000      2720            push    ar0
0A6A C001      2721            push    ar1
0A6C C002      2722            push    ar2
0A6E C003      2723            push    ar3
0A70 900000    2724            mov     dptr,#0x0000
0A73 75F080    2725            mov     b,#0x80
0A76 7447      2726            mov     a,#0x47
0A78 120100    2727            lcall   ___fsmul
0A7B AA82      2728            mov     r2,dpl
0A7D AB83      2729            mov     r3,dph
0A7F A8F0      2730            mov     r0,b
0A81 F9        2731            mov     r1,a
0A82 E581      2732            mov     a,sp
0A84 24FC      2733            add     a,#0xfc
0A86 F581      2734            mov     sp,a
0A88 858C82    2735            mov     dpl,_TH0
0A8B C002      2736            push    ar2
0A8D C003      2737            push    ar3
0A8F C000      2738            push    ar0
0A91 C001      2739            push    ar1
0A93 120100    2740            lcall   ___uchar2fs
0A96 AC82      2741            mov     r4,dpl
0A98 AD83      2742            mov     r5,dph
0A9A AEF0      2743            mov     r6,b
0A9C FF        2744            mov     r7,a
0A9D C004      2745            push    ar4
0A9F C005      2746            push    ar5
0AA1 C006      2747            push    ar6
0AA3 C007      2748            push    ar7
0AA5 900000    2749            mov     dptr,#0x0000
0AA8 75F080    2750            mov     b,#0x80
0AAB 7443      2751            mov     a,#0x43
0AAD 120100    2752            lcall   ___fsmul
0AB0 AC82      2753            mov     r4,dpl
0AB2 AD83      2754            mov     r5,dph
0AB4 AEF0      2755            mov     r6,b
0AB6 FF        2756            mov     r7,a
0AB7 E581      2757            mov     a,sp
0AB9 24FC      2758            add     a,#0xfc
0ABB F581      2759            mov     sp,a
0ABD D001      2760            pop     ar1
0ABF D000      2761            pop     ar0
0AC1 D003      2762            pop     ar3
0AC3 D002      2763            pop     ar2
0AC5 C004      2764            push    ar4
0AC7 C005      2765            push    ar5
0AC9 C006      2766            push    ar6
0ACB C007      2767            push    ar7
0ACD 8A82      2768            mov     dpl,r2
0ACF 8B83      2769            mov     dph,r3
0AD1 88F0      2770            mov     b,r0
0AD3 E9        2771            mov     a,r1
0AD4 120100    2772            lcall   ___fsadd
0AD7 AA82      2773            mov     r2,dpl
0AD9 AB83      2774            mov     r3,dph
0ADB ACF0      2775            mov     r4,b
0ADD FD        2776            mov     r5,a
0ADE E581      2777            mov     a,sp
0AE0 24FC      2778            add     a,#0xfc
0AE2 F581      2779            mov     sp,a
0AE4 AE8A      2780            mov     r6,_TL0
0AE6 7F00      2781            mov     r7,#0x00
0AE8 8E82      2782            mov     dpl,r6
0AEA 8F83      2783            mov     dph,r7
0AEC C002      2784            push    ar2
0AEE C003      2785            push    ar3
0AF0 C004      2786            push    ar4
0AF2 C005      2787            push    ar5
0AF4 120100    2788            lcall   ___sint2fs
0AF7 AE82      2789            mov     r6,dpl
0AF9 AF83      2790            mov     r7,dph
0AFB A8F0      2791            mov     r0,b
0AFD F9        2792            mov     r1,a
0AFE D005      2793            pop     ar5
0B00 D004      2794            pop     ar4
0B02 D003      2795            pop     ar3
0B04 D002      2796            pop     ar2
0B06 C006      2797            push    ar6
0B08 C007      2798            push    ar7
0B0A C000      2799            push    ar0
0B0C C001      2800            push    ar1
0B0E 8A82      2801            mov     dpl,r2
0B10 8B83      2802            mov     dph,r3
0B12 8CF0      2803            mov     b,r4
0B14 ED        2804            mov     a,r5
0B15 120100    2805            lcall   ___fsadd
0B18 AA82      2806            mov     r2,dpl
0B1A AB83      2807            mov     r3,dph
0B1C ACF0      2808            mov     r4,b
0B1E FD        2809            mov     r5,a
0B1F E581      2810            mov     a,sp
0B21 24FC      2811            add     a,#0xfc
0B23 F581      2812            mov     sp,a
0B25 C002      2813            push    ar2
0B27 C003      2814            push    ar3
0B29 C004      2815            push    ar4
0B2B C005      2816            push    ar5
0B2D 90F4FC    2817            mov     dptr,#0xF4FC
0B30 75F032    2818            mov     b,#0x32
0B33 7434      2819            mov     a,#0x34
0B35 120100    2820            lcall   ___fsmul
0B38 AA82      2821            mov     r2,dpl
0B3A AB83      2822            mov     r3,dph
0B3C ACF0      2823            mov     r4,b
0B3E FD        2824            mov     r5,a
0B3F E581      2825            mov     a,sp
0B41 24FC      2826            add     a,#0xfc
0B43 F581      2827            mov     sp,a
0B45           2828   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:717: threshold = period*1000;
0B45 C002      2829            push    ar2
0B47 C003      2830            push    ar3
0B49 C004      2831            push    ar4
0B4B C005      2832            push    ar5
0B4D 900000    2833            mov     dptr,#0x0000
0B50 75F07A    2834            mov     b,#0x7A
0B53 7444      2835            mov     a,#0x44
0B55 120100    2836            lcall   ___fsmul
0B58 858228    2837            mov     _bluetoothMaze_threshold_1_120,dpl
0B5B 858329    2838            mov     (_bluetoothMaze_threshold_1_120 + 1),dph
0B5E 85F02A    2839            mov     (_bluetoothMaze_threshold_1_120 + 2),b
0B61 F52B      2840            mov     (_bluetoothMaze_threshold_1_120 + 3),a
0B63 E581      2841            mov     a,sp
0B65 24FC      2842            add     a,#0xfc
0B67 F581      2843            mov     sp,a
0B69           2844   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:720: while(y != ycoord){
0B69 749A      2845            mov     a,#0x9A
0B6B C0E0      2846            push    acc
0B6D 7499      2847            mov     a,#0x99
0B6F C0E0      2848            push    acc
0B71 7419      2849            mov     a,#0x19
0B73 C0E0      2850            push    acc
0B75 743F      2851            mov     a,#0x3F
0B77 C0E0      2852            push    acc
0B79 852882    2853            mov     dpl,_bluetoothMaze_threshold_1_120
0B7C 852983    2854            mov     dph,(_bluetoothMaze_threshold_1_120 + 1)
0B7F 852AF0    2855            mov     b,(_bluetoothMaze_threshold_1_120 + 2)
0B82 E52B      2856            mov     a,(_bluetoothMaze_threshold_1_120 + 3)
0B84 120100    2857            lcall   ___fsgt
0B87 AE82      2858            mov     r6,dpl
0B89 E581      2859            mov     a,sp
0B8B 24FC      2860            add     a,#0xfc
0B8D F581      2861            mov     sp,a
0B8F AFD8      2862            mov     r7,_bluetoothMaze_y_1_120
0B91 A8D9      2863            mov     r0,(_bluetoothMaze_y_1_120 + 1)
0B93           2864   L033020?:
0B93 EF        2865            mov     a,r7
0B94 B5E8E8    2866            cjne    a,_bluetoothMaze_PARM_2,L033081?
0B97 E8        2867            mov     a,r0
0B98 B5E9E8    2868            cjne    a,(_bluetoothMaze_PARM_2 + 1),L033081?
0B9B 020100    2869            ljmp    L033071?
0B9E           2870   L033081?:
0B9E           2871   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:721: if(threshold <= 0.6){
0B9E EE        2872            mov     a,r6
0B9F 7001      2873            jnz     L033018?
0BA1           2874   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:722: if(checkRight(threshold) == 1){
0BA1 852882    2875            mov     dpl,_bluetoothMaze_threshold_1_120
0BA4 852983    2876            mov     dph,(_bluetoothMaze_threshold_1_120 + 1)
0BA7 852AF0    2877            mov     b,(_bluetoothMaze_threshold_1_120 + 2)
0BAA E52B      2878            mov     a,(_bluetoothMaze_threshold_1_120 + 3)
0BAC C006      2879            push    ar6
0BAE C007      2880            push    ar7
0BB0 C000      2881            push    ar0
0BB2 120100    2882            lcall   _checkRight
0BB5 A982      2883            mov     r1,dpl
0BB7 AA83      2884            mov     r2,dph
0BB9 D000      2885            pop     ar0
0BBB D007      2886            pop     ar7
0BBD D006      2887            pop     ar6
0BBF B901A8    2888            cjne    r1,#0x01,L033015?
0BC2 BA00A8    2889            cjne    r2,#0x00,L033015?
0BC5           2890   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:723: forward1();
0BC5 C006      2891            push    ar6
0BC7 C007      2892            push    ar7
0BC9 C000      2893            push    ar0
0BCB 120100    2894            lcall   _forward1
0BCE D000      2895            pop     ar0
0BD0 D007      2896            pop     ar7
0BD2 D006      2897            pop     ar6
0BD4           2898   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:724: x++;
0BD4 0588      2899            inc     _bluetoothMaze_x_1_120
0BD6 E4        2900            clr     a
0BD7 B588A8    2901            cjne    a,_bluetoothMaze_x_1_120,L033020?
0BDA 0589      2902            inc     (_bluetoothMaze_x_1_120 + 1)
0BDC 8001      2903            sjmp    L033020?
0BDE           2904   L033015?:
0BDE           2905   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:726: else if (checkLeft(threshold) == 1){
0BDE 852882    2906            mov     dpl,_bluetoothMaze_threshold_1_120
0BE1 852983    2907            mov     dph,(_bluetoothMaze_threshold_1_120 + 1)
0BE4 852AF0    2908            mov     b,(_bluetoothMaze_threshold_1_120 + 2)
0BE7 E52B      2909            mov     a,(_bluetoothMaze_threshold_1_120 + 3)
0BE9 C006      2910            push    ar6
0BEB C007      2911            push    ar7
0BED C000      2912            push    ar0
0BEF 120100    2913            lcall   _checkLeft
0BF2 AA82      2914            mov     r2,dpl
0BF4 AB83      2915            mov     r3,dph
0BF6 D000      2916            pop     ar0
0BF8 D007      2917            pop     ar7
0BFA D006      2918            pop     ar6
0BFC BA01A8    2919            cjne    r2,#0x01,L033020?
0BFF BB00A8    2920            cjne    r3,#0x00,L033020?
0C02           2921   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:727: forward1();
0C02 C006      2922            push    ar6
0C04 C007      2923            push    ar7
0C06 C000      2924            push    ar0
0C08 120100    2925            lcall   _forward1
0C0B D000      2926            pop     ar0
0C0D D007      2927            pop     ar7
0C0F D006      2928            pop     ar6
0C11           2929   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:728: x--;
0C11 1588      2930            dec     _bluetoothMaze_x_1_120
0C13 74FF      2931            mov     a,#0xff
0C15 B588E8    2932            cjne    a,_bluetoothMaze_x_1_120,L033088?
0C18 1589      2933            dec     (_bluetoothMaze_x_1_120 + 1)
0C1A           2934   L033088?:
0C1A 020100    2935            ljmp    L033020?
0C1D           2936   L033018?:
0C1D           2937   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:732: forward1();
0C1D C006      2938            push    ar6
0C1F C007      2939            push    ar7
0C21 C000      2940            push    ar0
0C23 120100    2941            lcall   _forward1
0C26 D000      2942            pop     ar0
0C28 D007      2943            pop     ar7
0C2A D006      2944            pop     ar6
0C2C           2945   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:733: y++;
0C2C 0F        2946            inc     r7
0C2D BF0028    2947            cjne    r7,#0x00,L033089?
0C30 08        2948            inc     r0
0C31           2949   L033089?:
0C31 8FD8      2950            mov     _bluetoothMaze_y_1_120,r7
0C33 88D9      2951            mov     (_bluetoothMaze_y_1_120 + 1),r0
0C35 020100    2952            ljmp    L033020?
0C38           2953   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:736: while(x != xcoord){
0C38           2954   L033071?:
0C38 8FD8      2955            mov     _bluetoothMaze_y_1_120,r7
0C3A 88D9      2956            mov     (_bluetoothMaze_y_1_120 + 1),r0
0C3C AA88      2957            mov     r2,_bluetoothMaze_x_1_120
0C3E AB89      2958            mov     r3,(_bluetoothMaze_x_1_120 + 1)
0C40           2959   L033031?:
0C40 EA        2960            mov     a,r2
0C41 B538A8    2961            cjne    a,_bluetoothMaze_xcoord_1_119,L033090?
0C44 EB        2962            mov     a,r3
0C45 B539A8    2963            cjne    a,(_bluetoothMaze_xcoord_1_119 + 1),L033090?
0C48 7401      2964            mov     a,#0x01
0C4A 8001      2965            sjmp    L033091?
0C4C           2966   L033090?:
0C4C E4        2967            clr     a
0C4D           2968   L033091?:
0C4D FC        2969            mov     r4,a
0C4E 6001      2970            jz      L033092?
0C50 020100    2971            ljmp    L033072?
0C53           2972   L033092?:
0C53           2973   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:737: if(threshold <= 0.6){ //threshold<=0.6
0C53 EE        2974            mov     a,r6
0C54 6001      2975            jz      L033093?
0C56 020100    2976            ljmp    L033029?
0C59           2977   L033093?:
0C59           2978   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:738: if(checkLeft(threshold) == 1){
0C59 852882    2979            mov     dpl,_bluetoothMaze_threshold_1_120
0C5C 852983    2980            mov     dph,(_bluetoothMaze_threshold_1_120 + 1)
0C5F 852AF0    2981            mov     b,(_bluetoothMaze_threshold_1_120 + 2)
0C62 E52B      2982            mov     a,(_bluetoothMaze_threshold_1_120 + 3)
0C64 C002      2983            push    ar2
0C66 C003      2984            push    ar3
0C68 C006      2985            push    ar6
0C6A 120100    2986            lcall   _checkLeft
0C6D AD82      2987            mov     r5,dpl
0C6F AF83      2988            mov     r7,dph
0C71 D006      2989            pop     ar6
0C73 D003      2990            pop     ar3
0C75 D002      2991            pop     ar2
0C77 BD0128    2992            cjne    r5,#0x01,L033026?
0C7A BF0028    2993            cjne    r7,#0x00,L033026?
0C7D           2994   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:739: forward1();
0C7D C002      2995            push    ar2
0C7F C003      2996            push    ar3
0C81 C006      2997            push    ar6
0C83 120100    2998            lcall   _forward1
0C86 D006      2999            pop     ar6
0C88 D003      3000            pop     ar3
0C8A D002      3001            pop     ar2
0C8C           3002   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:740: y--;
0C8C 15D8      3003            dec     _bluetoothMaze_y_1_120
0C8E 74FF      3004            mov     a,#0xff
0C90 B5D868    3005            cjne    a,_bluetoothMaze_y_1_120,L033096?
0C93 15D9      3006            dec     (_bluetoothMaze_y_1_120 + 1)
0C95           3007   L033096?:
0C95 8001      3008            sjmp    L033031?
0C97           3009   L033026?:
0C97           3010   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:742: else if (checkLeft(threshold) == 1){
0C97 852882    3011            mov     dpl,_bluetoothMaze_threshold_1_120
0C9A 852983    3012            mov     dph,(_bluetoothMaze_threshold_1_120 + 1)
0C9D 852AF0    3013            mov     b,(_bluetoothMaze_threshold_1_120 + 2)
0CA0 E52B      3014            mov     a,(_bluetoothMaze_threshold_1_120 + 3)
0CA2 C002      3015            push    ar2
0CA4 C003      3016            push    ar3
0CA6 C006      3017            push    ar6
0CA8 120100    3018            lcall   _checkLeft
0CAB AD82      3019            mov     r5,dpl
0CAD AF83      3020            mov     r7,dph
0CAF D006      3021            pop     ar6
0CB1 D003      3022            pop     ar3
0CB3 D002      3023            pop     ar2
0CB5 BD01A8    3024            cjne    r5,#0x01,L033097?
0CB8 BF00A8    3025            cjne    r7,#0x00,L033097?
0CBB 8001      3026            sjmp    L033098?
0CBD           3027   L033097?:
0CBD 020100    3028            ljmp    L033031?
0CC0           3029   L033098?:
0CC0           3030   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:743: forward1();
0CC0 C002      3031            push    ar2
0CC2 C003      3032            push    ar3
0CC4 C006      3033            push    ar6
0CC6 120100    3034            lcall   _forward1
0CC9 D006      3035            pop     ar6
0CCB D003      3036            pop     ar3
0CCD D002      3037            pop     ar2
0CCF           3038   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:744: y++;
0CCF 05D8      3039            inc     _bluetoothMaze_y_1_120
0CD1 E4        3040            clr     a
0CD2 B5D828    3041            cjne    a,_bluetoothMaze_y_1_120,L033099?
0CD5 05D9      3042            inc     (_bluetoothMaze_y_1_120 + 1)
0CD7           3043   L033099?:
0CD7 020100    3044            ljmp    L033031?
0CDA           3045   L033029?:
0CDA           3046   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:748: forward1();
0CDA C002      3047            push    ar2
0CDC C003      3048            push    ar3
0CDE C006      3049            push    ar6
0CE0 120100    3050            lcall   _forward1
0CE3 D006      3051            pop     ar6
0CE5 D003      3052            pop     ar3
0CE7 D002      3053            pop     ar2
0CE9           3054   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:749: x++;
0CE9 0A        3055            inc     r2
0CEA BA0068    3056            cjne    r2,#0x00,L033100?
0CED 0B        3057            inc     r3
0CEE           3058   L033100?:
0CEE 8A88      3059            mov     _bluetoothMaze_x_1_120,r2
0CF0 8B89      3060            mov     (_bluetoothMaze_x_1_120 + 1),r3
0CF2 020100    3061            ljmp    L033031?
0CF5           3062   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:752: while(y == ycoord && x == xcoord);
0CF5           3063   L033072?:
0CF5 8A88      3064            mov     _bluetoothMaze_x_1_120,r2
0CF7 8B89      3065            mov     (_bluetoothMaze_x_1_120 + 1),r3
0CF9 E5E8      3066            mov     a,_bluetoothMaze_PARM_2
0CFB B5D8A8    3067            cjne    a,_bluetoothMaze_y_1_120,L033101?
0CFE E5E9      3068            mov     a,(_bluetoothMaze_PARM_2 + 1)
0D00 B5D9A8    3069            cjne    a,(_bluetoothMaze_y_1_120 + 1),L033101?
0D03 7401      3070            mov     a,#0x01
0D05 8001      3071            sjmp    L033102?
0D07           3072   L033101?:
0D07 E4        3073            clr     a
0D08           3074   L033102?:
0D08 FA        3075            mov     r2,a
0D09           3076   L033035?:
0D09 EA        3077            mov     a,r2
0D0A 7001      3078            jnz     L033103?
0D0C 020100    3079            ljmp    L033041?
0D0F           3080   L033103?:
0D0F EC        3081            mov     a,r4
0D10 7001      3082            jnz     L033104?
0D12 020100    3083            ljmp    L033041?
0D15           3084   L033104?:
0D15 8001      3085            sjmp    L033035?
0D17           3086   ;------------------------------------------------------------
0D17           3087   ;Allocation info for local variables in function 'main'
0D17           3088   ;------------------------------------------------------------
0D17           3089   ;checkcommand              Allocated to registers 
0D17           3090   ;i                         Allocated to registers r2 r3 
0D17           3091   ;sig1                      Allocated to registers 
0D17           3092   ;sig2                      Allocated to registers 
0D17           3093   ;peak                      Allocated to registers 
0D17           3094   ;voltspeak                 Allocated to registers 
0D17           3095   ;periodpwm                 Allocated to registers 
0D17           3096   ;period                    Allocated to registers r2 r3 r4 r5 
0D17           3097   ;overflow_count            Allocated to registers r3 r2 
0D17           3098   ;pir_voltage               Allocated with name '_main_pir_voltage_1_135'
0D17           3099   ;xcoord                    Allocated with name '_main_xcoord_1_135'
0D17           3100   ;ycoord                    Allocated with name '_main_ycoord_1_135'
0D17           3101   ;temp                      Allocated with name '_main_temp_1_135'
0D17           3102   ;count                     Allocated to registers r2 r3 
0D17           3103   ;getCoord                  Allocated with name '_main_getCoord_1_135'
0D17           3104   ;mode_toggle               Allocated to registers r6 r7 
0D17           3105   ;sloc0                     Allocated with name '_main_sloc0_1_0'
0D17           3106   ;------------------------------------------------------------
0D17           3107   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:762: void main(void)
0D17           3108   ;        -----------------------------------------
0D17           3109   ;         function main
0D17           3110   ;        -----------------------------------------
0D17           3111   _main:
0D17           3112   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:775: char xcoord = 'a';
0D17 75C861    3113            mov     _main_xcoord_1_135,#0x61
0D1A           3114   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:776: char ycoord = 'a';
0D1A 751861    3115            mov     _main_ycoord_1_135,#0x61
0D1D           3116   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:779: int getCoord = 0; //0 = no coord send; 1 = coord sent
0D1D E4        3117            clr     a
0D1E F5B8      3118            mov     _main_getCoord_1_135,a
0D20 F5B9      3119            mov     (_main_getCoord_1_135 + 1),a
0D22           3120   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:783: UART1_Init(9600);
0D22 902580    3121            mov     dptr,#0x2580
0D25 E4        3122            clr     a
0D26 F5F0      3123            mov     b,a
0D28 120100    3124            lcall   _UART1_Init
0D2B           3125   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:785: TL0=0;
0D2B 758A00    3126            mov     _TL0,#0x00
0D2E           3127   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:786: TH0=0;
0D2E 758C00    3128            mov     _TH0,#0x00
0D31           3129   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:787: TF0=0;         
0D31 C28D      3130            clr     _TF0
0D33           3131   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:788: TIMER0_Init();
0D33 120100    3132            lcall   _TIMER0_Init
0D36           3133   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:790: InitPinADC(1, 6); // Configure P2.5 as analog input
0D36 75F006    3134            mov     _InitPinADC_PARM_2,#0x06
0D39 758201    3135            mov     dpl,#0x01
0D3C 120100    3136            lcall   _InitPinADC
0D3F           3137   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:791: InitPinADC(2, 3); //???        
0D3F 75F003    3138            mov     _InitPinADC_PARM_2,#0x03
0D42 758202    3139            mov     dpl,#0x02
0D45 120100    3140            lcall   _InitPinADC
0D48           3141   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:792: InitPinADC(2, 4); //PIR
0D48 75F004    3142            mov     _InitPinADC_PARM_2,#0x04
0D4B 758202    3143            mov     dpl,#0x02
0D4E 120100    3144            lcall   _InitPinADC
0D51           3145   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:793: InitPinADC(2, 6); //Temp Sensor
0D51 75F006    3146            mov     _InitPinADC_PARM_2,#0x06
0D54 758202    3147            mov     dpl,#0x02
0D57 120100    3148            lcall   _InitPinADC
0D5A           3149   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:794: InitADC();
0D5A 120100    3150            lcall   _InitADC
0D5D           3151   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:796: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0D5D 74E8      3152            mov     a,#__str_9
0D5F C0E0      3153            push    acc
0D61 74E4      3154            mov     a,#(__str_9 >> 8)
0D63 C0E0      3155            push    acc
0D65 7480      3156            mov     a,#0x80
0D67 C0E0      3157            push    acc
0D69 120100    3158            lcall   _printf
0D6C 1581      3159            dec     sp
0D6E 1581      3160            dec     sp
0D70 1581      3161            dec     sp
0D72           3162   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:798: "Check pins P2.2 and P2.1 with the oscilloscope.\r\n");
0D72 7428      3163            mov     a,#__str_10
0D74 C0E0      3164            push    acc
0D76 74E5      3165            mov     a,#(__str_10 >> 8)
0D78 C0E0      3166            push    acc
0D7A 7480      3167            mov     a,#0x80
0D7C C0E0      3168            push    acc
0D7E 120100    3169            lcall   _printf
0D81 1581      3170            dec     sp
0D83 1581      3171            dec     sp
0D85 1581      3172            dec     sp
0D87           3173   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:800: printf("\n\r");
0D87 7468      3174            mov     a,#__str_11
0D89 C0E0      3175            push    acc
0D8B 74E5      3176            mov     a,#(__str_11 >> 8)
0D8D C0E0      3177            push    acc
0D8F 7480      3178            mov     a,#0x80
0D91 C0E0      3179            push    acc
0D93 120100    3180            lcall   _printf
0D96 1581      3181            dec     sp
0D98 1581      3182            dec     sp
0D9A 1581      3183            dec     sp
0D9C           3184   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:802: PWMStop();
0D9C 120100    3185            lcall   _PWMStop
0D9F           3186   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:804: while (1)
0D9F           3187   L034059?:
0D9F           3188   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:806: mode_toggle = checkMode();
0D9F 120100    3189            lcall   _checkMode
0DA2 AE82      3190            mov     r6,dpl
0DA4 AF83      3191            mov     r7,dph
0DA6           3192   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:809: if(mode_toggle == 0){
0DA6 EE        3193            mov     a,r6
0DA7 4F        3194            orl     a,r7
0DA8 6001      3195            jz      L034099?
0DAA 020100    3196            ljmp    L034056?
0DAD           3197   L034099?:
0DAD           3198   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:810: printf("auto \r\n");
0DAD 7468      3199            mov     a,#__str_12
0DAF C0E0      3200            push    acc
0DB1 74E6      3201            mov     a,#(__str_12 >> 8)
0DB3 C0E0      3202            push    acc
0DB5 7480      3203            mov     a,#0x80
0DB7 C0E0      3204            push    acc
0DB9 120100    3205            lcall   _printf
0DBC 1581      3206            dec     sp
0DBE 1581      3207            dec     sp
0DC0 1581      3208            dec     sp
0DC2           3209   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:812: TL0=0; 
0DC2 758A00    3210            mov     _TL0,#0x00
0DC5           3211   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:813: TH0=0;
0DC5 758C00    3212            mov     _TH0,#0x00
0DC8           3213   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:814: TF0=0;
0DC8 C28D      3214            clr     _TF0
0DCA           3215   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:816: while(P2_1!=0); // Wait for the signal to be zero
0DCA           3216   L034001?:
0DCA 20A1A8    3217            jb      _P2_1,L034001?
0DCD           3218   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:817: while(P2_1!=1); // Wait for the signal to be one
0DCD           3219   L034004?:
0DCD 30A1E8    3220            jnb     _P2_1,L034004?
0DD0           3221   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:818: TR0=1; // Start the timer
0DD0 D28C      3222            setb    _TR0
0DD2           3223   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:819: while(P2_1!=0) // Wait for the signal to be zero
0DD2 7B00      3224            mov     r3,#0x00
0DD4 7A00      3225            mov     r2,#0x00
0DD6           3226   L034009?:
0DD6 30A168    3227            jnb     _P2_1,L034011?
0DD9           3228   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:821: if(TF0==1) // Did the 16-bit timer overflow?
0DD9           3229   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:823: TF0=0;
0DD9 108DA8    3230            jbc     _TF0,L034103?
0DDC 8001      3231            sjmp    L034009?
0DDE           3232   L034103?:
0DDE           3233   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:824: overflow_count++;
0DDE 0B        3234            inc     r3
0DDF BB0028    3235            cjne    r3,#0x00,L034009?
0DE2 0A        3236            inc     r2
0DE3 8001      3237            sjmp    L034009?
0DE5           3238   L034011?:
0DE5           3239   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:835: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0DE5 C28C      3240            clr     _TR0
0DE7           3241   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:836: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
0DE7 8B82      3242            mov     dpl,r3
0DE9 8A83      3243            mov     dph,r2
0DEB 120100    3244            lcall   ___sint2fs
0DEE AA82      3245            mov     r2,dpl
0DF0 AB83      3246            mov     r3,dph
0DF2 ACF0      3247            mov     r4,b
0DF4 FD        3248            mov     r5,a
0DF5 C002      3249            push    ar2
0DF7 C003      3250            push    ar3
0DF9 C004      3251            push    ar4
0DFB C005      3252            push    ar5
0DFD 900000    3253            mov     dptr,#0x0000
0E00 75F080    3254            mov     b,#0x80
0E03 7447      3255            mov     a,#0x47
0E05 120100    3256            lcall   ___fsmul
0E08 8582F8    3257            mov     _main_sloc0_1_0,dpl
0E0B 8583F9    3258            mov     (_main_sloc0_1_0 + 1),dph
0E0E 85F0FA    3259            mov     (_main_sloc0_1_0 + 2),b
0E11 F5FB      3260            mov     (_main_sloc0_1_0 + 3),a
0E13 E581      3261            mov     a,sp
0E15 24FC      3262            add     a,#0xfc
0E17 F581      3263            mov     sp,a
0E19 858C82    3264            mov     dpl,_TH0
0E1C 120100    3265            lcall   ___uchar2fs
0E1F AA82      3266            mov     r2,dpl
0E21 AB83      3267            mov     r3,dph
0E23 ACF0      3268            mov     r4,b
0E25 FD        3269            mov     r5,a
0E26 C002      3270            push    ar2
0E28 C003      3271            push    ar3
0E2A C004      3272            push    ar4
0E2C C005      3273            push    ar5
0E2E 900000    3274            mov     dptr,#0x0000
0E31 75F080    3275            mov     b,#0x80
0E34 7443      3276            mov     a,#0x43
0E36 120100    3277            lcall   ___fsmul
0E39 AA82      3278            mov     r2,dpl
0E3B AB83      3279            mov     r3,dph
0E3D ACF0      3280            mov     r4,b
0E3F FD        3281            mov     r5,a
0E40 E581      3282            mov     a,sp
0E42 24FC      3283            add     a,#0xfc
0E44 F581      3284            mov     sp,a
0E46 C002      3285            push    ar2
0E48 C003      3286            push    ar3
0E4A C004      3287            push    ar4
0E4C C005      3288            push    ar5
0E4E 85F882    3289            mov     dpl,_main_sloc0_1_0
0E51 85F983    3290            mov     dph,(_main_sloc0_1_0 + 1)
0E54 85FAF0    3291            mov     b,(_main_sloc0_1_0 + 2)
0E57 E5FB      3292            mov     a,(_main_sloc0_1_0 + 3)
0E59 120100    3293            lcall   ___fsadd
0E5C 8582F8    3294            mov     _main_sloc0_1_0,dpl
0E5F 8583F9    3295            mov     (_main_sloc0_1_0 + 1),dph
0E62 85F0FA    3296            mov     (_main_sloc0_1_0 + 2),b
0E65 F5FB      3297            mov     (_main_sloc0_1_0 + 3),a
0E67 E581      3298            mov     a,sp
0E69 24FC      3299            add     a,#0xfc
0E6B F581      3300            mov     sp,a
0E6D AA8A      3301            mov     r2,_TL0
0E6F 7B00      3302            mov     r3,#0x00
0E71 8A82      3303            mov     dpl,r2
0E73 8B83      3304            mov     dph,r3
0E75 120100    3305            lcall   ___sint2fs
0E78 AA82      3306            mov     r2,dpl
0E7A AB83      3307            mov     r3,dph
0E7C ACF0      3308            mov     r4,b
0E7E FD        3309            mov     r5,a
0E7F C002      3310            push    ar2
0E81 C003      3311            push    ar3
0E83 C004      3312            push    ar4
0E85 C005      3313            push    ar5
0E87 85F882    3314            mov     dpl,_main_sloc0_1_0
0E8A 85F983    3315            mov     dph,(_main_sloc0_1_0 + 1)
0E8D 85FAF0    3316            mov     b,(_main_sloc0_1_0 + 2)
0E90 E5FB      3317            mov     a,(_main_sloc0_1_0 + 3)
0E92 120100    3318            lcall   ___fsadd
0E95 AA82      3319            mov     r2,dpl
0E97 AB83      3320            mov     r3,dph
0E99 ACF0      3321            mov     r4,b
0E9B FD        3322            mov     r5,a
0E9C E581      3323            mov     a,sp
0E9E 24FC      3324            add     a,#0xfc
0EA0 F581      3325            mov     sp,a
0EA2 C002      3326            push    ar2
0EA4 C003      3327            push    ar3
0EA6 C004      3328            push    ar4
0EA8 C005      3329            push    ar5
0EAA 90F4FC    3330            mov     dptr,#0xF4FC
0EAD 75F032    3331            mov     b,#0x32
0EB0 7434      3332            mov     a,#0x34
0EB2 120100    3333            lcall   ___fsmul
0EB5 AA82      3334            mov     r2,dpl
0EB7 AB83      3335            mov     r3,dph
0EB9 ACF0      3336            mov     r4,b
0EBB FD        3337            mov     r5,a
0EBC E581      3338            mov     a,sp
0EBE 24FC      3339            add     a,#0xfc
0EC0 F581      3340            mov     sp,a
0EC2           3341   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:838: printf( "\rT=%f ms   \n ", period*1000.0);
0EC2 C002      3342            push    ar2
0EC4 C003      3343            push    ar3
0EC6 C004      3344            push    ar4
0EC8 C005      3345            push    ar5
0ECA 900000    3346            mov     dptr,#0x0000
0ECD 75F07A    3347            mov     b,#0x7A
0ED0 7444      3348            mov     a,#0x44
0ED2 120100    3349            lcall   ___fsmul
0ED5 AA82      3350            mov     r2,dpl
0ED7 AB83      3351            mov     r3,dph
0ED9 ACF0      3352            mov     r4,b
0EDB FD        3353            mov     r5,a
0EDC E581      3354            mov     a,sp
0EDE 24FC      3355            add     a,#0xfc
0EE0 F581      3356            mov     sp,a
0EE2 C002      3357            push    ar2
0EE4 C003      3358            push    ar3
0EE6 C004      3359            push    ar4
0EE8 C005      3360            push    ar5
0EEA C002      3361            push    ar2
0EEC C003      3362            push    ar3
0EEE C004      3363            push    ar4
0EF0 C005      3364            push    ar5
0EF2 74E8      3365            mov     a,#__str_13
0EF4 C0E0      3366            push    acc
0EF6 74E7      3367            mov     a,#(__str_13 >> 8)
0EF8 C0E0      3368            push    acc
0EFA 7480      3369            mov     a,#0x80
0EFC C0E0      3370            push    acc
0EFE 120100    3371            lcall   _printf
0F01 E581      3372            mov     a,sp
0F03 24F9      3373            add     a,#0xf9
0F05 F581      3374            mov     sp,a
0F07           3375   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:839: waitms(50);
0F07 900032    3376            mov     dptr,#0x0032
0F0A 120100    3377            lcall   _waitms
0F0D D005      3378            pop     ar5
0F0F D004      3379            pop     ar4
0F11 D003      3380            pop     ar3
0F13 D002      3381            pop     ar2
0F15           3382   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:840: detectobstacle(period*1000.0);
0F15 8A82      3383            mov     dpl,r2
0F17 8B83      3384            mov     dph,r3
0F19 8CF0      3385            mov     b,r4
0F1B ED        3386            mov     a,r5
0F1C C002      3387            push    ar2
0F1E C003      3388            push    ar3
0F20 C004      3389            push    ar4
0F22 C005      3390            push    ar5
0F24 120100    3391            lcall   _detectobstacle
0F27 D005      3392            pop     ar5
0F29 D004      3393            pop     ar4
0F2B D003      3394            pop     ar3
0F2D D002      3395            pop     ar2
0F2F           3396   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:841: laserPattern(period*1000);
0F2F 8A82      3397            mov     dpl,r2
0F31 8B83      3398            mov     dph,r3
0F33 8CF0      3399            mov     b,r4
0F35 ED        3400            mov     a,r5
0F36 120100    3401            lcall   _laserPattern
0F39           3402   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:850: waitms(50);    
0F39 900032    3403            mov     dptr,#0x0032
0F3C 120100    3404            lcall   _waitms
0F3F 020100    3405            ljmp    L034059?
0F42           3406   L034056?:
0F42           3407   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:854: else if(mode_toggle == 1){
0F42 BE0128    3408            cjne    r6,#0x01,L034104?
0F45 BF0028    3409            cjne    r7,#0x00,L034104?
0F48 8001      3410            sjmp    L034105?
0F4A           3411   L034104?:
0F4A 020100    3412            ljmp    L034053?
0F4D           3413   L034105?:
0F4D           3414   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:855: recieveData();         //keep reading data continously 
0F4D 120100    3415            lcall   _recieveData
0F50           3416   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:856: printf("Command: ");
0F50 74E8      3417            mov     a,#__str_14
0F52 C0E0      3418            push    acc
0F54 74E8      3419            mov     a,#(__str_14 >> 8)
0F56 C0E0      3420            push    acc
0F58 7480      3421            mov     a,#0x80
0F5A C0E0      3422            push    acc
0F5C 120100    3423            lcall   _printf
0F5F 1581      3424            dec     sp
0F61 1581      3425            dec     sp
0F63 1581      3426            dec     sp
0F65           3427   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:857: for(i=0; i<4; i++)
0F65 7A00      3428            mov     r2,#0x00
0F67 7B00      3429            mov     r3,#0x00
0F69           3430   L034061?:
0F69 C3        3431            clr     c
0F6A EA        3432            mov     a,r2
0F6B 9404      3433            subb    a,#0x04
0F6D EB        3434            mov     a,r3
0F6E 6480      3435            xrl     a,#0x80
0F70 9480      3436            subb    a,#0x80
0F72 5001      3437            jnc     L034064?
0F74           3438   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:858: printf("%d\t", command[i]);
0F74 8A04      3439            mov     ar4,r2
0F76 EB        3440            mov     a,r3
0F77 CC        3441            xch     a,r4
0F78 25E0      3442            add     a,acc
0F7A CC        3443            xch     a,r4
0F7B 33        3444            rlc     a
0F7C EC        3445            mov     a,r4
0F7D 2468      3446            add     a,#_command
0F7F F8        3447            mov     r0,a
0F80 8604      3448            mov     ar4,@r0
0F82 08        3449            inc     r0
0F83 8605      3450            mov     ar5,@r0
0F85 18        3451            dec     r0
0F86 C002      3452            push    ar2
0F88 C003      3453            push    ar3
0F8A C004      3454            push    ar4
0F8C C005      3455            push    ar5
0F8E 74A8      3456            mov     a,#__str_15
0F90 C0E0      3457            push    acc
0F92 74E9      3458            mov     a,#(__str_15 >> 8)
0F94 C0E0      3459            push    acc
0F96 7480      3460            mov     a,#0x80
0F98 C0E0      3461            push    acc
0F9A 120100    3462            lcall   _printf
0F9D E581      3463            mov     a,sp
0F9F 24FB      3464            add     a,#0xfb
0FA1 F581      3465            mov     sp,a
0FA3 D003      3466            pop     ar3
0FA5 D002      3467            pop     ar2
0FA7           3468   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:857: for(i=0; i<4; i++)
0FA7 0A        3469            inc     r2
0FA8 BA0028    3470            cjne    r2,#0x00,L034061?
0FAB 0B        3471            inc     r3
0FAC 8001      3472            sjmp    L034061?
0FAE           3473   L034064?:
0FAE           3474   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:859: printf("\n\r");
0FAE 7468      3475            mov     a,#__str_11
0FB0 C0E0      3476            push    acc
0FB2 74E5      3477            mov     a,#(__str_11 >> 8)
0FB4 C0E0      3478            push    acc
0FB6 7480      3479            mov     a,#0x80
0FB8 C0E0      3480            push    acc
0FBA 120100    3481            lcall   _printf
0FBD 1581      3482            dec     sp
0FBF 1581      3483            dec     sp
0FC1 1581      3484            dec     sp
0FC3           3485   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:860: command[0] = 0;
0FC3 756800    3486            mov     _command,#0x00
0FC6 756900    3487            mov     (_command + 1),#0x00
0FC9           3488   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:861: command[1] = 0;
0FC9 756A00    3489            mov     (_command + 0x0002),#0x00
0FCC 756B00    3490            mov     ((_command + 0x0002) + 1),#0x00
0FCF           3491   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:862: command[2] = 0;
0FCF 756C00    3492            mov     (_command + 0x0004),#0x00
0FD2 756D00    3493            mov     ((_command + 0x0004) + 1),#0x00
0FD5           3494   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:863: command[3] = 0;
0FD5 756E00    3495            mov     (_command + 0x0006),#0x00
0FD8 756F00    3496            mov     ((_command + 0x0006) + 1),#0x00
0FDB 020100    3497            ljmp    L034059?
0FDE           3498   L034053?:
0FDE           3499   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:867: else if( mode_toggle == 3){  //PIR
0FDE BE03E8    3500            cjne    r6,#0x03,L034108?
0FE1 BF00E8    3501            cjne    r7,#0x00,L034108?
0FE4 8001      3502            sjmp    L034109?
0FE6           3503   L034108?:
0FE6 020100    3504            ljmp    L034050?
0FE9           3505   L034109?:
0FE9           3506   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:868: pir_voltage = Volts_at_Pin(QFP32_MUX_P2_4);
0FE9 758211    3507            mov     dpl,#0x11
0FEC 120100    3508            lcall   _Volts_at_Pin
0FEF 858278    3509            mov     _main_pir_voltage_1_135,dpl
0FF2 858379    3510            mov     (_main_pir_voltage_1_135 + 1),dph
0FF5 85F07A    3511            mov     (_main_pir_voltage_1_135 + 2),b
0FF8 F57B      3512            mov     (_main_pir_voltage_1_135 + 3),a
0FFA           3513   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:869: if(pir_voltage >= 3.0 && pir_voltage <= 3.4)
0FFA E4        3514            clr     a
0FFB C0E0      3515            push    acc
0FFD C0E0      3516            push    acc
0FFF 7440      3517            mov     a,#0x40
1001 C0E0      3518            push    acc
1003 C0E0      3519            push    acc
1005 857882    3520            mov     dpl,_main_pir_voltage_1_135
1008 857983    3521            mov     dph,(_main_pir_voltage_1_135 + 1)
100B 857AF0    3522            mov     b,(_main_pir_voltage_1_135 + 2)
100E E57B      3523            mov     a,(_main_pir_voltage_1_135 + 3)
1010 120100    3524            lcall   ___fslt
1013 AA82      3525            mov     r2,dpl
1015 E581      3526            mov     a,sp
1017 24FC      3527            add     a,#0xfc
1019 F581      3528            mov     sp,a
101B EA        3529            mov     a,r2
101C 7001      3530            jnz     L034013?
101E 749A      3531            mov     a,#0x9A
1020 C0E0      3532            push    acc
1022 7499      3533            mov     a,#0x99
1024 C0E0      3534            push    acc
1026 7459      3535            mov     a,#0x59
1028 C0E0      3536            push    acc
102A 7440      3537            mov     a,#0x40
102C C0E0      3538            push    acc
102E 857882    3539            mov     dpl,_main_pir_voltage_1_135
1031 857983    3540            mov     dph,(_main_pir_voltage_1_135 + 1)
1034 857AF0    3541            mov     b,(_main_pir_voltage_1_135 + 2)
1037 E57B      3542            mov     a,(_main_pir_voltage_1_135 + 3)
1039 120100    3543            lcall   ___fsgt
103C AA82      3544            mov     r2,dpl
103E E581      3545            mov     a,sp
1040 24FC      3546            add     a,#0xfc
1042 F581      3547            mov     sp,a
1044 EA        3548            mov     a,r2
1045 7001      3549            jnz     L034013?
1047           3550   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:870: PWMStop();
1047 120100    3551            lcall   _PWMStop
104A 8001      3552            sjmp    L034014?
104C           3553   L034013?:
104C           3554   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:872: PWMforward();
104C 120100    3555            lcall   _PWMforward
104F           3556   L034014?:
104F           3557   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:873: waitms(100);
104F 900064    3558            mov     dptr,#0x0064
1052 120100    3559            lcall   _waitms
1055           3560   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:874: printf("pir_voltage: %f \r\n", pir_voltage);
1055 C078      3561            push    _main_pir_voltage_1_135
1057 C079      3562            push    (_main_pir_voltage_1_135 + 1)
1059 C07A      3563            push    (_main_pir_voltage_1_135 + 2)
105B C07B      3564            push    (_main_pir_voltage_1_135 + 3)
105D 7428      3565            mov     a,#__str_16
105F C0E0      3566            push    acc
1061 74EB      3567            mov     a,#(__str_16 >> 8)
1063 C0E0      3568            push    acc
1065 7480      3569            mov     a,#0x80
1067 C0E0      3570            push    acc
1069 120100    3571            lcall   _printf
106C E581      3572            mov     a,sp
106E 24F9      3573            add     a,#0xf9
1070 F581      3574            mov     sp,a
1072 020100    3575            ljmp    L034059?
1075           3576   L034050?:
1075           3577   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:877: else if( mode_toggle == 4){   //Maze
1075 BE0468    3578            cjne    r6,#0x04,L034112?
1078 BF0068    3579            cjne    r7,#0x00,L034112?
107B 8001      3580            sjmp    L034113?
107D           3581   L034112?:
107D 020100    3582            ljmp    L034047?
1080           3583   L034113?:
1080           3584   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:878: while(getCoord == 0)
1080           3585   L034022?:
1080 E5B8      3586            mov     a,_main_getCoord_1_135
1082 45B9      3587            orl     a,(_main_getCoord_1_135 + 1)
1084           3588   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:881: while(count<4){
1084 7001      3589            jnz     L034024?
1086 FA        3590            mov     r2,a
1087 FB        3591            mov     r3,a
1088           3592   L034016?:
1088 C3        3593            clr     c
1089 EA        3594            mov     a,r2
108A 9404      3595            subb    a,#0x04
108C EB        3596            mov     a,r3
108D 6480      3597            xrl     a,#0x80
108F 9480      3598            subb    a,#0x80
1091 5001      3599            jnc     L034018?
1093           3600   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:882: temp[count] = getchar1();
1093 EA        3601            mov     a,r2
1094 2468      3602            add     a,#_main_temp_1_135
1096 F8        3603            mov     r0,a
1097 C002      3604            push    ar2
1099 C003      3605            push    ar3
109B C000      3606            push    ar0
109D 120100    3607            lcall   _getchar1
10A0 E582      3608            mov     a,dpl
10A2 D000      3609            pop     ar0
10A4 D003      3610            pop     ar3
10A6 D002      3611            pop     ar2
10A8 F6        3612            mov     @r0,a
10A9           3613   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:883: count++;
10A9 0A        3614            inc     r2
10AA BA00A8    3615            cjne    r2,#0x00,L034016?
10AD 0B        3616            inc     r3
10AE 8001      3617            sjmp    L034016?
10B0           3618   L034018?:
10B0           3619   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:886: xcoord = temp[0];
10B0 8568C8    3620            mov     _main_xcoord_1_135,_main_temp_1_135
10B3           3621   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:887: ycoord = temp[1];
10B3           3622   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:888: printf("XCOORD: %c , YCOORD: %c \n", xcoord, ycoord);
10B3 E569      3623            mov     a,(_main_temp_1_135 + 0x0001)
10B5 F518      3624            mov     _main_ycoord_1_135,a
10B7 FB        3625            mov     r3,a
10B8 33        3626            rlc     a
10B9 95E0      3627            subb    a,acc
10BB FA        3628            mov     r2,a
10BC E5C8      3629            mov     a,_main_xcoord_1_135
10BE FC        3630            mov     r4,a
10BF 33        3631            rlc     a
10C0 95E0      3632            subb    a,acc
10C2 FD        3633            mov     r5,a
10C3 C003      3634            push    ar3
10C5 C002      3635            push    ar2
10C7 C004      3636            push    ar4
10C9 C005      3637            push    ar5
10CB 7428      3638            mov     a,#__str_17
10CD C0E0      3639            push    acc
10CF 74ED      3640            mov     a,#(__str_17 >> 8)
10D1 C0E0      3641            push    acc
10D3 7480      3642            mov     a,#0x80
10D5 C0E0      3643            push    acc
10D7 120100    3644            lcall   _printf
10DA E581      3645            mov     a,sp
10DC 24F9      3646            add     a,#0xf9
10DE F581      3647            mov     sp,a
10E0           3648   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:890: if(temp[2] == 'g' && temp[3] == 'o')
10E0 7467      3649            mov     a,#0x67
10E2 B56A28    3650            cjne    a,(_main_temp_1_135 + 0x0002),L034022?
10E5 746F      3651            mov     a,#0x6F
10E7 B56B28    3652            cjne    a,(_main_temp_1_135 + 0x0003),L034022?
10EA           3653   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:891: getCoord = 1;
10EA 75B801    3654            mov     _main_getCoord_1_135,#0x01
10ED E4        3655            clr     a
10EE F5B9      3656            mov     (_main_getCoord_1_135 + 1),a
10F0 8001      3657            sjmp    L034022?
10F2           3658   L034024?:
10F2           3659   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:893: bluetoothMaze(xcoord, ycoord);
10F2 E5C8      3660            mov     a,_main_xcoord_1_135
10F4 FA        3661            mov     r2,a
10F5 33        3662            rlc     a
10F6 95E0      3663            subb    a,acc
10F8 FB        3664            mov     r3,a
10F9 E518      3665            mov     a,_main_ycoord_1_135
10FB F5E8      3666            mov     _bluetoothMaze_PARM_2,a
10FD 33        3667            rlc     a
10FE 95E0      3668            subb    a,acc
1100 F5E9      3669            mov     (_bluetoothMaze_PARM_2 + 1),a
1102 8A82      3670            mov     dpl,r2
1104 8B83      3671            mov     dph,r3
1106 120100    3672            lcall   _bluetoothMaze
1109 020100    3673            ljmp    L034059?
110C           3674   L034047?:
110C           3675   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:895: else if(mode_toggle == 5){   //Voice control
110C BE0568    3676            cjne    r6,#0x05,L034044?
110F BF0068    3677            cjne    r7,#0x00,L034044?
1112           3678   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:896: while(getCoord == 0) //Just reuse this stuff
1112           3679   L034028?:
1112 E5B8      3680            mov     a,_main_getCoord_1_135
1114 45B9      3681            orl     a,(_main_getCoord_1_135 + 1)
1116           3682   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:899: while(count<4){
1116 7001      3683            jnz     L034030?
1118 FA        3684            mov     r2,a
1119 FB        3685            mov     r3,a
111A           3686   L034025?:
111A C3        3687            clr     c
111B EA        3688            mov     a,r2
111C 9404      3689            subb    a,#0x04
111E EB        3690            mov     a,r3
111F 6480      3691            xrl     a,#0x80
1121 9480      3692            subb    a,#0x80
1123 5001      3693            jnc     L034028?
1125           3694   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:900: temp[count] = getchar1();
1125 EA        3695            mov     a,r2
1126 2468      3696            add     a,#_main_temp_1_135
1128 F8        3697            mov     r0,a
1129 C002      3698            push    ar2
112B C003      3699            push    ar3
112D C000      3700            push    ar0
112F 120100    3701            lcall   _getchar1
1132 E582      3702            mov     a,dpl
1134 D000      3703            pop     ar0
1136 D003      3704            pop     ar3
1138 D002      3705            pop     ar2
113A F6        3706            mov     @r0,a
113B           3707   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:901: count++;
113B 0A        3708            inc     r2
113C           3709   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:903: count =0;
113C BA0028    3710            cjne    r2,#0x00,L034025?
113F 0B        3711            inc     r3
1140 8001      3712            sjmp    L034025?
1142           3713   L034030?:
1142           3714   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:905: if(temp[0] == 'f')
1142 AA68      3715            mov     r2,_main_temp_1_135
1144 BA6668    3716            cjne    r2,#0x66,L034041?
1147           3717   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:906: PWMforward();
1147 120100    3718            lcall   _PWMforward
114A 020100    3719            ljmp    L034059?
114D           3720   L034041?:
114D           3721   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:907: else if(temp[0] == 'b')
114D BA62A8    3722            cjne    r2,#0x62,L034038?
1150           3723   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:908: PWMbackward();
1150 120100    3724            lcall   _PWMbackward
1153 020100    3725            ljmp    L034059?
1156           3726   L034038?:
1156           3727   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:909: else if(temp[0] == 'r')
1156 BA72E8    3728            cjne    r2,#0x72,L034035?
1159           3729   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:910: PWMRight();
1159 120100    3730            lcall   _PWMRight
115C 020100    3731            ljmp    L034059?
115F           3732   L034035?:
115F           3733   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:911: else if(temp[0] == 'l')
115F BA6C28    3734            cjne    r2,#0x6C,L034032?
1162           3735   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:912: PWMLeft();
1162 120100    3736            lcall   _PWMLeft
1165 020100    3737            ljmp    L034059?
1168           3738   L034032?:
1168           3739   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:914: PWMStop();
1168 120100    3740            lcall   _PWMStop
116B 020100    3741            ljmp    L034059?
116E           3742   L034044?:
116E           3743   ;        C:\Users\Dalto\Documents\GitHub\ElecRobot\idkwhatsgoingon - WithBluetooth.c:917: printf("Do nothing\r\n");      
116E 7468      3744            mov     a,#__str_18
1170 C0E0      3745            push    acc
1172 74EF      3746            mov     a,#(__str_18 >> 8)
1174 C0E0      3747            push    acc
1176 7480      3748            mov     a,#0x80
1178 C0E0      3749            push    acc
117A 120100    3750            lcall   _printf
117D 1581      3751            dec     sp
117F 1581      3752            dec     sp
1181 1581      3753            dec     sp
1183 020100    3754            ljmp    L034059?
1186           3755            rseg R_CSEG
1186           3756   
0000           3757            rseg R_XINIT
0000           3758   
0000           3759            rseg R_CONST
0000           3760   __str_0:
0000 466F7277  3761            db 'Forward'
     617264
0007 0A        3762            db 0x0A
0008 0D        3763            db 0x0D
0009 00        3764            db 0x00
000A           3765   __str_1:
000A 4261636B  3766            db 'Backward'
     77617264
0012 0A        3767            db 0x0A
0013 0D        3768            db 0x0D
0014 00        3769            db 0x00
0015           3770   __str_2:
0015 4C656674  3771            db 'Left'
0019 0A        3772            db 0x0A
001A 0D        3773            db 0x0D
001B 00        3774            db 0x00
001C           3775   __str_3:
001C 52696768  3776            db 'Right'
     74
0021 0A        3777            db 0x0A
0022 0D        3778            db 0x0D
0023 00        3779            db 0x00
0024           3780   __str_4:
0024 53746F70  3781            db 'Stop'
0028 0A        3782            db 0x0A
0029 0D        3783            db 0x0D
002A 00        3784            db 0x00
002B           3785   __str_5:
002B 2566      3786            db '%f'
002D 0A        3787            db 0x0A
002E 0D        3788            db 0x0D
002F 00        3789            db 0x00
0030           3790   __str_6:
0030 0A        3791            db 0x0A
0031 72656164  3792            db 'read 1:  at pin 2.3: %f'
     20313A20
     20617420
     70696E20
     322E333A
     202566
0048 0D        3793            db 0x0D
0049 00        3794            db 0x00
004A           3795   __str_7:
004A 5475726E  3796            db 'Turn right '
     20726967
     687420
0055 0D        3797            db 0x0D
0056 0A        3798            db 0x0A
0057 00        3799            db 0x00
0058           3800   __str_8:
0058 476F2053  3801            db 'Go Straight '
     74726169
     67687420
0064 0D        3802            db 0x0D
0065 0A        3803            db 0x0A
0066 00        3804            db 0x00
0067           3805   __str_9:
0067 1B        3806            db 0x1B
0068 5B324A    3807            db '[2J'
006B 00        3808            db 0x00
006C           3809   __str_10:
006C 53717561  3810            db 'Square wave generator for the EFM8LB1.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204546
     4D384C42
     312E
0092 0D        3811            db 0x0D
0093 0A        3812            db 0x0A
0094 43686563  3813            db 'Check pins P2.2 and '
     6B207069
     6E732050
     322E3220
     616E6420
00A8 50322E31  3814            db 'P2.1 with the oscilloscope.'
     20776974
     68207468
     65206F73
     63696C6C
     6F73636F
     70652E
00C3 0D        3815            db 0x0D
00C4 0A        3816            db 0x0A
00C5 00        3817            db 0x00
00C6           3818   __str_11:
00C6 0A        3819            db 0x0A
00C7 0D        3820            db 0x0D
00C8 00        3821            db 0x00
00C9           3822   __str_12:
00C9 6175746F  3823            db 'auto '
     20
00CE 0D        3824            db 0x0D
00CF 0A        3825            db 0x0A
00D0 00        3826            db 0x00
00D1           3827   __str_13:
00D1 0D        3828            db 0x0D
00D2 543D2566  3829            db 'T=%f ms   '
     206D7320
     2020
00DC 0A        3830            db 0x0A
00DD 20        3831            db ' '
00DE 00        3832            db 0x00
00DF           3833   __str_14:
00DF 436F6D6D  3834            db 'Command: '
     616E643A
     20
00E8 00        3835            db 0x00
00E9           3836   __str_15:
00E9 2564      3837            db '%d'
00EB 09        3838            db 0x09
00EC 00        3839            db 0x00
00ED           3840   __str_16:
00ED 7069725F  3841            db 'pir_voltage: %f '
     766F6C74
     6167653A
     20256620
00FD 0D        3842            db 0x0D
00FE 0A        3843            db 0x0A
00FF 00        3844            db 0x00
0100           3845   __str_17:
0100 58434F4F  3846            db 'XCOORD: %c , YCOORD: %c '
     52443A20
     2563202C
     2059434F
     4F52443A
     20256320
0118 0A        3847            db 0x0A
0119 00        3848            db 0x00
011A           3849   __str_18:
011A 446F206E  3850            db 'Do nothing'
     6F746869
     6E67
0124 0D        3851            db 0x0D
0125 0A        3852            db 0x0A
0126 00        3853            db 0x00
0127           3854   
002E           3855            CSEG
002E           3856   
002E           3857   end
