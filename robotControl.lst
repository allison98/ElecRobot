0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sat Mar 24 16:01:14 2018
0000              5   ;--------------------------------------------------------
                  5   $name robotControl
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _periodcalc
0000             30            public _PWMRight
0000             31            public _PWMLeft
0000             32            public _PWMback
0000             33            public _PWMStraight
0000             34            public _InitPinADC
0000             35            public _Volts_at_Pin
0000             36            public _TIMER0_Init
0000             37            public _InitADC
0000             38            public _Timer2_ISR
0000             39            public _ADC_at_Pin
0000             40            public __c51_external_startup
0000             41            public _claw_flag
0000             42            public _flag
0000             43            public _cartMoveB
0000             44            public _cartMoveF
0000             45            public _pwmSig6
0000             46            public _pwmSig5
0000             47            public _pwmSig4
0000             48            public _pwmSig3
0000             49            public _pwmSig2
0000             50            public _pwmSig1
0000             51            public _pwm_count3
0000             52            public _pwm_count2
0000             53            public _pwm_count1
0000             54            public _pwm_count
0000             55   ;--------------------------------------------------------
0000             56   ; Special Function Registers
0000             57   ;--------------------------------------------------------
0000             58   _ACC            DATA 0xe0
0000             59   _ADC0ASAH       DATA 0xb6
0000             60   _ADC0ASAL       DATA 0xb5
0000             61   _ADC0ASCF       DATA 0xa1
0000             62   _ADC0ASCT       DATA 0xc7
0000             63   _ADC0CF0        DATA 0xbc
0000             64   _ADC0CF1        DATA 0xb9
0000             65   _ADC0CF2        DATA 0xdf
0000             66   _ADC0CN0        DATA 0xe8
0000             67   _ADC0CN1        DATA 0xb2
0000             68   _ADC0CN2        DATA 0xb3
0000             69   _ADC0GTH        DATA 0xc4
0000             70   _ADC0GTL        DATA 0xc3
0000             71   _ADC0H          DATA 0xbe
0000             72   _ADC0L          DATA 0xbd
0000             73   _ADC0LTH        DATA 0xc6
0000             74   _ADC0LTL        DATA 0xc5
0000             75   _ADC0MX         DATA 0xbb
0000             76   _B              DATA 0xf0
0000             77   _CKCON0         DATA 0x8e
0000             78   _CKCON1         DATA 0xa6
0000             79   _CLEN0          DATA 0xc6
0000             80   _CLIE0          DATA 0xc7
0000             81   _CLIF0          DATA 0xe8
0000             82   _CLKSEL         DATA 0xa9
0000             83   _CLOUT0         DATA 0xd1
0000             84   _CLU0CF         DATA 0xb1
0000             85   _CLU0FN         DATA 0xaf
0000             86   _CLU0MX         DATA 0x84
0000             87   _CLU1CF         DATA 0xb3
0000             88   _CLU1FN         DATA 0xb2
0000             89   _CLU1MX         DATA 0x85
0000             90   _CLU2CF         DATA 0xb6
0000             91   _CLU2FN         DATA 0xb5
0000             92   _CLU2MX         DATA 0x91
0000             93   _CLU3CF         DATA 0xbf
0000             94   _CLU3FN         DATA 0xbe
0000             95   _CLU3MX         DATA 0xae
0000             96   _CMP0CN0        DATA 0x9b
0000             97   _CMP0CN1        DATA 0x99
0000             98   _CMP0MD         DATA 0x9d
0000             99   _CMP0MX         DATA 0x9f
0000            100   _CMP1CN0        DATA 0xbf
0000            101   _CMP1CN1        DATA 0xac
0000            102   _CMP1MD         DATA 0xab
0000            103   _CMP1MX         DATA 0xaa
0000            104   _CRC0CN0        DATA 0xce
0000            105   _CRC0CN1        DATA 0x86
0000            106   _CRC0CNT        DATA 0xd3
0000            107   _CRC0DAT        DATA 0xcb
0000            108   _CRC0FLIP       DATA 0xcf
0000            109   _CRC0IN         DATA 0xca
0000            110   _CRC0ST         DATA 0xd2
0000            111   _DAC0CF0        DATA 0x91
0000            112   _DAC0CF1        DATA 0x92
0000            113   _DAC0H          DATA 0x85
0000            114   _DAC0L          DATA 0x84
0000            115   _DAC1CF0        DATA 0x93
0000            116   _DAC1CF1        DATA 0x94
0000            117   _DAC1H          DATA 0x8a
0000            118   _DAC1L          DATA 0x89
0000            119   _DAC2CF0        DATA 0x95
0000            120   _DAC2CF1        DATA 0x96
0000            121   _DAC2H          DATA 0x8c
0000            122   _DAC2L          DATA 0x8b
0000            123   _DAC3CF0        DATA 0x9a
0000            124   _DAC3CF1        DATA 0x9c
0000            125   _DAC3H          DATA 0x8e
0000            126   _DAC3L          DATA 0x8d
0000            127   _DACGCF0        DATA 0x88
0000            128   _DACGCF1        DATA 0x98
0000            129   _DACGCF2        DATA 0xa2
0000            130   _DERIVID        DATA 0xad
0000            131   _DEVICEID       DATA 0xb5
0000            132   _DPH            DATA 0x83
0000            133   _DPL            DATA 0x82
0000            134   _EIE1           DATA 0xe6
0000            135   _EIE2           DATA 0xf3
0000            136   _EIP1           DATA 0xbb
0000            137   _EIP1H          DATA 0xee
0000            138   _EIP2           DATA 0xed
0000            139   _EIP2H          DATA 0xf6
0000            140   _EMI0CN         DATA 0xe7
0000            141   _FLKEY          DATA 0xb7
0000            142   _HFO0CAL        DATA 0xc7
0000            143   _HFO1CAL        DATA 0xd6
0000            144   _HFOCN          DATA 0xef
0000            145   _I2C0ADM        DATA 0xff
0000            146   _I2C0CN0        DATA 0xba
0000            147   _I2C0DIN        DATA 0xbc
0000            148   _I2C0DOUT       DATA 0xbb
0000            149   _I2C0FCN0       DATA 0xad
0000            150   _I2C0FCN1       DATA 0xab
0000            151   _I2C0FCT        DATA 0xf5
0000            152   _I2C0SLAD       DATA 0xbd
0000            153   _I2C0STAT       DATA 0xb9
0000            154   _IE             DATA 0xa8
0000            155   _IP             DATA 0xb8
0000            156   _IPH            DATA 0xf2
0000            157   _IT01CF         DATA 0xe4
0000            158   _LFO0CN         DATA 0xb1
0000            159   _P0             DATA 0x80
0000            160   _P0MASK         DATA 0xfe
0000            161   _P0MAT          DATA 0xfd
0000            162   _P0MDIN         DATA 0xf1
0000            163   _P0MDOUT        DATA 0xa4
0000            164   _P0SKIP         DATA 0xd4
0000            165   _P1             DATA 0x90
0000            166   _P1MASK         DATA 0xee
0000            167   _P1MAT          DATA 0xed
0000            168   _P1MDIN         DATA 0xf2
0000            169   _P1MDOUT        DATA 0xa5
0000            170   _P1SKIP         DATA 0xd5
0000            171   _P2             DATA 0xa0
0000            172   _P2MASK         DATA 0xfc
0000            173   _P2MAT          DATA 0xfb
0000            174   _P2MDIN         DATA 0xf3
0000            175   _P2MDOUT        DATA 0xa6
0000            176   _P2SKIP         DATA 0xcc
0000            177   _P3             DATA 0xb0
0000            178   _P3MDIN         DATA 0xf4
0000            179   _P3MDOUT        DATA 0x9c
0000            180   _PCA0CENT       DATA 0x9e
0000            181   _PCA0CLR        DATA 0x9c
0000            182   _PCA0CN0        DATA 0xd8
0000            183   _PCA0CPH0       DATA 0xfc
0000            184   _PCA0CPH1       DATA 0xea
0000            185   _PCA0CPH2       DATA 0xec
0000            186   _PCA0CPH3       DATA 0xf5
0000            187   _PCA0CPH4       DATA 0x85
0000            188   _PCA0CPH5       DATA 0xde
0000            189   _PCA0CPL0       DATA 0xfb
0000            190   _PCA0CPL1       DATA 0xe9
0000            191   _PCA0CPL2       DATA 0xeb
0000            192   _PCA0CPL3       DATA 0xf4
0000            193   _PCA0CPL4       DATA 0x84
0000            194   _PCA0CPL5       DATA 0xdd
0000            195   _PCA0CPM0       DATA 0xda
0000            196   _PCA0CPM1       DATA 0xdb
0000            197   _PCA0CPM2       DATA 0xdc
0000            198   _PCA0CPM3       DATA 0xae
0000            199   _PCA0CPM4       DATA 0xaf
0000            200   _PCA0CPM5       DATA 0xcc
0000            201   _PCA0H          DATA 0xfa
0000            202   _PCA0L          DATA 0xf9
0000            203   _PCA0MD         DATA 0xd9
0000            204   _PCA0POL        DATA 0x96
0000            205   _PCA0PWM        DATA 0xf7
0000            206   _PCON0          DATA 0x87
0000            207   _PCON1          DATA 0xcd
0000            208   _PFE0CN         DATA 0xc1
0000            209   _PRTDRV         DATA 0xf6
0000            210   _PSCTL          DATA 0x8f
0000            211   _PSTAT0         DATA 0xaa
0000            212   _PSW            DATA 0xd0
0000            213   _REF0CN         DATA 0xd1
0000            214   _REG0CN         DATA 0xc9
0000            215   _REVID          DATA 0xb6
0000            216   _RSTSRC         DATA 0xef
0000            217   _SBCON1         DATA 0x94
0000            218   _SBRLH1         DATA 0x96
0000            219   _SBRLL1         DATA 0x95
0000            220   _SBUF           DATA 0x99
0000            221   _SBUF0          DATA 0x99
0000            222   _SBUF1          DATA 0x92
0000            223   _SCON           DATA 0x98
0000            224   _SCON0          DATA 0x98
0000            225   _SCON1          DATA 0xc8
0000            226   _SFRPAGE        DATA 0xa7
0000            227   _SFRPGCN        DATA 0xbc
0000            228   _SFRSTACK       DATA 0xd7
0000            229   _SMB0ADM        DATA 0xd6
0000            230   _SMB0ADR        DATA 0xd7
0000            231   _SMB0CF         DATA 0xc1
0000            232   _SMB0CN0        DATA 0xc0
0000            233   _SMB0DAT        DATA 0xc2
0000            234   _SMB0FCN0       DATA 0xc3
0000            235   _SMB0FCN1       DATA 0xc4
0000            236   _SMB0FCT        DATA 0xef
0000            237   _SMB0RXLN       DATA 0xc5
0000            238   _SMB0TC         DATA 0xac
0000            239   _SMOD1          DATA 0x93
0000            240   _SP             DATA 0x81
0000            241   _SPI0CFG        DATA 0xa1
0000            242   _SPI0CKR        DATA 0xa2
0000            243   _SPI0CN0        DATA 0xf8
0000            244   _SPI0DAT        DATA 0xa3
0000            245   _SPI0FCN0       DATA 0x9a
0000            246   _SPI0FCN1       DATA 0x9b
0000            247   _SPI0FCT        DATA 0xf7
0000            248   _SPI0PCF        DATA 0xdf
0000            249   _TCON           DATA 0x88
0000            250   _TH0            DATA 0x8c
0000            251   _TH1            DATA 0x8d
0000            252   _TL0            DATA 0x8a
0000            253   _TL1            DATA 0x8b
0000            254   _TMOD           DATA 0x89
0000            255   _TMR2CN0        DATA 0xc8
0000            256   _TMR2CN1        DATA 0xfd
0000            257   _TMR2H          DATA 0xcf
0000            258   _TMR2L          DATA 0xce
0000            259   _TMR2RLH        DATA 0xcb
0000            260   _TMR2RLL        DATA 0xca
0000            261   _TMR3CN0        DATA 0x91
0000            262   _TMR3CN1        DATA 0xfe
0000            263   _TMR3H          DATA 0x95
0000            264   _TMR3L          DATA 0x94
0000            265   _TMR3RLH        DATA 0x93
0000            266   _TMR3RLL        DATA 0x92
0000            267   _TMR4CN0        DATA 0x98
0000            268   _TMR4CN1        DATA 0xff
0000            269   _TMR4H          DATA 0xa5
0000            270   _TMR4L          DATA 0xa4
0000            271   _TMR4RLH        DATA 0xa3
0000            272   _TMR4RLL        DATA 0xa2
0000            273   _TMR5CN0        DATA 0xc0
0000            274   _TMR5CN1        DATA 0xf1
0000            275   _TMR5H          DATA 0xd5
0000            276   _TMR5L          DATA 0xd4
0000            277   _TMR5RLH        DATA 0xd3
0000            278   _TMR5RLL        DATA 0xd2
0000            279   _UART0PCF       DATA 0xd9
0000            280   _UART1FCN0      DATA 0x9d
0000            281   _UART1FCN1      DATA 0xd8
0000            282   _UART1FCT       DATA 0xfa
0000            283   _UART1LIN       DATA 0x9e
0000            284   _UART1PCF       DATA 0xda
0000            285   _VDM0CN         DATA 0xff
0000            286   _WDTCN          DATA 0x97
0000            287   _XBR0           DATA 0xe1
0000            288   _XBR1           DATA 0xe2
0000            289   _XBR2           DATA 0xe3
0000            290   _XOSC0CN        DATA 0x86
0000            291   _DPTR           DATA 0x8382
0000            292   _TMR2RL         DATA 0xcbca
0000            293   _TMR3RL         DATA 0x9392
0000            294   _TMR4RL         DATA 0xa3a2
0000            295   _TMR5RL         DATA 0xd3d2
0000            296   _TMR0           DATA 0x8c8a
0000            297   _TMR1           DATA 0x8d8b
0000            298   _TMR2           DATA 0xcfce
0000            299   _TMR3           DATA 0x9594
0000            300   _TMR4           DATA 0xa5a4
0000            301   _TMR5           DATA 0xd5d4
0000            302   _SBRL1          DATA 0x9695
0000            303   _PCA0           DATA 0xfaf9
0000            304   _PCA0CP0        DATA 0xfcfb
0000            305   _PCA0CP1        DATA 0xeae9
0000            306   _PCA0CP2        DATA 0xeceb
0000            307   _PCA0CP3        DATA 0xf5f4
0000            308   _PCA0CP4        DATA 0x8584
0000            309   _PCA0CP5        DATA 0xdedd
0000            310   _ADC0ASA        DATA 0xb6b5
0000            311   _ADC0GT         DATA 0xc4c3
0000            312   _ADC0           DATA 0xbebd
0000            313   _ADC0LT         DATA 0xc6c5
0000            314   _DAC0           DATA 0x8584
0000            315   _DAC1           DATA 0x8a89
0000            316   _DAC2           DATA 0x8c8b
0000            317   _DAC3           DATA 0x8e8d
0000            318   ;--------------------------------------------------------
0000            319   ; special function bits
0000            320   ;--------------------------------------------------------
0000            321   _ACC_0          BIT 0xe0
0000            322   _ACC_1          BIT 0xe1
0000            323   _ACC_2          BIT 0xe2
0000            324   _ACC_3          BIT 0xe3
0000            325   _ACC_4          BIT 0xe4
0000            326   _ACC_5          BIT 0xe5
0000            327   _ACC_6          BIT 0xe6
0000            328   _ACC_7          BIT 0xe7
0000            329   _TEMPE          BIT 0xe8
0000            330   _ADGN0          BIT 0xe9
0000            331   _ADGN1          BIT 0xea
0000            332   _ADWINT         BIT 0xeb
0000            333   _ADBUSY         BIT 0xec
0000            334   _ADINT          BIT 0xed
0000            335   _IPOEN          BIT 0xee
0000            336   _ADEN           BIT 0xef
0000            337   _B_0            BIT 0xf0
0000            338   _B_1            BIT 0xf1
0000            339   _B_2            BIT 0xf2
0000            340   _B_3            BIT 0xf3
0000            341   _B_4            BIT 0xf4
0000            342   _B_5            BIT 0xf5
0000            343   _B_6            BIT 0xf6
0000            344   _B_7            BIT 0xf7
0000            345   _C0FIF          BIT 0xe8
0000            346   _C0RIF          BIT 0xe9
0000            347   _C1FIF          BIT 0xea
0000            348   _C1RIF          BIT 0xeb
0000            349   _C2FIF          BIT 0xec
0000            350   _C2RIF          BIT 0xed
0000            351   _C3FIF          BIT 0xee
0000            352   _C3RIF          BIT 0xef
0000            353   _D1SRC0         BIT 0x88
0000            354   _D1SRC1         BIT 0x89
0000            355   _D1AMEN         BIT 0x8a
0000            356   _D01REFSL       BIT 0x8b
0000            357   _D3SRC0         BIT 0x8c
0000            358   _D3SRC1         BIT 0x8d
0000            359   _D3AMEN         BIT 0x8e
0000            360   _D23REFSL       BIT 0x8f
0000            361   _D0UDIS         BIT 0x98
0000            362   _D1UDIS         BIT 0x99
0000            363   _D2UDIS         BIT 0x9a
0000            364   _D3UDIS         BIT 0x9b
0000            365   _EX0            BIT 0xa8
0000            366   _ET0            BIT 0xa9
0000            367   _EX1            BIT 0xaa
0000            368   _ET1            BIT 0xab
0000            369   _ES0            BIT 0xac
0000            370   _ET2            BIT 0xad
0000            371   _ESPI0          BIT 0xae
0000            372   _EA             BIT 0xaf
0000            373   _PX0            BIT 0xb8
0000            374   _PT0            BIT 0xb9
0000            375   _PX1            BIT 0xba
0000            376   _PT1            BIT 0xbb
0000            377   _PS0            BIT 0xbc
0000            378   _PT2            BIT 0xbd
0000            379   _PSPI0          BIT 0xbe
0000            380   _P0_0           BIT 0x80
0000            381   _P0_1           BIT 0x81
0000            382   _P0_2           BIT 0x82
0000            383   _P0_3           BIT 0x83
0000            384   _P0_4           BIT 0x84
0000            385   _P0_5           BIT 0x85
0000            386   _P0_6           BIT 0x86
0000            387   _P0_7           BIT 0x87
0000            388   _P1_0           BIT 0x90
0000            389   _P1_1           BIT 0x91
0000            390   _P1_2           BIT 0x92
0000            391   _P1_3           BIT 0x93
0000            392   _P1_4           BIT 0x94
0000            393   _P1_5           BIT 0x95
0000            394   _P1_6           BIT 0x96
0000            395   _P1_7           BIT 0x97
0000            396   _P2_0           BIT 0xa0
0000            397   _P2_1           BIT 0xa1
0000            398   _P2_2           BIT 0xa2
0000            399   _P2_3           BIT 0xa3
0000            400   _P2_4           BIT 0xa4
0000            401   _P2_5           BIT 0xa5
0000            402   _P2_6           BIT 0xa6
0000            403   _P3_0           BIT 0xb0
0000            404   _P3_1           BIT 0xb1
0000            405   _P3_2           BIT 0xb2
0000            406   _P3_3           BIT 0xb3
0000            407   _P3_4           BIT 0xb4
0000            408   _P3_7           BIT 0xb7
0000            409   _CCF0           BIT 0xd8
0000            410   _CCF1           BIT 0xd9
0000            411   _CCF2           BIT 0xda
0000            412   _CCF3           BIT 0xdb
0000            413   _CCF4           BIT 0xdc
0000            414   _CCF5           BIT 0xdd
0000            415   _CR             BIT 0xde
0000            416   _CF             BIT 0xdf
0000            417   _PARITY         BIT 0xd0
0000            418   _F1             BIT 0xd1
0000            419   _OV             BIT 0xd2
0000            420   _RS0            BIT 0xd3
0000            421   _RS1            BIT 0xd4
0000            422   _F0             BIT 0xd5
0000            423   _AC             BIT 0xd6
0000            424   _CY             BIT 0xd7
0000            425   _RI             BIT 0x98
0000            426   _TI             BIT 0x99
0000            427   _RB8            BIT 0x9a
0000            428   _TB8            BIT 0x9b
0000            429   _REN            BIT 0x9c
0000            430   _CE             BIT 0x9d
0000            431   _SMODE          BIT 0x9e
0000            432   _RI1            BIT 0xc8
0000            433   _TI1            BIT 0xc9
0000            434   _RBX1           BIT 0xca
0000            435   _TBX1           BIT 0xcb
0000            436   _REN1           BIT 0xcc
0000            437   _PERR1          BIT 0xcd
0000            438   _OVR1           BIT 0xce
0000            439   _SI             BIT 0xc0
0000            440   _ACK            BIT 0xc1
0000            441   _ARBLOST        BIT 0xc2
0000            442   _ACKRQ          BIT 0xc3
0000            443   _STO            BIT 0xc4
0000            444   _STA            BIT 0xc5
0000            445   _TXMODE         BIT 0xc6
0000            446   _MASTER         BIT 0xc7
0000            447   _SPIEN          BIT 0xf8
0000            448   _TXNF           BIT 0xf9
0000            449   _NSSMD0         BIT 0xfa
0000            450   _NSSMD1         BIT 0xfb
0000            451   _RXOVRN         BIT 0xfc
0000            452   _MODF           BIT 0xfd
0000            453   _WCOL           BIT 0xfe
0000            454   _SPIF           BIT 0xff
0000            455   _IT0            BIT 0x88
0000            456   _IE0            BIT 0x89
0000            457   _IT1            BIT 0x8a
0000            458   _IE1            BIT 0x8b
0000            459   _TR0            BIT 0x8c
0000            460   _TF0            BIT 0x8d
0000            461   _TR1            BIT 0x8e
0000            462   _TF1            BIT 0x8f
0000            463   _T2XCLK0        BIT 0xc8
0000            464   _T2XCLK1        BIT 0xc9
0000            465   _TR2            BIT 0xca
0000            466   _T2SPLIT        BIT 0xcb
0000            467   _TF2CEN         BIT 0xcc
0000            468   _TF2LEN         BIT 0xcd
0000            469   _TF2L           BIT 0xce
0000            470   _TF2H           BIT 0xcf
0000            471   _T4XCLK0        BIT 0x98
0000            472   _T4XCLK1        BIT 0x99
0000            473   _TR4            BIT 0x9a
0000            474   _T4SPLIT        BIT 0x9b
0000            475   _TF4CEN         BIT 0x9c
0000            476   _TF4LEN         BIT 0x9d
0000            477   _TF4L           BIT 0x9e
0000            478   _TF4H           BIT 0x9f
0000            479   _T5XCLK0        BIT 0xc0
0000            480   _T5XCLK1        BIT 0xc1
0000            481   _TR5            BIT 0xc2
0000            482   _T5SPLIT        BIT 0xc3
0000            483   _TF5CEN         BIT 0xc4
0000            484   _TF5LEN         BIT 0xc5
0000            485   _TF5L           BIT 0xc6
0000            486   _TF5H           BIT 0xc7
0000            487   _RIE            BIT 0xd8
0000            488   _RXTO0          BIT 0xd9
0000            489   _RXTO1          BIT 0xda
0000            490   _RFRQ           BIT 0xdb
0000            491   _TIE            BIT 0xdc
0000            492   _TXHOLD         BIT 0xdd
0000            493   _TXNF1          BIT 0xde
0000            494   _TFRQ           BIT 0xdf
0000            495   ;--------------------------------------------------------
0000            496   ; overlayable register banks
0000            497   ;--------------------------------------------------------
0000            498            rbank0 segment data overlay
0000            499   ;--------------------------------------------------------
0000            500   ; internal ram data
0000            501   ;--------------------------------------------------------
0000            502            rseg R_DSEG
0000            503   _pwm_count:
0000            504            ds 1
0001            505   _pwm_count1:
0001            506            ds 1
0002            507   _pwm_count2:
0002            508            ds 1
0003            509   _pwm_count3:
0003            510            ds 1
0004            511   _pwmSig1:
0004            512            ds 2
0006            513   _pwmSig2:
0006            514            ds 2
0008            515   _pwmSig3:
0008            516            ds 2
000A            517   _pwmSig4:
000A            518            ds 2
000C            519   _pwmSig5:
000C            520            ds 2
000E            521   _pwmSig6:
000E            522            ds 2
0010            523   _cartMoveF:
0010            524            ds 2
0012            525   _cartMoveB:
0012            526            ds 2
0014            527   _flag:
0014            528            ds 2
0016            529   _claw_flag:
0016            530            ds 2
0018            531   _main_v_1_72:
0018            532            ds 6
001E            533   ;--------------------------------------------------------
001E            534   ; overlayable items in internal ram 
001E            535   ;--------------------------------------------------------
0000            536            rseg    R_OSEG
0000            537            rseg    R_OSEG
0000            538   _InitPinADC_PARM_2:
0000            539            ds 1
0001            540   ;--------------------------------------------------------
0001            541   ; indirectly addressable internal ram data
0001            542   ;--------------------------------------------------------
0000            543            rseg R_ISEG
0000            544   ;--------------------------------------------------------
0000            545   ; absolute internal ram data
0000            546   ;--------------------------------------------------------
0000            547            DSEG
0000            548   ;--------------------------------------------------------
0000            549   ; bit data
0000            550   ;--------------------------------------------------------
0000            551            rseg R_BSEG
0000            552   _Timer2_ISR_sloc0_1_0:
0000            553            DBIT    1
0001            554   ;--------------------------------------------------------
0001            555   ; paged external ram data
0001            556   ;--------------------------------------------------------
0000            557            rseg R_PSEG
0000            558   ;--------------------------------------------------------
0000            559   ; external ram data
0000            560   ;--------------------------------------------------------
0000            561            rseg R_XSEG
0000            562   ;--------------------------------------------------------
0000            563   ; absolute external ram data
0000            564   ;--------------------------------------------------------
0000            565            XSEG
0000            566   ;--------------------------------------------------------
0000            567   ; external initialized ram data
0000            568   ;--------------------------------------------------------
0000            569            rseg R_IXSEG
0000            570            rseg R_HOME
0000            571            rseg R_GSINIT
0000            572            rseg R_CSEG
0000            573   ;--------------------------------------------------------
0000            574   ; Reset entry point and interrupt vectors
0000            575   ;--------------------------------------------------------
0000            576            CSEG at 0x0000
0000 020100     577            ljmp    _crt0
002B            578            CSEG at 0x002b
002B 020100     579            ljmp    _Timer2_ISR
002E            580   ;--------------------------------------------------------
002E            581   ; global & static initialisations
002E            582   ;--------------------------------------------------------
0000            583            rseg R_HOME
0000            584            rseg R_GSINIT
0000            585            rseg R_GSINIT
0000            586   ;--------------------------------------------------------
0000            587   ; data variables initialization
0000            588   ;--------------------------------------------------------
0000            589            rseg R_DINIT
0000            590   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:39: volatile unsigned char pwm_count = 0; // used in the timer 2 ISR
0000 752000     591            mov     _pwm_count,#0x00
0003            592   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:40: volatile unsigned char pwm_count1 = 0; // this will be usec in the timer 3 ISR
0003 75E000     593            mov     _pwm_count1,#0x00
0006            594   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:41: volatile unsigned char pwm_count2 = 0; // this will be used in the timer 4 ISR
0006 75A000     595            mov     _pwm_count2,#0x00
0009            596   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:42: volatile unsigned char pwm_count3 = 0; //
0009 756000     597            mov     _pwm_count3,#0x00
000C            598   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:57: volatile int flag = 0;
000C E4         599            clr     a
000D F520       600            mov     _flag,a
000F F521       601            mov     (_flag + 1),a
0011            602   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:58: volatile int claw_flag = 0;
0011 E4         603            clr     a
0012 F5E0       604            mov     _claw_flag,a
0014 F5E1       605            mov     (_claw_flag + 1),a
0016            606            ; The linker places a 'ret' at the end of segment R_DINIT.
0016            607   ;--------------------------------------------------------
0016            608   ; code
0016            609   ;--------------------------------------------------------
0000            610            rseg R_CSEG
0000            611   ;------------------------------------------------------------
0000            612   ;Allocation info for local variables in function '_c51_external_startup'
0000            613   ;------------------------------------------------------------
0000            614   ;------------------------------------------------------------
0000            615   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:60: char _c51_external_startup(void)
0000            616   ;        -----------------------------------------
0000            617   ;         function _c51_external_startup
0000            618   ;        -----------------------------------------
0000            619   __c51_external_startup:
0000            620            using   0
0000            621   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:63: SFRPAGE = 0x00;
0000 75A700     622            mov     _SFRPAGE,#0x00
0003            623   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:64: WDTCN = 0xDE; //First key
0003 7597DE     624            mov     _WDTCN,#0xDE
0006            625   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:65: WDTCN = 0xAD; //Second key
0006 7597AD     626            mov     _WDTCN,#0xAD
0009            627   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:67: VDM0CN = 0x80;       // enable VDD monitor
0009 75FF80     628            mov     _VDM0CN,#0x80
000C            629   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:68: RSTSRC = 0x02 | 0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     630            mov     _RSTSRC,#0x06
000F            631   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:75: SFRPAGE = 0x10;
000F 75A710     632            mov     _SFRPAGE,#0x10
0012            633   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:76: PFE0CN = 0x20; // SYSCLK < 75 MHz.
0012 75C120     634            mov     _PFE0CN,#0x20
0015            635   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:77: SFRPAGE = 0x00;
0015 75A700     636            mov     _SFRPAGE,#0x00
0018            637   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:98: CLKSEL = 0x00;
0018 75A900     638            mov     _CLKSEL,#0x00
001B            639   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:99: CLKSEL = 0x00;
001B 75A900     640            mov     _CLKSEL,#0x00
001E            641   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:100: while ((CLKSEL & 0x80) == 0);
001E            642   L002001?:
001E E5A9       643            mov     a,_CLKSEL
0020 30E710     644            jnb     acc.7,L002001?
0023            645   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:101: CLKSEL = 0x03;
0023 75A903     646            mov     _CLKSEL,#0x03
0026            647   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:102: CLKSEL = 0x03;
0026 75A903     648            mov     _CLKSEL,#0x03
0029            649   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:103: while ((CLKSEL & 0x80) == 0);
0029            650   L002004?:
0029 E5A9       651            mov     a,_CLKSEL
002B 30E790     652            jnb     acc.7,L002004?
002E            653   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:108: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     654            orl     _P0MDOUT,#0x10
0031            655   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:109: XBR0 = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)
0031 75E101     656            mov     _XBR0,#0x01
0034            657   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:110: XBR1 = 0X00;
0034 75E200     658            mov     _XBR1,#0x00
0037            659   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:111: XBR2 = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     660            mov     _XBR2,#0x40
003A            661   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:117: SCON0 = 0x10;
003A 759810     662            mov     _SCON0,#0x10
003D            663   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:118: TH1 = 0x100 - ((SYSCLK / BAUDRATE) / (2L * 12L));
003D 758DE6     664            mov     _TH1,#0xE6
0040            665   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:119: TL1 = TH1;      // Init Timer1
0040 858D8B     666            mov     _TL1,_TH1
0043            667   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:120: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     668            anl     _TMOD,#0x0F
0046            669   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:121: TMOD |= 0x20;
0046 438920     670            orl     _TMOD,#0x20
0049            671   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:122: TR1 = 1; // START Timer1
0049 D28E       672            setb    _TR1
004B            673   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:123: TI = 1;  // Indicate TX0 ready
004B D299       674            setb    _TI
004D            675   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:126: TMR2CN0 = 0x00;   // Stop Timer2; Clear TF2;
004D 75C800     676            mov     _TMR2CN0,#0x00
0050            677   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:127: CKCON0 |= 0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     678            orl     _CKCON0,#0x10
0053            679   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:128: TMR2RL = (0x10000L - (SYSCLK / 10000L)); // Initialize reload value
0053 75CAE0     680            mov     _TMR2RL,#0xE0
0056 75CBE3     681            mov     (_TMR2RL >> 8),#0xE3
0059            682   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:129: TMR2 = 0xffff;   // Set to reload immediately
0059 75CEFF     683            mov     _TMR2,#0xFF
005C 75CFFF     684            mov     (_TMR2 >> 8),#0xFF
005F            685   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:130: ET2 = 1;         // Enable Timer2 interrupts
005F D2AD       686            setb    _ET2
0061            687   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:131: TR2 = 1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       688            setb    _TR2
0063            689   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:147: EA = 1; // Enable interrupts
0063 D2AF       690            setb    _EA
0065            691   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:150: return 0;
0065 758200     692            mov     dpl,#0x00
0068 22         693            ret
0069            694   ;------------------------------------------------------------
0069            695   ;Allocation info for local variables in function 'ADC_at_Pin'
0069            696   ;------------------------------------------------------------
0069            697   ;pin                       Allocated to registers 
0069            698   ;------------------------------------------------------------
0069            699   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:152: unsigned int ADC_at_Pin(unsigned char pin)
0069            700   ;        -----------------------------------------
0069            701   ;         function ADC_at_Pin
0069            702   ;        -----------------------------------------
0069            703   _ADC_at_Pin:
0069 8582BB     704            mov     _ADC0MX,dpl
006C            705   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:155: ADBUSY = 1;       // Dummy conversion first to select new pin
006C D2EC       706            setb    _ADBUSY
006E            707   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:156: while (ADBUSY); // Wait for dummy conversion to finish
006E            708   L003001?:
006E 20EC10     709            jb      _ADBUSY,L003001?
0071            710   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:157: ADBUSY = 1;     // Convert voltage at the pin
0071 D2EC       711            setb    _ADBUSY
0073            712   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:158: while (ADBUSY); // Wait for conversion to complete
0073            713   L003004?:
0073 20EC50     714            jb      _ADBUSY,L003004?
0076            715   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:159: return (ADC0);
0076 85BD82     716            mov     dpl,_ADC0
0079 85BE83     717            mov     dph,(_ADC0 >> 8)
007C 22         718            ret
007D            719   ;------------------------------------------------------------
007D            720   ;Allocation info for local variables in function 'Timer2_ISR'
007D            721   ;------------------------------------------------------------
007D            722   ;------------------------------------------------------------
007D            723   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:163: void Timer2_ISR(void) interrupt 5
007D            724   ;        -----------------------------------------
007D            725   ;         function Timer2_ISR
007D            726   ;        -----------------------------------------
007D            727   _Timer2_ISR:
007D C0E0       728            push    acc
007F C002       729            push    ar2
0081 C003       730            push    ar3
0083 C0D0       731            push    psw
0085 75D000     732            mov     psw,#0x00
0088            733   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:165: TF2H = 0; // Clear Timer2 interrupt flag
0088 C2CF       734            clr     _TF2H
008A            735   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:167: pwm_count++;
008A 0520       736            inc     _pwm_count
008C            737   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:168: if (pwm_count>100)
008C E520       738            mov     a,_pwm_count
008E 249B       739            add     a,#0xff - 0x64
0090 5001       740            jnc     L004002?
0092            741   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:169: pwm_count = 0;
0092 752000     742            mov     _pwm_count,#0x00
0095            743   L004002?:
0095            744   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:172: motorR1 = pwm_count>pwmSig1 ? 0 : 1;
0095 AA20       745            mov     r2,_pwm_count
0097 7B00       746            mov     r3,#0x00
0099 C3         747            clr     c
009A E520       748            mov     a,_pwmSig1
009C 9A         749            subb    a,r2
009D E521       750            mov     a,(_pwmSig1 + 1)
009F 9B         751            subb    a,r3
00A0 9290       752            mov  _Timer2_ISR_sloc0_1_0,c
00A2 B3         753            cpl     c
00A3 92A2       754            mov     _P2_2,c
00A5            755   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:173: motorR2 = pwm_count>pwmSig2 ? 0 : 1;
00A5 AA20       756            mov     r2,_pwm_count
00A7 7B00       757            mov     r3,#0x00
00A9 C3         758            clr     c
00AA E5E0       759            mov     a,_pwmSig2
00AC 9A         760            subb    a,r2
00AD E5E1       761            mov     a,(_pwmSig2 + 1)
00AF 9B         762            subb    a,r3
00B0 9290       763            mov  _Timer2_ISR_sloc0_1_0,c
00B2 B3         764            cpl     c
00B3 92A1       765            mov     _P2_1,c
00B5            766   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:175: motorL1 = pwm_count>pwmSig3 ? 0 : 1;
00B5 AA20       767            mov     r2,_pwm_count
00B7 7B00       768            mov     r3,#0x00
00B9 C3         769            clr     c
00BA E5A0       770            mov     a,_pwmSig3
00BC 9A         771            subb    a,r2
00BD E5A1       772            mov     a,(_pwmSig3 + 1)
00BF 9B         773            subb    a,r3
00C0 9290       774            mov  _Timer2_ISR_sloc0_1_0,c
00C2 B3         775            cpl     c
00C3 92A3       776            mov     _P2_3,c
00C5            777   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:176: motorL2 = pwm_count>pwmSig4 ? 0 : 1;
00C5 AA20       778            mov     r2,_pwm_count
00C7 7B00       779            mov     r3,#0x00
00C9 C3         780            clr     c
00CA E560       781            mov     a,_pwmSig4
00CC 9A         782            subb    a,r2
00CD E561       783            mov     a,(_pwmSig4 + 1)
00CF 9B         784            subb    a,r3
00D0 9290       785            mov  _Timer2_ISR_sloc0_1_0,c
00D2 B3         786            cpl     c
00D3 92A4       787            mov     _P2_4,c
00D5 D0D0       788            pop     psw
00D7 D003       789            pop     ar3
00D9 D002       790            pop     ar2
00DB D0E0       791            pop     acc
00DD 32         792            reti
00DE            793   ;        eliminated unneeded push/pop dpl
00DE            794   ;        eliminated unneeded push/pop dph
00DE            795   ;        eliminated unneeded push/pop b
00DE            796   ;------------------------------------------------------------
00DE            797   ;Allocation info for local variables in function 'InitADC'
00DE            798   ;------------------------------------------------------------
00DE            799   ;------------------------------------------------------------
00DE            800   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:206: void InitADC(void)
00DE            801   ;        -----------------------------------------
00DE            802   ;         function InitADC
00DE            803   ;        -----------------------------------------
00DE            804   _InitADC:
00DE            805   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:208: SFRPAGE = 0x00;
00DE 75A700     806            mov     _SFRPAGE,#0x00
00E1            807   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:209: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
00E1 75B280     808            mov     _ADC0CN1,#0x80
00E4            809   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:210: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
00E4 75BCF8     810            mov     _ADC0CF0,#0xF8
00E7            811   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:211: ADC0CF1 = 0b_0_0_011110; // Same as default for now
00E7 75B91E     812            mov     _ADC0CF1,#0x1E
00EA            813   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:212: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
00EA 75E800     814            mov     _ADC0CN0,#0x00
00ED            815   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:213: ADC0CF2 = 0b_0_01_11111; // GND pin, Vref=VDD
00ED 75DF3F     816            mov     _ADC0CF2,#0x3F
00F0            817   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:214: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
00F0 75B300     818            mov     _ADC0CN2,#0x00
00F3            819   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:215: ADEN = 1; // Enable ADC
00F3 D2EF       820            setb    _ADEN
00F5 22         821            ret
00F6            822   ;------------------------------------------------------------
00F6            823   ;Allocation info for local variables in function 'TIMER0_Init'
00F6            824   ;------------------------------------------------------------
00F6            825   ;------------------------------------------------------------
00F6            826   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:217: void TIMER0_Init(void)
00F6            827   ;        -----------------------------------------
00F6            828   ;         function TIMER0_Init
00F6            829   ;        -----------------------------------------
00F6            830   _TIMER0_Init:
00F6            831   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:219: TMOD &= 0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00F6 5389F0     832            anl     _TMOD,#0xF0
00F9            833   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:220: TMOD |= 0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
00F9 438901     834            orl     _TMOD,#0x01
00FC            835   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:221: TR0 = 0; // Stop Timer/Counter 0
00FC C28C       836            clr     _TR0
00FE 22         837            ret
00FF            838   ;------------------------------------------------------------
00FF            839   ;Allocation info for local variables in function 'Volts_at_Pin'
00FF            840   ;------------------------------------------------------------
00FF            841   ;pin                       Allocated to registers r2 
00FF            842   ;------------------------------------------------------------
00FF            843   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:226: float Volts_at_Pin(unsigned char pin)
00FF            844   ;        -----------------------------------------
00FF            845   ;         function Volts_at_Pin
00FF            846   ;        -----------------------------------------
00FF            847   _Volts_at_Pin:
00FF            848   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:228: return ((ADC_at_Pin(pin)*VDD) / 0b_0011_1111_1111_1111);
00FF 120100     849            lcall   _ADC_at_Pin
0102 120100     850            lcall   ___uint2fs
0105 AA82       851            mov     r2,dpl
0107 AB83       852            mov     r3,dph
0109 ACF0       853            mov     r4,b
010B FD         854            mov     r5,a
010C C002       855            push    ar2
010E C003       856            push    ar3
0110 C004       857            push    ar4
0112 C005       858            push    ar5
0114 906C8B     859            mov     dptr,#0x6C8B
0117 75F053     860            mov     b,#0x53
011A 7440       861            mov     a,#0x40
011C 120100     862            lcall   ___fsmul
011F AA82       863            mov     r2,dpl
0121 AB83       864            mov     r3,dph
0123 ACF0       865            mov     r4,b
0125 FD         866            mov     r5,a
0126 E581       867            mov     a,sp
0128 24FC       868            add     a,#0xfc
012A F581       869            mov     sp,a
012C E4         870            clr     a
012D C0E0       871            push    acc
012F 74FC       872            mov     a,#0xFC
0131 C0E0       873            push    acc
0133 747F       874            mov     a,#0x7F
0135 C0E0       875            push    acc
0137 7446       876            mov     a,#0x46
0139 C0E0       877            push    acc
013B 8A82       878            mov     dpl,r2
013D 8B83       879            mov     dph,r3
013F 8CF0       880            mov     b,r4
0141 ED         881            mov     a,r5
0142 120100     882            lcall   ___fsdiv
0145 AA82       883            mov     r2,dpl
0147 AB83       884            mov     r3,dph
0149 ACF0       885            mov     r4,b
014B FD         886            mov     r5,a
014C E581       887            mov     a,sp
014E 24FC       888            add     a,#0xfc
0150 F581       889            mov     sp,a
0152 8A82       890            mov     dpl,r2
0154 8B83       891            mov     dph,r3
0156 8CF0       892            mov     b,r4
0158 ED         893            mov     a,r5
0159 22         894            ret
015A            895   ;------------------------------------------------------------
015A            896   ;Allocation info for local variables in function 'InitPinADC'
015A            897   ;------------------------------------------------------------
015A            898   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
015A            899   ;portno                    Allocated to registers r2 
015A            900   ;mask                      Allocated to registers r3 
015A            901   ;------------------------------------------------------------
015A            902   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:230: void InitPinADC(unsigned char portno, unsigned char pinno)
015A            903   ;        -----------------------------------------
015A            904   ;         function InitPinADC
015A            905   ;        -----------------------------------------
015A            906   _InitPinADC:
015A AA82       907            mov     r2,dpl
015C            908   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:234: mask = 1 << pinno;
015C 8550F0     909            mov     b,_InitPinADC_PARM_2
015F 05F0       910            inc     b
0161 7401       911            mov     a,#0x01
0163 8001       912            sjmp    L008013?
0165            913   L008011?:
0165 25E0       914            add     a,acc
0167            915   L008013?:
0167 D5F0D0     916            djnz    b,L008011?
016A FB         917            mov     r3,a
016B            918   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:236: SFRPAGE = 0x20;
016B 75A720     919            mov     _SFRPAGE,#0x20
016E            920   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:237: switch (portno)
016E BA0010     921            cjne    r2,#0x00,L008014?
0171 8001       922            sjmp    L008001?
0173            923   L008014?:
0173 BA0190     924            cjne    r2,#0x01,L008015?
0176 8001       925            sjmp    L008002?
0178            926   L008015?:
0178            927   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:239: case 0:
0178 BA0210     928            cjne    r2,#0x02,L008005?
017B 8001       929            sjmp    L008003?
017D            930   L008001?:
017D            931   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:240: P0MDIN &= (~mask); // Set pin as analog input
017D EB         932            mov     a,r3
017E F4         933            cpl     a
017F FA         934            mov     r2,a
0180 52F1       935            anl     _P0MDIN,a
0182            936   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:241: P0SKIP |= mask; // Skip Crossbar decoding for this pin
0182 EB         937            mov     a,r3
0183 42D4       938            orl     _P0SKIP,a
0185            939   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:242: break;
0185            940   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:243: case 1:
0185 8001       941            sjmp    L008005?
0187            942   L008002?:
0187            943   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:244: P1MDIN &= (~mask); // Set pin as analog input
0187 EB         944            mov     a,r3
0188 F4         945            cpl     a
0189 FA         946            mov     r2,a
018A 52F2       947            anl     _P1MDIN,a
018C            948   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:245: P1SKIP |= mask; // Skip Crossbar decoding for this pin
018C EB         949            mov     a,r3
018D 42D5       950            orl     _P1SKIP,a
018F            951   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:246: break;
018F            952   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:247: case 2:
018F 8001       953            sjmp    L008005?
0191            954   L008003?:
0191            955   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:248: P2MDIN &= (~mask); // Set pin as analog input
0191 EB         956            mov     a,r3
0192 F4         957            cpl     a
0193 FA         958            mov     r2,a
0194 52F3       959            anl     _P2MDIN,a
0196            960   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:249: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0196 EB         961            mov     a,r3
0197 42CC       962            orl     _P2SKIP,a
0199            963   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:253: }
0199            964   L008005?:
0199            965   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:254: SFRPAGE = 0x00;
0199 75A700     966            mov     _SFRPAGE,#0x00
019C 22         967            ret
019D            968   ;------------------------------------------------------------
019D            969   ;Allocation info for local variables in function 'PWMStraight'
019D            970   ;------------------------------------------------------------
019D            971   ;------------------------------------------------------------
019D            972   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:263: void PWMStraight(void) {
019D            973   ;        -----------------------------------------
019D            974   ;         function PWMStraight
019D            975   ;        -----------------------------------------
019D            976   _PWMStraight:
019D            977   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:264: pwmSig1 = 99;
019D 752063     978            mov     _pwmSig1,#0x63
01A0 E4         979            clr     a
01A1 F521       980            mov     (_pwmSig1 + 1),a
01A3            981   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:265: pwmSig2 = 0;
01A3            982   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:267: pwmSig3 = 0;
01A3 E4         983            clr     a
01A4 F5E0       984            mov     _pwmSig2,a
01A6 F5E1       985            mov     (_pwmSig2 + 1),a
01A8 F5A0       986            mov     _pwmSig3,a
01AA F5A1       987            mov     (_pwmSig3 + 1),a
01AC            988   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:268: pwmSig4 =99;
01AC 756063     989            mov     _pwmSig4,#0x63
01AF E4         990            clr     a
01B0 F561       991            mov     (_pwmSig4 + 1),a
01B2 22         992            ret
01B3            993   ;------------------------------------------------------------
01B3            994   ;Allocation info for local variables in function 'PWMback'
01B3            995   ;------------------------------------------------------------
01B3            996   ;------------------------------------------------------------
01B3            997   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:271: void PWMback(void) {
01B3            998   ;        -----------------------------------------
01B3            999   ;         function PWMback
01B3           1000   ;        -----------------------------------------
01B3           1001   _PWMback:
01B3           1002   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:272: pwmSig1 = 0;
01B3 E4        1003            clr     a
01B4 F520      1004            mov     _pwmSig1,a
01B6 F521      1005            mov     (_pwmSig1 + 1),a
01B8           1006   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:273: pwmSig2 = 99;
01B8 75E063    1007            mov     _pwmSig2,#0x63
01BB E4        1008            clr     a
01BC F5E1      1009            mov     (_pwmSig2 + 1),a
01BE           1010   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:275: pwmSig3 = 99;
01BE 75A063    1011            mov     _pwmSig3,#0x63
01C1 E4        1012            clr     a
01C2 F5A1      1013            mov     (_pwmSig3 + 1),a
01C4           1014   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:276: pwmSig4 = 0;
01C4 E4        1015            clr     a
01C5 F560      1016            mov     _pwmSig4,a
01C7 F561      1017            mov     (_pwmSig4 + 1),a
01C9 22        1018            ret
01CA           1019   ;------------------------------------------------------------
01CA           1020   ;Allocation info for local variables in function 'PWMLeft'
01CA           1021   ;------------------------------------------------------------
01CA           1022   ;------------------------------------------------------------
01CA           1023   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:279: void PWMLeft(void) {
01CA           1024   ;        -----------------------------------------
01CA           1025   ;         function PWMLeft
01CA           1026   ;        -----------------------------------------
01CA           1027   _PWMLeft:
01CA           1028   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:280: pwmSig1 = 0;
01CA           1029   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:281: pwmSig2 = 0;
01CA E4        1030            clr     a
01CB F520      1031            mov     _pwmSig1,a
01CD F521      1032            mov     (_pwmSig1 + 1),a
01CF F5E0      1033            mov     _pwmSig2,a
01D1 F5E1      1034            mov     (_pwmSig2 + 1),a
01D3           1035   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:283: pwmSig3 = 99;
01D3 75A063    1036            mov     _pwmSig3,#0x63
01D6 E4        1037            clr     a
01D7 F5A1      1038            mov     (_pwmSig3 + 1),a
01D9           1039   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:284: pwmSig4 = 99;
01D9 756063    1040            mov     _pwmSig4,#0x63
01DC E4        1041            clr     a
01DD F561      1042            mov     (_pwmSig4 + 1),a
01DF 22        1043            ret
01E0           1044   ;------------------------------------------------------------
01E0           1045   ;Allocation info for local variables in function 'PWMRight'
01E0           1046   ;------------------------------------------------------------
01E0           1047   ;------------------------------------------------------------
01E0           1048   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:287: void PWMRight(void) {
01E0           1049   ;        -----------------------------------------
01E0           1050   ;         function PWMRight
01E0           1051   ;        -----------------------------------------
01E0           1052   _PWMRight:
01E0           1053   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:288: pwmSig1 = 99;
01E0 752063    1054            mov     _pwmSig1,#0x63
01E3 E4        1055            clr     a
01E4 F521      1056            mov     (_pwmSig1 + 1),a
01E6           1057   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:289: pwmSig2 = 0;
01E6           1058   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:291: pwmSig3 = 0;
01E6           1059   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:292: pwmSig4 = 0;
01E6 E4        1060            clr     a
01E7 F5E0      1061            mov     _pwmSig2,a
01E9 F5E1      1062            mov     (_pwmSig2 + 1),a
01EB F5A0      1063            mov     _pwmSig3,a
01ED F5A1      1064            mov     (_pwmSig3 + 1),a
01EF F560      1065            mov     _pwmSig4,a
01F1 F561      1066            mov     (_pwmSig4 + 1),a
01F3 22        1067            ret
01F4           1068   ;------------------------------------------------------------
01F4           1069   ;Allocation info for local variables in function 'periodcalc'
01F4           1070   ;------------------------------------------------------------
01F4           1071   ;period                    Allocated to registers r2 r3 r4 r5 
01F4           1072   ;overflow_count            Allocated to registers r2 r3 
01F4           1073   ;------------------------------------------------------------
01F4           1074   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:297: float periodcalc(void) {
01F4           1075   ;        -----------------------------------------
01F4           1076   ;         function periodcalc
01F4           1077   ;        -----------------------------------------
01F4           1078   _periodcalc:
01F4           1079   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:301: TL0=0; 
01F4 758A00    1080            mov     _TL0,#0x00
01F7           1081   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:302: TH0=0;
01F7 758C00    1082            mov     _TH0,#0x00
01FA           1083   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:303: TF0=0;
01FA C28D      1084            clr     _TF0
01FC           1085   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:305: TR0=0;
01FC C28C      1086            clr     _TR0
01FE           1087   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:308: while(INPUT!=0); // Wait for the signal to be zero
01FE           1088   L013001?:
01FE 20A090    1089            jb      _P2_0,L013001?
0201           1090   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:309: while(INPUT!=1); // Wait for the signal to be one
0201           1091   L013004?:
0201 30A0D0    1092            jnb     _P2_0,L013004?
0204           1093   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:310: TR0=1; // Start the timer
0204 D28C      1094            setb    _TR0
0206           1095   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:311: while(INPUT!=0) // Wait for the signal to be zero
0206 7A00      1096            mov     r2,#0x00
0208 7B00      1097            mov     r3,#0x00
020A           1098   L013009?:
020A 30A050    1099            jnb     _P2_0,L013026?
020D           1100   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:313: if(TF0==1) // Did the 16-bit timer overflow?
020D           1101   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:315: TF0=0;
020D 108D90    1102            jbc     _TF0,L013033?
0210 8001      1103            sjmp    L013009?
0212           1104   L013033?:
0212           1105   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:316: overflow_count++;
0212 0A        1106            inc     r2
0213 BA0010    1107            cjne    r2,#0x00,L013009?
0216 0B        1108            inc     r3
0217           1109   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:319: while(INPUT!=1) // Wait for the signal to be one
0217 8001      1110            sjmp    L013009?
0219           1111   L013026?:
0219           1112   L013014?:
0219 20A010    1113            jb      _P2_0,L013016?
021C           1114   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:321: if(TF0==1) // Did the 16-bit timer overflow?
021C           1115   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:323: TF0=0;
021C 108D50    1116            jbc     _TF0,L013035?
021F 8001      1117            sjmp    L013014?
0221           1118   L013035?:
0221           1119   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:324: overflow_count++;
0221 0A        1120            inc     r2
0222 BA00D0    1121            cjne    r2,#0x00,L013014?
0225 0B        1122            inc     r3
0226 8001      1123            sjmp    L013014?
0228           1124   L013016?:
0228           1125   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:327: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0228 C28C      1126            clr     _TR0
022A           1127   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:328: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
022A 8A82      1128            mov     dpl,r2
022C 8B83      1129            mov     dph,r3
022E 120100    1130            lcall   ___sint2fs
0231 AA82      1131            mov     r2,dpl
0233 AB83      1132            mov     r3,dph
0235 ACF0      1133            mov     r4,b
0237 FD        1134            mov     r5,a
0238 C002      1135            push    ar2
023A C003      1136            push    ar3
023C C004      1137            push    ar4
023E C005      1138            push    ar5
0240 900000    1139            mov     dptr,#0x0000
0243 75F080    1140            mov     b,#0x80
0246 7447      1141            mov     a,#0x47
0248 120100    1142            lcall   ___fsmul
024B AA82      1143            mov     r2,dpl
024D AB83      1144            mov     r3,dph
024F ACF0      1145            mov     r4,b
0251 FD        1146            mov     r5,a
0252 E581      1147            mov     a,sp
0254 24FC      1148            add     a,#0xfc
0256 F581      1149            mov     sp,a
0258 858C82    1150            mov     dpl,_TH0
025B C002      1151            push    ar2
025D C003      1152            push    ar3
025F C004      1153            push    ar4
0261 C005      1154            push    ar5
0263 120100    1155            lcall   ___uchar2fs
0266 AE82      1156            mov     r6,dpl
0268 AF83      1157            mov     r7,dph
026A A8F0      1158            mov     r0,b
026C F9        1159            mov     r1,a
026D C006      1160            push    ar6
026F C007      1161            push    ar7
0271 C000      1162            push    ar0
0273 C001      1163            push    ar1
0275 900000    1164            mov     dptr,#0x0000
0278 75F080    1165            mov     b,#0x80
027B 7443      1166            mov     a,#0x43
027D 120100    1167            lcall   ___fsmul
0280 AE82      1168            mov     r6,dpl
0282 AF83      1169            mov     r7,dph
0284 A8F0      1170            mov     r0,b
0286 F9        1171            mov     r1,a
0287 E581      1172            mov     a,sp
0289 24FC      1173            add     a,#0xfc
028B F581      1174            mov     sp,a
028D D005      1175            pop     ar5
028F D004      1176            pop     ar4
0291 D003      1177            pop     ar3
0293 D002      1178            pop     ar2
0295 C006      1179            push    ar6
0297 C007      1180            push    ar7
0299 C000      1181            push    ar0
029B C001      1182            push    ar1
029D 8A82      1183            mov     dpl,r2
029F 8B83      1184            mov     dph,r3
02A1 8CF0      1185            mov     b,r4
02A3 ED        1186            mov     a,r5
02A4 120100    1187            lcall   ___fsadd
02A7 AA82      1188            mov     r2,dpl
02A9 AB83      1189            mov     r3,dph
02AB ACF0      1190            mov     r4,b
02AD FD        1191            mov     r5,a
02AE E581      1192            mov     a,sp
02B0 24FC      1193            add     a,#0xfc
02B2 F581      1194            mov     sp,a
02B4 AE8A      1195            mov     r6,_TL0
02B6 7F00      1196            mov     r7,#0x00
02B8 8E82      1197            mov     dpl,r6
02BA 8F83      1198            mov     dph,r7
02BC C002      1199            push    ar2
02BE C003      1200            push    ar3
02C0 C004      1201            push    ar4
02C2 C005      1202            push    ar5
02C4 120100    1203            lcall   ___sint2fs
02C7 AE82      1204            mov     r6,dpl
02C9 AF83      1205            mov     r7,dph
02CB A8F0      1206            mov     r0,b
02CD F9        1207            mov     r1,a
02CE D005      1208            pop     ar5
02D0 D004      1209            pop     ar4
02D2 D003      1210            pop     ar3
02D4 D002      1211            pop     ar2
02D6 C006      1212            push    ar6
02D8 C007      1213            push    ar7
02DA C000      1214            push    ar0
02DC C001      1215            push    ar1
02DE 8A82      1216            mov     dpl,r2
02E0 8B83      1217            mov     dph,r3
02E2 8CF0      1218            mov     b,r4
02E4 ED        1219            mov     a,r5
02E5 120100    1220            lcall   ___fsadd
02E8 AA82      1221            mov     r2,dpl
02EA AB83      1222            mov     r3,dph
02EC ACF0      1223            mov     r4,b
02EE FD        1224            mov     r5,a
02EF E581      1225            mov     a,sp
02F1 24FC      1226            add     a,#0xfc
02F3 F581      1227            mov     sp,a
02F5 C002      1228            push    ar2
02F7 C003      1229            push    ar3
02F9 C004      1230            push    ar4
02FB C005      1231            push    ar5
02FD 90F4FC    1232            mov     dptr,#0xF4FC
0300 75F032    1233            mov     b,#0x32
0303 7434      1234            mov     a,#0x34
0305 120100    1235            lcall   ___fsmul
0308 AA82      1236            mov     r2,dpl
030A AB83      1237            mov     r3,dph
030C ACF0      1238            mov     r4,b
030E FD        1239            mov     r5,a
030F E581      1240            mov     a,sp
0311 24FC      1241            add     a,#0xfc
0313 F581      1242            mov     sp,a
0315           1243   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:330: return period;
0315 8A82      1244            mov     dpl,r2
0317 8B83      1245            mov     dph,r3
0319 8CF0      1246            mov     b,r4
031B ED        1247            mov     a,r5
031C 22        1248            ret
031D           1249   ;------------------------------------------------------------
031D           1250   ;Allocation info for local variables in function 'main'
031D           1251   ;------------------------------------------------------------
031D           1252   ;v                         Allocated with name '_main_v_1_72'
031D           1253   ;sig1                      Allocated to registers 
031D           1254   ;sig2                      Allocated to registers 
031D           1255   ;peak                      Allocated to registers r2 r3 r4 r5 
031D           1256   ;voltspeak                 Allocated with name '_main_voltspeak_1_72'
031D           1257   ;periodpwm                 Allocated to registers 
031D           1258   ;period                    Allocated to registers r2 r3 r4 r5 
031D           1259   ;overflow_count            Allocated to registers r2 r3 
031D           1260   ;------------------------------------------------------------
031D           1261   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:333: void main(void)
031D           1262   ;        -----------------------------------------
031D           1263   ;         function main
031D           1264   ;        -----------------------------------------
031D           1265   _main:
031D           1266   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:344: TIMER0_Init();
031D 120100    1267            lcall   _TIMER0_Init
0320           1268   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:346: InitPinADC(1, 7); // Configure P2.4 as analog input
0320 755007    1269            mov     _InitPinADC_PARM_2,#0x07
0323 758201    1270            mov     dpl,#0x01
0326 120100    1271            lcall   _InitPinADC
0329           1272   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:347: InitPinADC(2, 1); // Configure P2.5 as analog input
0329 755001    1273            mov     _InitPinADC_PARM_2,#0x01
032C 758202    1274            mov     dpl,#0x02
032F 120100    1275            lcall   _InitPinADC
0332           1276   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:349: InitADC();
0332 120100    1277            lcall   _InitADC
0335           1278   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:350: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0335 7450      1279            mov     a,#__str_0
0337 C0E0      1280            push    acc
0339 74C2      1281            mov     a,#(__str_0 >> 8)
033B C0E0      1282            push    acc
033D 7480      1283            mov     a,#0x80
033F C0E0      1284            push    acc
0341 120100    1285            lcall   _printf
0344 1581      1286            dec     sp
0346 1581      1287            dec     sp
0348 1581      1288            dec     sp
034A           1289   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:352: "Check pins P2.2 and P2.1 with the oscilloscope.\r\n");
034A 74D0      1290            mov     a,#__str_1
034C C0E0      1291            push    acc
034E 74C2      1292            mov     a,#(__str_1 >> 8)
0350 C0E0      1293            push    acc
0352 7480      1294            mov     a,#0x80
0354 C0E0      1295            push    acc
0356 120100    1296            lcall   _printf
0359 1581      1297            dec     sp
035B 1581      1298            dec     sp
035D 1581      1299            dec     sp
035F           1300   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:354: printf("\n");
035F 7410      1301            mov     a,#__str_2
0361 C0E0      1302            push    acc
0363 74C3      1303            mov     a,#(__str_2 >> 8)
0365 C0E0      1304            push    acc
0367 7480      1305            mov     a,#0x80
0369 C0E0      1306            push    acc
036B 120100    1307            lcall   _printf
036E 1581      1308            dec     sp
0370 1581      1309            dec     sp
0372 1581      1310            dec     sp
0374           1311   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:356: while (1)
0374           1312   L014026?:
0374           1313   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:369: if(Volts_at_Pin(QFP32_MUX_P1_7)<=0) {
0374 75820D    1314            mov     dpl,#0x0D
0377 120100    1315            lcall   _Volts_at_Pin
037A AA82      1316            mov     r2,dpl
037C AB83      1317            mov     r3,dph
037E ACF0      1318            mov     r4,b
0380 FD        1319            mov     r5,a
0381 E4        1320            clr     a
0382 C0E0      1321            push    acc
0384 C0E0      1322            push    acc
0386 C0E0      1323            push    acc
0388 C0E0      1324            push    acc
038A 8A82      1325            mov     dpl,r2
038C 8B83      1326            mov     dph,r3
038E 8CF0      1327            mov     b,r4
0390 ED        1328            mov     a,r5
0391 120100    1329            lcall   ___fsgt
0394 AA82      1330            mov     r2,dpl
0396 E581      1331            mov     a,sp
0398 24FC      1332            add     a,#0xfc
039A F581      1333            mov     sp,a
039C EA        1334            mov     a,r2
039D 7001      1335            jnz     L014002?
039F           1336   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:370: P2_0= 0; //output
039F C2A0      1337            clr     _P2_0
03A1 8001      1338            sjmp    L014003?
03A3           1339   L014002?:
03A3           1340   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:373: P2_0 = 1; // output
03A3 D2A0      1341            setb    _P2_0
03A5           1342   L014003?:
03A5           1343   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:376: TL0=0; 
03A5 758A00    1344            mov     _TL0,#0x00
03A8           1345   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:377: TH0=0;
03A8 758C00    1346            mov     _TH0,#0x00
03AB           1347   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:378: TF0=0;
03AB C28D      1348            clr     _TF0
03AD           1349   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:380: TR0=0;
03AD C28C      1350            clr     _TR0
03AF           1351   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:383: while(INPUT!=0); // Wait for the signal to be zero
03AF           1352   L014004?:
03AF 20A050    1353            jb      _P2_0,L014004?
03B2           1354   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:384: while(INPUT!=1); // Wait for the signal to be one
03B2           1355   L014007?:
03B2 30A090    1356            jnb     _P2_0,L014007?
03B5           1357   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:385: TR0=1; // Start the timer
03B5 D28C      1358            setb    _TR0
03B7           1359   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:386: while(INPUT!=0) // Wait for the signal to be zero
03B7 7A00      1360            mov     r2,#0x00
03B9 7B00      1361            mov     r3,#0x00
03BB           1362   L014012?:
03BB 30A010    1363            jnb     _P2_0,L014038?
03BE           1364   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:388: if(TF0==1) // Did the 16-bit timer overflow?
03BE           1365   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:390: TF0=0;
03BE 108D50    1366            jbc     _TF0,L014048?
03C1 8001      1367            sjmp    L014012?
03C3           1368   L014048?:
03C3           1369   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:391: overflow_count++;
03C3 0A        1370            inc     r2
03C4 BA00D0    1371            cjne    r2,#0x00,L014012?
03C7 0B        1372            inc     r3
03C8           1373   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:394: while(INPUT!=1) // Wait for the signal to be one
03C8 8001      1374            sjmp    L014012?
03CA           1375   L014038?:
03CA           1376   L014017?:
03CA 20A0D0    1377            jb      _P2_0,L014019?
03CD           1378   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:396: if(TF0==1) // Did the 16-bit timer overflow?
03CD           1379   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:398: TF0=0;
03CD 108D10    1380            jbc     _TF0,L014050?
03D0 8001      1381            sjmp    L014017?
03D2           1382   L014050?:
03D2           1383   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:399: overflow_count++;
03D2 0A        1384            inc     r2
03D3 BA0090    1385            cjne    r2,#0x00,L014017?
03D6 0B        1386            inc     r3
03D7 8001      1387            sjmp    L014017?
03D9           1388   L014019?:
03D9           1389   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:402: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
03D9 C28C      1390            clr     _TR0
03DB           1391   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:403: period=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
03DB 8A82      1392            mov     dpl,r2
03DD 8B83      1393            mov     dph,r3
03DF 120100    1394            lcall   ___sint2fs
03E2 AA82      1395            mov     r2,dpl
03E4 AB83      1396            mov     r3,dph
03E6 ACF0      1397            mov     r4,b
03E8 FD        1398            mov     r5,a
03E9 C002      1399            push    ar2
03EB C003      1400            push    ar3
03ED C004      1401            push    ar4
03EF C005      1402            push    ar5
03F1 900000    1403            mov     dptr,#0x0000
03F4 75F080    1404            mov     b,#0x80
03F7 7447      1405            mov     a,#0x47
03F9 120100    1406            lcall   ___fsmul
03FC AA82      1407            mov     r2,dpl
03FE AB83      1408            mov     r3,dph
0400 ACF0      1409            mov     r4,b
0402 FD        1410            mov     r5,a
0403 E581      1411            mov     a,sp
0405 24FC      1412            add     a,#0xfc
0407 F581      1413            mov     sp,a
0409 858C82    1414            mov     dpl,_TH0
040C C002      1415            push    ar2
040E C003      1416            push    ar3
0410 C004      1417            push    ar4
0412 C005      1418            push    ar5
0414 120100    1419            lcall   ___uchar2fs
0417 AE82      1420            mov     r6,dpl
0419 AF83      1421            mov     r7,dph
041B A8F0      1422            mov     r0,b
041D F9        1423            mov     r1,a
041E C006      1424            push    ar6
0420 C007      1425            push    ar7
0422 C000      1426            push    ar0
0424 C001      1427            push    ar1
0426 900000    1428            mov     dptr,#0x0000
0429 75F080    1429            mov     b,#0x80
042C 7443      1430            mov     a,#0x43
042E 120100    1431            lcall   ___fsmul
0431 AE82      1432            mov     r6,dpl
0433 AF83      1433            mov     r7,dph
0435 A8F0      1434            mov     r0,b
0437 F9        1435            mov     r1,a
0438 E581      1436            mov     a,sp
043A 24FC      1437            add     a,#0xfc
043C F581      1438            mov     sp,a
043E D005      1439            pop     ar5
0440 D004      1440            pop     ar4
0442 D003      1441            pop     ar3
0444 D002      1442            pop     ar2
0446 C006      1443            push    ar6
0448 C007      1444            push    ar7
044A C000      1445            push    ar0
044C C001      1446            push    ar1
044E 8A82      1447            mov     dpl,r2
0450 8B83      1448            mov     dph,r3
0452 8CF0      1449            mov     b,r4
0454 ED        1450            mov     a,r5
0455 120100    1451            lcall   ___fsadd
0458 AA82      1452            mov     r2,dpl
045A AB83      1453            mov     r3,dph
045C ACF0      1454            mov     r4,b
045E FD        1455            mov     r5,a
045F E581      1456            mov     a,sp
0461 24FC      1457            add     a,#0xfc
0463 F581      1458            mov     sp,a
0465 AE8A      1459            mov     r6,_TL0
0467 7F00      1460            mov     r7,#0x00
0469 8E82      1461            mov     dpl,r6
046B 8F83      1462            mov     dph,r7
046D C002      1463            push    ar2
046F C003      1464            push    ar3
0471 C004      1465            push    ar4
0473 C005      1466            push    ar5
0475 120100    1467            lcall   ___sint2fs
0478 AE82      1468            mov     r6,dpl
047A AF83      1469            mov     r7,dph
047C A8F0      1470            mov     r0,b
047E F9        1471            mov     r1,a
047F D005      1472            pop     ar5
0481 D004      1473            pop     ar4
0483 D003      1474            pop     ar3
0485 D002      1475            pop     ar2
0487 C006      1476            push    ar6
0489 C007      1477            push    ar7
048B C000      1478            push    ar0
048D C001      1479            push    ar1
048F 8A82      1480            mov     dpl,r2
0491 8B83      1481            mov     dph,r3
0493 8CF0      1482            mov     b,r4
0495 ED        1483            mov     a,r5
0496 120100    1484            lcall   ___fsadd
0499 AA82      1485            mov     r2,dpl
049B AB83      1486            mov     r3,dph
049D ACF0      1487            mov     r4,b
049F FD        1488            mov     r5,a
04A0 E581      1489            mov     a,sp
04A2 24FC      1490            add     a,#0xfc
04A4 F581      1491            mov     sp,a
04A6 C002      1492            push    ar2
04A8 C003      1493            push    ar3
04AA C004      1494            push    ar4
04AC C005      1495            push    ar5
04AE 90F4FC    1496            mov     dptr,#0xF4FC
04B1 75F032    1497            mov     b,#0x32
04B4 7434      1498            mov     a,#0x34
04B6 120100    1499            lcall   ___fsmul
04B9 AA82      1500            mov     r2,dpl
04BB AB83      1501            mov     r3,dph
04BD ACF0      1502            mov     r4,b
04BF FD        1503            mov     r5,a
04C0 E581      1504            mov     a,sp
04C2 24FC      1505            add     a,#0xfc
04C4 F581      1506            mov     sp,a
04C6           1507   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:404: printf("\t\t\tperiod: =%f \n", period);
04C6 C002      1508            push    ar2
04C8 C003      1509            push    ar3
04CA C004      1510            push    ar4
04CC C005      1511            push    ar5
04CE 7450      1512            mov     a,#__str_3
04D0 C0E0      1513            push    acc
04D2 74C6      1514            mov     a,#(__str_3 >> 8)
04D4 C0E0      1515            push    acc
04D6 7480      1516            mov     a,#0x80
04D8 C0E0      1517            push    acc
04DA 120100    1518            lcall   _printf
04DD E581      1519            mov     a,sp
04DF 24F9      1520            add     a,#0xf9
04E1 F581      1521            mov     sp,a
04E3           1522   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:417: peak=Volts_at_Pin(QFP32_MUX_P1_7);
04E3 75820D    1523            mov     dpl,#0x0D
04E6 120100    1524            lcall   _Volts_at_Pin
04E9 AA82      1525            mov     r2,dpl
04EB AB83      1526            mov     r3,dph
04ED ACF0      1527            mov     r4,b
04EF FD        1528            mov     r5,a
04F0           1529   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:418: printf("\t\t\tpeak of reference: =%f \n", peak);
04F0 C002      1530            push    ar2
04F2 C003      1531            push    ar3
04F4 C004      1532            push    ar4
04F6 C005      1533            push    ar5
04F8 7490      1534            mov     a,#__str_4
04FA C0E0      1535            push    acc
04FC 74C6      1536            mov     a,#(__str_4 >> 8)
04FE C0E0      1537            push    acc
0500 7480      1538            mov     a,#0x80
0502 C0E0      1539            push    acc
0504 120100    1540            lcall   _printf
0507 E581      1541            mov     a,sp
0509 24F9      1542            add     a,#0xf9
050B F581      1543            mov     sp,a
050D 020100    1544            ljmp    L014026?
0510           1545            rseg R_CSEG
0510           1546   
0000           1547            rseg R_XINIT
0000           1548   
0000           1549            rseg R_CONST
0000           1550   __str_0:
0000 1B        1551            db 0x1B
0001 5B324A    1552            db '[2J'
0004 00        1553            db 0x00
0005           1554   __str_1:
0005 53717561  1555            db 'Square wave generator for the EFM8LB1.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204546
     4D384C42
     312E
002B 0D        1556            db 0x0D
002C 0A        1557            db 0x0A
002D 43686563  1558            db 'Check pins P2.2 and '
     6B207069
     6E732050
     322E3220
     616E6420
0041 50322E31  1559            db 'P2.1 with the oscilloscope.'
     20776974
     68207468
     65206F73
     63696C6C
     6F73636F
     70652E
005C 0D        1560            db 0x0D
005D 0A        1561            db 0x0A
005E 00        1562            db 0x00
005F           1563   __str_2:
005F 0A        1564            db 0x0A
0060 00        1565            db 0x00
0061           1566   __str_3:
0061 09        1567            db 0x09
0062 09        1568            db 0x09
0063 09        1569            db 0x09
0064 70657269  1570            db 'period: =%f '
     6F643A20
     3D256620
0070 0A        1571            db 0x0A
0071 00        1572            db 0x00
0072           1573   __str_4:
0072 09        1574            db 0x09
0073 09        1575            db 0x09
0074 09        1576            db 0x09
0075 7065616B  1577            db 'peak of reference: =%f '
     206F6620
     72656665
     72656E63
     653A203D
     256620
008C 0A        1578            db 0x0A
008D 00        1579            db 0x00
008E           1580   
002E           1581            CSEG
002E           1582   
002E           1583   end
