0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1069 (Apr 23 2015) (MSVC)
0000              4   ; This file was generated Sun Mar 25 09:56:22 2018
0000              5   ;--------------------------------------------------------
                  5   $name robotControl
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _InitPinADC_PARM_2
0000             28            public _main
0000             29            public _periodcalc
0000             30            public _PWMRight
0000             31            public _PWMLeft
0000             32            public _PWMback
0000             33            public _PWMStraight
0000             34            public _InitPinADC
0000             35            public _Volts_at_Pin
0000             36            public _TIMER0_Init
0000             37            public _InitADC
0000             38            public _Timer2_ISR
0000             39            public _ADC_at_Pin
0000             40            public _waitms
0000             41            public _Timer3us
0000             42            public __c51_external_startup
0000             43            public _claw_flag
0000             44            public _flag
0000             45            public _cartMoveB
0000             46            public _cartMoveF
0000             47            public _pwmSig6
0000             48            public _pwmSig5
0000             49            public _pwmSig4
0000             50            public _pwmSig3
0000             51            public _pwmSig2
0000             52            public _pwmSig1
0000             53            public _pwm_count3
0000             54            public _pwm_count2
0000             55            public _pwm_count1
0000             56            public _pwm_count
0000             57   ;--------------------------------------------------------
0000             58   ; Special Function Registers
0000             59   ;--------------------------------------------------------
0000             60   _ACC            DATA 0xe0
0000             61   _ADC0ASAH       DATA 0xb6
0000             62   _ADC0ASAL       DATA 0xb5
0000             63   _ADC0ASCF       DATA 0xa1
0000             64   _ADC0ASCT       DATA 0xc7
0000             65   _ADC0CF0        DATA 0xbc
0000             66   _ADC0CF1        DATA 0xb9
0000             67   _ADC0CF2        DATA 0xdf
0000             68   _ADC0CN0        DATA 0xe8
0000             69   _ADC0CN1        DATA 0xb2
0000             70   _ADC0CN2        DATA 0xb3
0000             71   _ADC0GTH        DATA 0xc4
0000             72   _ADC0GTL        DATA 0xc3
0000             73   _ADC0H          DATA 0xbe
0000             74   _ADC0L          DATA 0xbd
0000             75   _ADC0LTH        DATA 0xc6
0000             76   _ADC0LTL        DATA 0xc5
0000             77   _ADC0MX         DATA 0xbb
0000             78   _B              DATA 0xf0
0000             79   _CKCON0         DATA 0x8e
0000             80   _CKCON1         DATA 0xa6
0000             81   _CLEN0          DATA 0xc6
0000             82   _CLIE0          DATA 0xc7
0000             83   _CLIF0          DATA 0xe8
0000             84   _CLKSEL         DATA 0xa9
0000             85   _CLOUT0         DATA 0xd1
0000             86   _CLU0CF         DATA 0xb1
0000             87   _CLU0FN         DATA 0xaf
0000             88   _CLU0MX         DATA 0x84
0000             89   _CLU1CF         DATA 0xb3
0000             90   _CLU1FN         DATA 0xb2
0000             91   _CLU1MX         DATA 0x85
0000             92   _CLU2CF         DATA 0xb6
0000             93   _CLU2FN         DATA 0xb5
0000             94   _CLU2MX         DATA 0x91
0000             95   _CLU3CF         DATA 0xbf
0000             96   _CLU3FN         DATA 0xbe
0000             97   _CLU3MX         DATA 0xae
0000             98   _CMP0CN0        DATA 0x9b
0000             99   _CMP0CN1        DATA 0x99
0000            100   _CMP0MD         DATA 0x9d
0000            101   _CMP0MX         DATA 0x9f
0000            102   _CMP1CN0        DATA 0xbf
0000            103   _CMP1CN1        DATA 0xac
0000            104   _CMP1MD         DATA 0xab
0000            105   _CMP1MX         DATA 0xaa
0000            106   _CRC0CN0        DATA 0xce
0000            107   _CRC0CN1        DATA 0x86
0000            108   _CRC0CNT        DATA 0xd3
0000            109   _CRC0DAT        DATA 0xcb
0000            110   _CRC0FLIP       DATA 0xcf
0000            111   _CRC0IN         DATA 0xca
0000            112   _CRC0ST         DATA 0xd2
0000            113   _DAC0CF0        DATA 0x91
0000            114   _DAC0CF1        DATA 0x92
0000            115   _DAC0H          DATA 0x85
0000            116   _DAC0L          DATA 0x84
0000            117   _DAC1CF0        DATA 0x93
0000            118   _DAC1CF1        DATA 0x94
0000            119   _DAC1H          DATA 0x8a
0000            120   _DAC1L          DATA 0x89
0000            121   _DAC2CF0        DATA 0x95
0000            122   _DAC2CF1        DATA 0x96
0000            123   _DAC2H          DATA 0x8c
0000            124   _DAC2L          DATA 0x8b
0000            125   _DAC3CF0        DATA 0x9a
0000            126   _DAC3CF1        DATA 0x9c
0000            127   _DAC3H          DATA 0x8e
0000            128   _DAC3L          DATA 0x8d
0000            129   _DACGCF0        DATA 0x88
0000            130   _DACGCF1        DATA 0x98
0000            131   _DACGCF2        DATA 0xa2
0000            132   _DERIVID        DATA 0xad
0000            133   _DEVICEID       DATA 0xb5
0000            134   _DPH            DATA 0x83
0000            135   _DPL            DATA 0x82
0000            136   _EIE1           DATA 0xe6
0000            137   _EIE2           DATA 0xf3
0000            138   _EIP1           DATA 0xbb
0000            139   _EIP1H          DATA 0xee
0000            140   _EIP2           DATA 0xed
0000            141   _EIP2H          DATA 0xf6
0000            142   _EMI0CN         DATA 0xe7
0000            143   _FLKEY          DATA 0xb7
0000            144   _HFO0CAL        DATA 0xc7
0000            145   _HFO1CAL        DATA 0xd6
0000            146   _HFOCN          DATA 0xef
0000            147   _I2C0ADM        DATA 0xff
0000            148   _I2C0CN0        DATA 0xba
0000            149   _I2C0DIN        DATA 0xbc
0000            150   _I2C0DOUT       DATA 0xbb
0000            151   _I2C0FCN0       DATA 0xad
0000            152   _I2C0FCN1       DATA 0xab
0000            153   _I2C0FCT        DATA 0xf5
0000            154   _I2C0SLAD       DATA 0xbd
0000            155   _I2C0STAT       DATA 0xb9
0000            156   _IE             DATA 0xa8
0000            157   _IP             DATA 0xb8
0000            158   _IPH            DATA 0xf2
0000            159   _IT01CF         DATA 0xe4
0000            160   _LFO0CN         DATA 0xb1
0000            161   _P0             DATA 0x80
0000            162   _P0MASK         DATA 0xfe
0000            163   _P0MAT          DATA 0xfd
0000            164   _P0MDIN         DATA 0xf1
0000            165   _P0MDOUT        DATA 0xa4
0000            166   _P0SKIP         DATA 0xd4
0000            167   _P1             DATA 0x90
0000            168   _P1MASK         DATA 0xee
0000            169   _P1MAT          DATA 0xed
0000            170   _P1MDIN         DATA 0xf2
0000            171   _P1MDOUT        DATA 0xa5
0000            172   _P1SKIP         DATA 0xd5
0000            173   _P2             DATA 0xa0
0000            174   _P2MASK         DATA 0xfc
0000            175   _P2MAT          DATA 0xfb
0000            176   _P2MDIN         DATA 0xf3
0000            177   _P2MDOUT        DATA 0xa6
0000            178   _P2SKIP         DATA 0xcc
0000            179   _P3             DATA 0xb0
0000            180   _P3MDIN         DATA 0xf4
0000            181   _P3MDOUT        DATA 0x9c
0000            182   _PCA0CENT       DATA 0x9e
0000            183   _PCA0CLR        DATA 0x9c
0000            184   _PCA0CN0        DATA 0xd8
0000            185   _PCA0CPH0       DATA 0xfc
0000            186   _PCA0CPH1       DATA 0xea
0000            187   _PCA0CPH2       DATA 0xec
0000            188   _PCA0CPH3       DATA 0xf5
0000            189   _PCA0CPH4       DATA 0x85
0000            190   _PCA0CPH5       DATA 0xde
0000            191   _PCA0CPL0       DATA 0xfb
0000            192   _PCA0CPL1       DATA 0xe9
0000            193   _PCA0CPL2       DATA 0xeb
0000            194   _PCA0CPL3       DATA 0xf4
0000            195   _PCA0CPL4       DATA 0x84
0000            196   _PCA0CPL5       DATA 0xdd
0000            197   _PCA0CPM0       DATA 0xda
0000            198   _PCA0CPM1       DATA 0xdb
0000            199   _PCA0CPM2       DATA 0xdc
0000            200   _PCA0CPM3       DATA 0xae
0000            201   _PCA0CPM4       DATA 0xaf
0000            202   _PCA0CPM5       DATA 0xcc
0000            203   _PCA0H          DATA 0xfa
0000            204   _PCA0L          DATA 0xf9
0000            205   _PCA0MD         DATA 0xd9
0000            206   _PCA0POL        DATA 0x96
0000            207   _PCA0PWM        DATA 0xf7
0000            208   _PCON0          DATA 0x87
0000            209   _PCON1          DATA 0xcd
0000            210   _PFE0CN         DATA 0xc1
0000            211   _PRTDRV         DATA 0xf6
0000            212   _PSCTL          DATA 0x8f
0000            213   _PSTAT0         DATA 0xaa
0000            214   _PSW            DATA 0xd0
0000            215   _REF0CN         DATA 0xd1
0000            216   _REG0CN         DATA 0xc9
0000            217   _REVID          DATA 0xb6
0000            218   _RSTSRC         DATA 0xef
0000            219   _SBCON1         DATA 0x94
0000            220   _SBRLH1         DATA 0x96
0000            221   _SBRLL1         DATA 0x95
0000            222   _SBUF           DATA 0x99
0000            223   _SBUF0          DATA 0x99
0000            224   _SBUF1          DATA 0x92
0000            225   _SCON           DATA 0x98
0000            226   _SCON0          DATA 0x98
0000            227   _SCON1          DATA 0xc8
0000            228   _SFRPAGE        DATA 0xa7
0000            229   _SFRPGCN        DATA 0xbc
0000            230   _SFRSTACK       DATA 0xd7
0000            231   _SMB0ADM        DATA 0xd6
0000            232   _SMB0ADR        DATA 0xd7
0000            233   _SMB0CF         DATA 0xc1
0000            234   _SMB0CN0        DATA 0xc0
0000            235   _SMB0DAT        DATA 0xc2
0000            236   _SMB0FCN0       DATA 0xc3
0000            237   _SMB0FCN1       DATA 0xc4
0000            238   _SMB0FCT        DATA 0xef
0000            239   _SMB0RXLN       DATA 0xc5
0000            240   _SMB0TC         DATA 0xac
0000            241   _SMOD1          DATA 0x93
0000            242   _SP             DATA 0x81
0000            243   _SPI0CFG        DATA 0xa1
0000            244   _SPI0CKR        DATA 0xa2
0000            245   _SPI0CN0        DATA 0xf8
0000            246   _SPI0DAT        DATA 0xa3
0000            247   _SPI0FCN0       DATA 0x9a
0000            248   _SPI0FCN1       DATA 0x9b
0000            249   _SPI0FCT        DATA 0xf7
0000            250   _SPI0PCF        DATA 0xdf
0000            251   _TCON           DATA 0x88
0000            252   _TH0            DATA 0x8c
0000            253   _TH1            DATA 0x8d
0000            254   _TL0            DATA 0x8a
0000            255   _TL1            DATA 0x8b
0000            256   _TMOD           DATA 0x89
0000            257   _TMR2CN0        DATA 0xc8
0000            258   _TMR2CN1        DATA 0xfd
0000            259   _TMR2H          DATA 0xcf
0000            260   _TMR2L          DATA 0xce
0000            261   _TMR2RLH        DATA 0xcb
0000            262   _TMR2RLL        DATA 0xca
0000            263   _TMR3CN0        DATA 0x91
0000            264   _TMR3CN1        DATA 0xfe
0000            265   _TMR3H          DATA 0x95
0000            266   _TMR3L          DATA 0x94
0000            267   _TMR3RLH        DATA 0x93
0000            268   _TMR3RLL        DATA 0x92
0000            269   _TMR4CN0        DATA 0x98
0000            270   _TMR4CN1        DATA 0xff
0000            271   _TMR4H          DATA 0xa5
0000            272   _TMR4L          DATA 0xa4
0000            273   _TMR4RLH        DATA 0xa3
0000            274   _TMR4RLL        DATA 0xa2
0000            275   _TMR5CN0        DATA 0xc0
0000            276   _TMR5CN1        DATA 0xf1
0000            277   _TMR5H          DATA 0xd5
0000            278   _TMR5L          DATA 0xd4
0000            279   _TMR5RLH        DATA 0xd3
0000            280   _TMR5RLL        DATA 0xd2
0000            281   _UART0PCF       DATA 0xd9
0000            282   _UART1FCN0      DATA 0x9d
0000            283   _UART1FCN1      DATA 0xd8
0000            284   _UART1FCT       DATA 0xfa
0000            285   _UART1LIN       DATA 0x9e
0000            286   _UART1PCF       DATA 0xda
0000            287   _VDM0CN         DATA 0xff
0000            288   _WDTCN          DATA 0x97
0000            289   _XBR0           DATA 0xe1
0000            290   _XBR1           DATA 0xe2
0000            291   _XBR2           DATA 0xe3
0000            292   _XOSC0CN        DATA 0x86
0000            293   _DPTR           DATA 0x8382
0000            294   _TMR2RL         DATA 0xcbca
0000            295   _TMR3RL         DATA 0x9392
0000            296   _TMR4RL         DATA 0xa3a2
0000            297   _TMR5RL         DATA 0xd3d2
0000            298   _TMR0           DATA 0x8c8a
0000            299   _TMR1           DATA 0x8d8b
0000            300   _TMR2           DATA 0xcfce
0000            301   _TMR3           DATA 0x9594
0000            302   _TMR4           DATA 0xa5a4
0000            303   _TMR5           DATA 0xd5d4
0000            304   _SBRL1          DATA 0x9695
0000            305   _PCA0           DATA 0xfaf9
0000            306   _PCA0CP0        DATA 0xfcfb
0000            307   _PCA0CP1        DATA 0xeae9
0000            308   _PCA0CP2        DATA 0xeceb
0000            309   _PCA0CP3        DATA 0xf5f4
0000            310   _PCA0CP4        DATA 0x8584
0000            311   _PCA0CP5        DATA 0xdedd
0000            312   _ADC0ASA        DATA 0xb6b5
0000            313   _ADC0GT         DATA 0xc4c3
0000            314   _ADC0           DATA 0xbebd
0000            315   _ADC0LT         DATA 0xc6c5
0000            316   _DAC0           DATA 0x8584
0000            317   _DAC1           DATA 0x8a89
0000            318   _DAC2           DATA 0x8c8b
0000            319   _DAC3           DATA 0x8e8d
0000            320   ;--------------------------------------------------------
0000            321   ; special function bits
0000            322   ;--------------------------------------------------------
0000            323   _ACC_0          BIT 0xe0
0000            324   _ACC_1          BIT 0xe1
0000            325   _ACC_2          BIT 0xe2
0000            326   _ACC_3          BIT 0xe3
0000            327   _ACC_4          BIT 0xe4
0000            328   _ACC_5          BIT 0xe5
0000            329   _ACC_6          BIT 0xe6
0000            330   _ACC_7          BIT 0xe7
0000            331   _TEMPE          BIT 0xe8
0000            332   _ADGN0          BIT 0xe9
0000            333   _ADGN1          BIT 0xea
0000            334   _ADWINT         BIT 0xeb
0000            335   _ADBUSY         BIT 0xec
0000            336   _ADINT          BIT 0xed
0000            337   _IPOEN          BIT 0xee
0000            338   _ADEN           BIT 0xef
0000            339   _B_0            BIT 0xf0
0000            340   _B_1            BIT 0xf1
0000            341   _B_2            BIT 0xf2
0000            342   _B_3            BIT 0xf3
0000            343   _B_4            BIT 0xf4
0000            344   _B_5            BIT 0xf5
0000            345   _B_6            BIT 0xf6
0000            346   _B_7            BIT 0xf7
0000            347   _C0FIF          BIT 0xe8
0000            348   _C0RIF          BIT 0xe9
0000            349   _C1FIF          BIT 0xea
0000            350   _C1RIF          BIT 0xeb
0000            351   _C2FIF          BIT 0xec
0000            352   _C2RIF          BIT 0xed
0000            353   _C3FIF          BIT 0xee
0000            354   _C3RIF          BIT 0xef
0000            355   _D1SRC0         BIT 0x88
0000            356   _D1SRC1         BIT 0x89
0000            357   _D1AMEN         BIT 0x8a
0000            358   _D01REFSL       BIT 0x8b
0000            359   _D3SRC0         BIT 0x8c
0000            360   _D3SRC1         BIT 0x8d
0000            361   _D3AMEN         BIT 0x8e
0000            362   _D23REFSL       BIT 0x8f
0000            363   _D0UDIS         BIT 0x98
0000            364   _D1UDIS         BIT 0x99
0000            365   _D2UDIS         BIT 0x9a
0000            366   _D3UDIS         BIT 0x9b
0000            367   _EX0            BIT 0xa8
0000            368   _ET0            BIT 0xa9
0000            369   _EX1            BIT 0xaa
0000            370   _ET1            BIT 0xab
0000            371   _ES0            BIT 0xac
0000            372   _ET2            BIT 0xad
0000            373   _ESPI0          BIT 0xae
0000            374   _EA             BIT 0xaf
0000            375   _PX0            BIT 0xb8
0000            376   _PT0            BIT 0xb9
0000            377   _PX1            BIT 0xba
0000            378   _PT1            BIT 0xbb
0000            379   _PS0            BIT 0xbc
0000            380   _PT2            BIT 0xbd
0000            381   _PSPI0          BIT 0xbe
0000            382   _P0_0           BIT 0x80
0000            383   _P0_1           BIT 0x81
0000            384   _P0_2           BIT 0x82
0000            385   _P0_3           BIT 0x83
0000            386   _P0_4           BIT 0x84
0000            387   _P0_5           BIT 0x85
0000            388   _P0_6           BIT 0x86
0000            389   _P0_7           BIT 0x87
0000            390   _P1_0           BIT 0x90
0000            391   _P1_1           BIT 0x91
0000            392   _P1_2           BIT 0x92
0000            393   _P1_3           BIT 0x93
0000            394   _P1_4           BIT 0x94
0000            395   _P1_5           BIT 0x95
0000            396   _P1_6           BIT 0x96
0000            397   _P1_7           BIT 0x97
0000            398   _P2_0           BIT 0xa0
0000            399   _P2_1           BIT 0xa1
0000            400   _P2_2           BIT 0xa2
0000            401   _P2_3           BIT 0xa3
0000            402   _P2_4           BIT 0xa4
0000            403   _P2_5           BIT 0xa5
0000            404   _P2_6           BIT 0xa6
0000            405   _P3_0           BIT 0xb0
0000            406   _P3_1           BIT 0xb1
0000            407   _P3_2           BIT 0xb2
0000            408   _P3_3           BIT 0xb3
0000            409   _P3_4           BIT 0xb4
0000            410   _P3_7           BIT 0xb7
0000            411   _CCF0           BIT 0xd8
0000            412   _CCF1           BIT 0xd9
0000            413   _CCF2           BIT 0xda
0000            414   _CCF3           BIT 0xdb
0000            415   _CCF4           BIT 0xdc
0000            416   _CCF5           BIT 0xdd
0000            417   _CR             BIT 0xde
0000            418   _CF             BIT 0xdf
0000            419   _PARITY         BIT 0xd0
0000            420   _F1             BIT 0xd1
0000            421   _OV             BIT 0xd2
0000            422   _RS0            BIT 0xd3
0000            423   _RS1            BIT 0xd4
0000            424   _F0             BIT 0xd5
0000            425   _AC             BIT 0xd6
0000            426   _CY             BIT 0xd7
0000            427   _RI             BIT 0x98
0000            428   _TI             BIT 0x99
0000            429   _RB8            BIT 0x9a
0000            430   _TB8            BIT 0x9b
0000            431   _REN            BIT 0x9c
0000            432   _CE             BIT 0x9d
0000            433   _SMODE          BIT 0x9e
0000            434   _RI1            BIT 0xc8
0000            435   _TI1            BIT 0xc9
0000            436   _RBX1           BIT 0xca
0000            437   _TBX1           BIT 0xcb
0000            438   _REN1           BIT 0xcc
0000            439   _PERR1          BIT 0xcd
0000            440   _OVR1           BIT 0xce
0000            441   _SI             BIT 0xc0
0000            442   _ACK            BIT 0xc1
0000            443   _ARBLOST        BIT 0xc2
0000            444   _ACKRQ          BIT 0xc3
0000            445   _STO            BIT 0xc4
0000            446   _STA            BIT 0xc5
0000            447   _TXMODE         BIT 0xc6
0000            448   _MASTER         BIT 0xc7
0000            449   _SPIEN          BIT 0xf8
0000            450   _TXNF           BIT 0xf9
0000            451   _NSSMD0         BIT 0xfa
0000            452   _NSSMD1         BIT 0xfb
0000            453   _RXOVRN         BIT 0xfc
0000            454   _MODF           BIT 0xfd
0000            455   _WCOL           BIT 0xfe
0000            456   _SPIF           BIT 0xff
0000            457   _IT0            BIT 0x88
0000            458   _IE0            BIT 0x89
0000            459   _IT1            BIT 0x8a
0000            460   _IE1            BIT 0x8b
0000            461   _TR0            BIT 0x8c
0000            462   _TF0            BIT 0x8d
0000            463   _TR1            BIT 0x8e
0000            464   _TF1            BIT 0x8f
0000            465   _T2XCLK0        BIT 0xc8
0000            466   _T2XCLK1        BIT 0xc9
0000            467   _TR2            BIT 0xca
0000            468   _T2SPLIT        BIT 0xcb
0000            469   _TF2CEN         BIT 0xcc
0000            470   _TF2LEN         BIT 0xcd
0000            471   _TF2L           BIT 0xce
0000            472   _TF2H           BIT 0xcf
0000            473   _T4XCLK0        BIT 0x98
0000            474   _T4XCLK1        BIT 0x99
0000            475   _TR4            BIT 0x9a
0000            476   _T4SPLIT        BIT 0x9b
0000            477   _TF4CEN         BIT 0x9c
0000            478   _TF4LEN         BIT 0x9d
0000            479   _TF4L           BIT 0x9e
0000            480   _TF4H           BIT 0x9f
0000            481   _T5XCLK0        BIT 0xc0
0000            482   _T5XCLK1        BIT 0xc1
0000            483   _TR5            BIT 0xc2
0000            484   _T5SPLIT        BIT 0xc3
0000            485   _TF5CEN         BIT 0xc4
0000            486   _TF5LEN         BIT 0xc5
0000            487   _TF5L           BIT 0xc6
0000            488   _TF5H           BIT 0xc7
0000            489   _RIE            BIT 0xd8
0000            490   _RXTO0          BIT 0xd9
0000            491   _RXTO1          BIT 0xda
0000            492   _RFRQ           BIT 0xdb
0000            493   _TIE            BIT 0xdc
0000            494   _TXHOLD         BIT 0xdd
0000            495   _TXNF1          BIT 0xde
0000            496   _TFRQ           BIT 0xdf
0000            497   ;--------------------------------------------------------
0000            498   ; overlayable register banks
0000            499   ;--------------------------------------------------------
0000            500            rbank0 segment data overlay
0000            501   ;--------------------------------------------------------
0000            502   ; internal ram data
0000            503   ;--------------------------------------------------------
0000            504            rseg R_DSEG
0000            505   _pwm_count:
0000            506            ds 1
0001            507   _pwm_count1:
0001            508            ds 1
0002            509   _pwm_count2:
0002            510            ds 1
0003            511   _pwm_count3:
0003            512            ds 1
0004            513   _pwmSig1:
0004            514            ds 2
0006            515   _pwmSig2:
0006            516            ds 2
0008            517   _pwmSig3:
0008            518            ds 2
000A            519   _pwmSig4:
000A            520            ds 2
000C            521   _pwmSig5:
000C            522            ds 2
000E            523   _pwmSig6:
000E            524            ds 2
0010            525   _cartMoveF:
0010            526            ds 2
0012            527   _cartMoveB:
0012            528            ds 2
0014            529   _flag:
0014            530            ds 2
0016            531   _claw_flag:
0016            532            ds 2
0018            533   _main_v_1_75:
0018            534            ds 6
001E            535   ;--------------------------------------------------------
001E            536   ; overlayable items in internal ram 
001E            537   ;--------------------------------------------------------
0000            538            rseg    R_OSEG
0000            539            rseg    R_OSEG
0000            540            rseg    R_OSEG
0000            541   _InitPinADC_PARM_2:
0000            542            ds 1
0001            543   ;--------------------------------------------------------
0001            544   ; indirectly addressable internal ram data
0001            545   ;--------------------------------------------------------
0000            546            rseg R_ISEG
0000            547   ;--------------------------------------------------------
0000            548   ; absolute internal ram data
0000            549   ;--------------------------------------------------------
0000            550            DSEG
0000            551   ;--------------------------------------------------------
0000            552   ; bit data
0000            553   ;--------------------------------------------------------
0000            554            rseg R_BSEG
0000            555   _Timer2_ISR_sloc0_1_0:
0000            556            DBIT    1
0001            557   ;--------------------------------------------------------
0001            558   ; paged external ram data
0001            559   ;--------------------------------------------------------
0000            560            rseg R_PSEG
0000            561   ;--------------------------------------------------------
0000            562   ; external ram data
0000            563   ;--------------------------------------------------------
0000            564            rseg R_XSEG
0000            565   ;--------------------------------------------------------
0000            566   ; absolute external ram data
0000            567   ;--------------------------------------------------------
0000            568            XSEG
0000            569   ;--------------------------------------------------------
0000            570   ; external initialized ram data
0000            571   ;--------------------------------------------------------
0000            572            rseg R_IXSEG
0000            573            rseg R_HOME
0000            574            rseg R_GSINIT
0000            575            rseg R_CSEG
0000            576   ;--------------------------------------------------------
0000            577   ; Reset entry point and interrupt vectors
0000            578   ;--------------------------------------------------------
0000            579            CSEG at 0x0000
0000 020100     580            ljmp    _crt0
002B            581            CSEG at 0x002b
002B 020100     582            ljmp    _Timer2_ISR
002E            583   ;--------------------------------------------------------
002E            584   ; global & static initialisations
002E            585   ;--------------------------------------------------------
0000            586            rseg R_HOME
0000            587            rseg R_GSINIT
0000            588            rseg R_GSINIT
0000            589   ;--------------------------------------------------------
0000            590   ; data variables initialization
0000            591   ;--------------------------------------------------------
0000            592            rseg R_DINIT
0000            593   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:39: volatile unsigned char pwm_count = 0; // used in the timer 2 ISR
0000 75A000     594            mov     _pwm_count,#0x00
0003            595   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:40: volatile unsigned char pwm_count1 = 0; // this will be usec in the timer 3 ISR
0003 756000     596            mov     _pwm_count1,#0x00
0006            597   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:41: volatile unsigned char pwm_count2 = 0; // this will be used in the timer 4 ISR
0006 752000     598            mov     _pwm_count2,#0x00
0009            599   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:42: volatile unsigned char pwm_count3 = 0; //
0009 75E000     600            mov     _pwm_count3,#0x00
000C            601   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:57: volatile int flag = 0;
000C E4         602            clr     a
000D F5A0       603            mov     _flag,a
000F F5A1       604            mov     (_flag + 1),a
0011            605   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:58: volatile int claw_flag = 0;
0011 E4         606            clr     a
0012 F560       607            mov     _claw_flag,a
0014 F561       608            mov     (_claw_flag + 1),a
0016            609            ; The linker places a 'ret' at the end of segment R_DINIT.
0016            610   ;--------------------------------------------------------
0016            611   ; code
0016            612   ;--------------------------------------------------------
0000            613            rseg R_CSEG
0000            614   ;------------------------------------------------------------
0000            615   ;Allocation info for local variables in function '_c51_external_startup'
0000            616   ;------------------------------------------------------------
0000            617   ;------------------------------------------------------------
0000            618   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:60: char _c51_external_startup(void)
0000            619   ;        -----------------------------------------
0000            620   ;         function _c51_external_startup
0000            621   ;        -----------------------------------------
0000            622   __c51_external_startup:
0000            623            using   0
0000            624   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:63: SFRPAGE = 0x00;
0000 75A700     625            mov     _SFRPAGE,#0x00
0003            626   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:64: WDTCN = 0xDE; //First key
0003 7597DE     627            mov     _WDTCN,#0xDE
0006            628   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:65: WDTCN = 0xAD; //Second key
0006 7597AD     629            mov     _WDTCN,#0xAD
0009            630   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:67: VDM0CN = 0x80;       // enable VDD monitor
0009 75FF80     631            mov     _VDM0CN,#0x80
000C            632   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:68: RSTSRC = 0x02 | 0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     633            mov     _RSTSRC,#0x06
000F            634   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:75: SFRPAGE = 0x10;
000F 75A710     635            mov     _SFRPAGE,#0x10
0012            636   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:76: PFE0CN = 0x20; // SYSCLK < 75 MHz.
0012 75C120     637            mov     _PFE0CN,#0x20
0015            638   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:77: SFRPAGE = 0x00;
0015 75A700     639            mov     _SFRPAGE,#0x00
0018            640   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:98: CLKSEL = 0x00;
0018 75A900     641            mov     _CLKSEL,#0x00
001B            642   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:99: CLKSEL = 0x00;
001B 75A900     643            mov     _CLKSEL,#0x00
001E            644   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:100: while ((CLKSEL & 0x80) == 0);
001E            645   L002001?:
001E E5A9       646            mov     a,_CLKSEL
0020 30E790     647            jnb     acc.7,L002001?
0023            648   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:101: CLKSEL = 0x03;
0023 75A903     649            mov     _CLKSEL,#0x03
0026            650   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:102: CLKSEL = 0x03;
0026 75A903     651            mov     _CLKSEL,#0x03
0029            652   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:103: while ((CLKSEL & 0x80) == 0);
0029            653   L002004?:
0029 E5A9       654            mov     a,_CLKSEL
002B 30E710     655            jnb     acc.7,L002004?
002E            656   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:108: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     657            orl     _P0MDOUT,#0x10
0031            658   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:109: XBR0 = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)
0031 75E101     659            mov     _XBR0,#0x01
0034            660   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:110: XBR1 = 0X00;
0034 75E200     661            mov     _XBR1,#0x00
0037            662   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:111: XBR2 = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     663            mov     _XBR2,#0x40
003A            664   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:117: SCON0 = 0x10;
003A 759810     665            mov     _SCON0,#0x10
003D            666   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:118: TH1 = 0x100 - ((SYSCLK / BAUDRATE) / (2L * 12L));
003D 758DE6     667            mov     _TH1,#0xE6
0040            668   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:119: TL1 = TH1;      // Init Timer1
0040 858D8B     669            mov     _TL1,_TH1
0043            670   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:120: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0043 53890F     671            anl     _TMOD,#0x0F
0046            672   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:121: TMOD |= 0x20;
0046 438920     673            orl     _TMOD,#0x20
0049            674   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:122: TR1 = 1; // START Timer1
0049 D28E       675            setb    _TR1
004B            676   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:123: TI = 1;  // Indicate TX0 ready
004B D299       677            setb    _TI
004D            678   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:126: TMR2CN0 = 0x00;   // Stop Timer2; Clear TF2;
004D 75C800     679            mov     _TMR2CN0,#0x00
0050            680   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:127: CKCON0 |= 0b_0001_0000; // Timer 2 uses the system clock
0050 438E10     681            orl     _CKCON0,#0x10
0053            682   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:128: TMR2RL = (0x10000L - (SYSCLK / 10000L)); // Initialize reload value
0053 75CAE0     683            mov     _TMR2RL,#0xE0
0056 75CBE3     684            mov     (_TMR2RL >> 8),#0xE3
0059            685   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:129: TMR2 = 0xffff;   // Set to reload immediately
0059 75CEFF     686            mov     _TMR2,#0xFF
005C 75CFFF     687            mov     (_TMR2 >> 8),#0xFF
005F            688   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:130: ET2 = 1;         // Enable Timer2 interrupts
005F D2AD       689            setb    _ET2
0061            690   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:131: TR2 = 1;         // Start Timer2 (TMR2CN is bit addressable)
0061 D2CA       691            setb    _TR2
0063            692   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:147: EA = 1; // Enable interrupts
0063 D2AF       693            setb    _EA
0065            694   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:150: return 0;
0065 758200     695            mov     dpl,#0x00
0068 22         696            ret
0069            697   ;------------------------------------------------------------
0069            698   ;Allocation info for local variables in function 'Timer3us'
0069            699   ;------------------------------------------------------------
0069            700   ;us                        Allocated to registers r2 r3 
0069            701   ;i                         Allocated to registers r4 r5 
0069            702   ;------------------------------------------------------------
0069            703   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:152: void Timer3us(unsigned int us)
0069            704   ;        -----------------------------------------
0069            705   ;         function Timer3us
0069            706   ;        -----------------------------------------
0069            707   _Timer3us:
0069 AA82       708            mov     r2,dpl
006B AB83       709            mov     r3,dph
006D            710   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:157: CKCON0|=0b_0100_0000;
006D 438E40     711            orl     _CKCON0,#0x40
0070            712   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:159: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0070 7592B8     713            mov     _TMR3RL,#0xB8
0073 7593FF     714            mov     (_TMR3RL >> 8),#0xFF
0076            715   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:160: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0076 859294     716            mov     _TMR3,_TMR3RL
0079 859395     717            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007C            718   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:162: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007C 759104     719            mov     _TMR3CN0,#0x04
007F            720   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:163: for (i = 0; i < us; i++)       // Count <us> overflows
007F 7C00       721            mov     r4,#0x00
0081 7D00       722            mov     r5,#0x00
0083            723   L003004?:
0083 C3         724            clr     c
0084 EC         725            mov     a,r4
0085 9A         726            subb    a,r2
0086 ED         727            mov     a,r5
0087 9B         728            subb    a,r3
0088 5001       729            jnc     L003007?
008A            730   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:165: while (!(TMR3CN0 & 0x80));  // Wait for overflow
008A            731   L003001?:
008A E591       732            mov     a,_TMR3CN0
008C 30E750     733            jnb     acc.7,L003001?
008F            734   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:166: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008F 53917F     735            anl     _TMR3CN0,#0x7F
0092            736   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:163: for (i = 0; i < us; i++)       // Count <us> overflows
0092 0C         737            inc     r4
0093 BC00D0     738            cjne    r4,#0x00,L003004?
0096 0D         739            inc     r5
0097 8001       740            sjmp    L003004?
0099            741   L003007?:
0099            742   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:168: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0099 759100     743            mov     _TMR3CN0,#0x00
009C 22         744            ret
009D            745   ;------------------------------------------------------------
009D            746   ;Allocation info for local variables in function 'waitms'
009D            747   ;------------------------------------------------------------
009D            748   ;ms                        Allocated to registers r2 r3 
009D            749   ;j                         Allocated to registers r4 r5 
009D            750   ;k                         Allocated to registers r6 
009D            751   ;------------------------------------------------------------
009D            752   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:170: void waitms (unsigned int ms)
009D            753   ;        -----------------------------------------
009D            754   ;         function waitms
009D            755   ;        -----------------------------------------
009D            756   _waitms:
009D AA82       757            mov     r2,dpl
009F AB83       758            mov     r3,dph
00A1            759   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:174: for(j=0; j<ms; j++)
00A1 7C00       760            mov     r4,#0x00
00A3 7D00       761            mov     r5,#0x00
00A5            762   L004005?:
00A5 C3         763            clr     c
00A6 EC         764            mov     a,r4
00A7 9A         765            subb    a,r2
00A8 ED         766            mov     a,r5
00A9 9B         767            subb    a,r3
00AA 5001       768            jnc     L004009?
00AC            769   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:175: for (k=0; k<4; k++) Timer3us(250);
00AC 7E00       770            mov     r6,#0x00
00AE            771   L004001?:
00AE BE0450     772            cjne    r6,#0x04,L004018?
00B1            773   L004018?:
00B1 5001       774            jnc     L004007?
00B3 9000FA     775            mov     dptr,#0x00FA
00B6 C002       776            push    ar2
00B8 C003       777            push    ar3
00BA C004       778            push    ar4
00BC C005       779            push    ar5
00BE C006       780            push    ar6
00C0 120100     781            lcall   _Timer3us
00C3 D006       782            pop     ar6
00C5 D005       783            pop     ar5
00C7 D004       784            pop     ar4
00C9 D003       785            pop     ar3
00CB D002       786            pop     ar2
00CD 0E         787            inc     r6
00CE 8001       788            sjmp    L004001?
00D0            789   L004007?:
00D0            790   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:174: for(j=0; j<ms; j++)
00D0 0C         791            inc     r4
00D1 BC0090     792            cjne    r4,#0x00,L004005?
00D4 0D         793            inc     r5
00D5 8001       794            sjmp    L004005?
00D7            795   L004009?:
00D7 22         796            ret
00D8            797   ;------------------------------------------------------------
00D8            798   ;Allocation info for local variables in function 'ADC_at_Pin'
00D8            799   ;------------------------------------------------------------
00D8            800   ;pin                       Allocated to registers 
00D8            801   ;------------------------------------------------------------
00D8            802   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:178: unsigned int ADC_at_Pin(unsigned char pin)
00D8            803   ;        -----------------------------------------
00D8            804   ;         function ADC_at_Pin
00D8            805   ;        -----------------------------------------
00D8            806   _ADC_at_Pin:
00D8 8582BB     807            mov     _ADC0MX,dpl
00DB            808   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:181: ADBUSY = 1;       // Dummy conversion first to select new pin
00DB D2EC       809            setb    _ADBUSY
00DD            810   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:182: while (ADBUSY); // Wait for dummy conversion to finish
00DD            811   L005001?:
00DD 20ECD0     812            jb      _ADBUSY,L005001?
00E0            813   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:183: ADBUSY = 1;     // Convert voltage at the pin
00E0 D2EC       814            setb    _ADBUSY
00E2            815   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:184: while (ADBUSY); // Wait for conversion to complete
00E2            816   L005004?:
00E2 20EC10     817            jb      _ADBUSY,L005004?
00E5            818   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:185: return (ADC0);
00E5 85BD82     819            mov     dpl,_ADC0
00E8 85BE83     820            mov     dph,(_ADC0 >> 8)
00EB 22         821            ret
00EC            822   ;------------------------------------------------------------
00EC            823   ;Allocation info for local variables in function 'Timer2_ISR'
00EC            824   ;------------------------------------------------------------
00EC            825   ;------------------------------------------------------------
00EC            826   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:189: void Timer2_ISR(void) interrupt 5
00EC            827   ;        -----------------------------------------
00EC            828   ;         function Timer2_ISR
00EC            829   ;        -----------------------------------------
00EC            830   _Timer2_ISR:
00EC C0E0       831            push    acc
00EE C002       832            push    ar2
00F0 C003       833            push    ar3
00F2 C0D0       834            push    psw
00F4 75D000     835            mov     psw,#0x00
00F7            836   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:191: TF2H = 0; // Clear Timer2 interrupt flag
00F7 C2CF       837            clr     _TF2H
00F9            838   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:193: pwm_count++;
00F9 05A0       839            inc     _pwm_count
00FB            840   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:194: if (pwm_count>100)
00FB E5A0       841            mov     a,_pwm_count
00FD 249B       842            add     a,#0xff - 0x64
00FF 5001       843            jnc     L006002?
0101            844   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:195: pwm_count = 0;
0101 75A000     845            mov     _pwm_count,#0x00
0104            846   L006002?:
0104            847   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:198: motorR1 = pwm_count>pwmSig1 ? 0 : 1;
0104 AAA0       848            mov     r2,_pwm_count
0106 7B00       849            mov     r3,#0x00
0108 C3         850            clr     c
0109 E5A0       851            mov     a,_pwmSig1
010B 9A         852            subb    a,r2
010C E5A1       853            mov     a,(_pwmSig1 + 1)
010E 9B         854            subb    a,r3
010F 9210       855            mov  _Timer2_ISR_sloc0_1_0,c
0111 B3         856            cpl     c
0112 92A2       857            mov     _P2_2,c
0114            858   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:199: motorR2 = pwm_count>pwmSig2 ? 0 : 1;
0114 AAA0       859            mov     r2,_pwm_count
0116 7B00       860            mov     r3,#0x00
0118 C3         861            clr     c
0119 E560       862            mov     a,_pwmSig2
011B 9A         863            subb    a,r2
011C E561       864            mov     a,(_pwmSig2 + 1)
011E 9B         865            subb    a,r3
011F 9210       866            mov  _Timer2_ISR_sloc0_1_0,c
0121 B3         867            cpl     c
0122 92A1       868            mov     _P2_1,c
0124            869   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:201: motorL1 = pwm_count>pwmSig3 ? 0 : 1;
0124 AAA0       870            mov     r2,_pwm_count
0126 7B00       871            mov     r3,#0x00
0128 C3         872            clr     c
0129 E520       873            mov     a,_pwmSig3
012B 9A         874            subb    a,r2
012C E521       875            mov     a,(_pwmSig3 + 1)
012E 9B         876            subb    a,r3
012F 9210       877            mov  _Timer2_ISR_sloc0_1_0,c
0131 B3         878            cpl     c
0132 92A3       879            mov     _P2_3,c
0134            880   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:202: motorL2 = pwm_count>pwmSig4 ? 0 : 1;
0134 AAA0       881            mov     r2,_pwm_count
0136 7B00       882            mov     r3,#0x00
0138 C3         883            clr     c
0139 E5E0       884            mov     a,_pwmSig4
013B 9A         885            subb    a,r2
013C E5E1       886            mov     a,(_pwmSig4 + 1)
013E 9B         887            subb    a,r3
013F 9210       888            mov  _Timer2_ISR_sloc0_1_0,c
0141 B3         889            cpl     c
0142 92A4       890            mov     _P2_4,c
0144 D0D0       891            pop     psw
0146 D003       892            pop     ar3
0148 D002       893            pop     ar2
014A D0E0       894            pop     acc
014C 32         895            reti
014D            896   ;        eliminated unneeded push/pop dpl
014D            897   ;        eliminated unneeded push/pop dph
014D            898   ;        eliminated unneeded push/pop b
014D            899   ;------------------------------------------------------------
014D            900   ;Allocation info for local variables in function 'InitADC'
014D            901   ;------------------------------------------------------------
014D            902   ;------------------------------------------------------------
014D            903   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:232: void InitADC(void)
014D            904   ;        -----------------------------------------
014D            905   ;         function InitADC
014D            906   ;        -----------------------------------------
014D            907   _InitADC:
014D            908   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:234: SFRPAGE = 0x00;
014D 75A700     909            mov     _SFRPAGE,#0x00
0150            910   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:235: ADC0CN1 = 0b_10_000_000; //14-bit,  Right justified no shifting applied, perform and Accumulate 1 conversion.
0150 75B280     911            mov     _ADC0CN1,#0x80
0153            912   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:236: ADC0CF0 = 0b_11111_0_00; // SYSCLK/32
0153 75BCF8     913            mov     _ADC0CF0,#0xF8
0156            914   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:237: ADC0CF1 = 0b_0_0_011110; // Same as default for now
0156 75B91E     915            mov     _ADC0CF1,#0x1E
0159            916   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:238: ADC0CN0 = 0b_0_0_0_0_0_00_0; // Same as default for now
0159 75E800     917            mov     _ADC0CN0,#0x00
015C            918   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:239: ADC0CF2 = 0b_0_01_11111; // GND pin, Vref=VDD
015C 75DF3F     919            mov     _ADC0CF2,#0x3F
015F            920   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:240: ADC0CN2 = 0b_0_000_0000;  // Same as default for now. ADC0 conversion initiated on write of 1 to ADBUSY.
015F 75B300     921            mov     _ADC0CN2,#0x00
0162            922   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:241: ADEN = 1; // Enable ADC
0162 D2EF       923            setb    _ADEN
0164 22         924            ret
0165            925   ;------------------------------------------------------------
0165            926   ;Allocation info for local variables in function 'TIMER0_Init'
0165            927   ;------------------------------------------------------------
0165            928   ;------------------------------------------------------------
0165            929   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:243: void TIMER0_Init(void)
0165            930   ;        -----------------------------------------
0165            931   ;         function TIMER0_Init
0165            932   ;        -----------------------------------------
0165            933   _TIMER0_Init:
0165            934   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:245: TMOD &= 0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
0165 5389F0     935            anl     _TMOD,#0xF0
0168            936   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:246: TMOD |= 0b_0000_0001; // Timer/Counter 0 used as a 16-bit timer
0168 438901     937            orl     _TMOD,#0x01
016B            938   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:247: TR0 = 0; // Stop Timer/Counter 0
016B C28C       939            clr     _TR0
016D 22         940            ret
016E            941   ;------------------------------------------------------------
016E            942   ;Allocation info for local variables in function 'Volts_at_Pin'
016E            943   ;------------------------------------------------------------
016E            944   ;pin                       Allocated to registers r2 
016E            945   ;------------------------------------------------------------
016E            946   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:252: float Volts_at_Pin(unsigned char pin)
016E            947   ;        -----------------------------------------
016E            948   ;         function Volts_at_Pin
016E            949   ;        -----------------------------------------
016E            950   _Volts_at_Pin:
016E            951   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:254: return ((ADC_at_Pin(pin)*VDD) / 0b_0011_1111_1111_1111);
016E 120100     952            lcall   _ADC_at_Pin
0171 120100     953            lcall   ___uint2fs
0174 AA82       954            mov     r2,dpl
0176 AB83       955            mov     r3,dph
0178 ACF0       956            mov     r4,b
017A FD         957            mov     r5,a
017B C002       958            push    ar2
017D C003       959            push    ar3
017F C004       960            push    ar4
0181 C005       961            push    ar5
0183 906C8B     962            mov     dptr,#0x6C8B
0186 75F053     963            mov     b,#0x53
0189 7440       964            mov     a,#0x40
018B 120100     965            lcall   ___fsmul
018E AA82       966            mov     r2,dpl
0190 AB83       967            mov     r3,dph
0192 ACF0       968            mov     r4,b
0194 FD         969            mov     r5,a
0195 E581       970            mov     a,sp
0197 24FC       971            add     a,#0xfc
0199 F581       972            mov     sp,a
019B E4         973            clr     a
019C C0E0       974            push    acc
019E 74FC       975            mov     a,#0xFC
01A0 C0E0       976            push    acc
01A2 747F       977            mov     a,#0x7F
01A4 C0E0       978            push    acc
01A6 7446       979            mov     a,#0x46
01A8 C0E0       980            push    acc
01AA 8A82       981            mov     dpl,r2
01AC 8B83       982            mov     dph,r3
01AE 8CF0       983            mov     b,r4
01B0 ED         984            mov     a,r5
01B1 120100     985            lcall   ___fsdiv
01B4 AA82       986            mov     r2,dpl
01B6 AB83       987            mov     r3,dph
01B8 ACF0       988            mov     r4,b
01BA FD         989            mov     r5,a
01BB E581       990            mov     a,sp
01BD 24FC       991            add     a,#0xfc
01BF F581       992            mov     sp,a
01C1 8A82       993            mov     dpl,r2
01C3 8B83       994            mov     dph,r3
01C5 8CF0       995            mov     b,r4
01C7 ED         996            mov     a,r5
01C8 22         997            ret
01C9            998   ;------------------------------------------------------------
01C9            999   ;Allocation info for local variables in function 'InitPinADC'
01C9           1000   ;------------------------------------------------------------
01C9           1001   ;pinno                     Allocated with name '_InitPinADC_PARM_2'
01C9           1002   ;portno                    Allocated to registers r2 
01C9           1003   ;mask                      Allocated to registers r3 
01C9           1004   ;------------------------------------------------------------
01C9           1005   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:256: void InitPinADC(unsigned char portno, unsigned char pinno)
01C9           1006   ;        -----------------------------------------
01C9           1007   ;         function InitPinADC
01C9           1008   ;        -----------------------------------------
01C9           1009   _InitPinADC:
01C9 AA82      1010            mov     r2,dpl
01CB           1011   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:260: mask = 1 << pinno;
01CB 8550F0    1012            mov     b,_InitPinADC_PARM_2
01CE 05F0      1013            inc     b
01D0 7401      1014            mov     a,#0x01
01D2 8001      1015            sjmp    L010013?
01D4           1016   L010011?:
01D4 25E0      1017            add     a,acc
01D6           1018   L010013?:
01D6 D5F050    1019            djnz    b,L010011?
01D9 FB        1020            mov     r3,a
01DA           1021   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:262: SFRPAGE = 0x20;
01DA 75A720    1022            mov     _SFRPAGE,#0x20
01DD           1023   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:263: switch (portno)
01DD BA0090    1024            cjne    r2,#0x00,L010014?
01E0 8001      1025            sjmp    L010001?
01E2           1026   L010014?:
01E2 BA0110    1027            cjne    r2,#0x01,L010015?
01E5 8001      1028            sjmp    L010002?
01E7           1029   L010015?:
01E7           1030   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:265: case 0:
01E7 BA0290    1031            cjne    r2,#0x02,L010005?
01EA 8001      1032            sjmp    L010003?
01EC           1033   L010001?:
01EC           1034   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:266: P0MDIN &= (~mask); // Set pin as analog input
01EC EB        1035            mov     a,r3
01ED F4        1036            cpl     a
01EE FA        1037            mov     r2,a
01EF 52F1      1038            anl     _P0MDIN,a
01F1           1039   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:267: P0SKIP |= mask; // Skip Crossbar decoding for this pin
01F1 EB        1040            mov     a,r3
01F2 42D4      1041            orl     _P0SKIP,a
01F4           1042   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:268: break;
01F4           1043   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:269: case 1:
01F4 8001      1044            sjmp    L010005?
01F6           1045   L010002?:
01F6           1046   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:270: P1MDIN &= (~mask); // Set pin as analog input
01F6 EB        1047            mov     a,r3
01F7 F4        1048            cpl     a
01F8 FA        1049            mov     r2,a
01F9 52F2      1050            anl     _P1MDIN,a
01FB           1051   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:271: P1SKIP |= mask; // Skip Crossbar decoding for this pin
01FB EB        1052            mov     a,r3
01FC 42D5      1053            orl     _P1SKIP,a
01FE           1054   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:272: break;
01FE           1055   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:273: case 2:
01FE 8001      1056            sjmp    L010005?
0200           1057   L010003?:
0200           1058   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:274: P2MDIN &= (~mask); // Set pin as analog input
0200 EB        1059            mov     a,r3
0201 F4        1060            cpl     a
0202 FA        1061            mov     r2,a
0203 52F3      1062            anl     _P2MDIN,a
0205           1063   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:275: P2SKIP |= mask; // Skip Crossbar decoding for this pin
0205 EB        1064            mov     a,r3
0206 42CC      1065            orl     _P2SKIP,a
0208           1066   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:279: }
0208           1067   L010005?:
0208           1068   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:280: SFRPAGE = 0x00;
0208 75A700    1069            mov     _SFRPAGE,#0x00
020B 22        1070            ret
020C           1071   ;------------------------------------------------------------
020C           1072   ;Allocation info for local variables in function 'PWMStraight'
020C           1073   ;------------------------------------------------------------
020C           1074   ;------------------------------------------------------------
020C           1075   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:289: void PWMStraight(void) {
020C           1076   ;        -----------------------------------------
020C           1077   ;         function PWMStraight
020C           1078   ;        -----------------------------------------
020C           1079   _PWMStraight:
020C           1080   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:290: pwmSig1 = 99;
020C 75A063    1081            mov     _pwmSig1,#0x63
020F E4        1082            clr     a
0210 F5A1      1083            mov     (_pwmSig1 + 1),a
0212           1084   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:291: pwmSig2 = 0;
0212           1085   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:293: pwmSig3 = 0;
0212 E4        1086            clr     a
0213 F560      1087            mov     _pwmSig2,a
0215 F561      1088            mov     (_pwmSig2 + 1),a
0217 F520      1089            mov     _pwmSig3,a
0219 F521      1090            mov     (_pwmSig3 + 1),a
021B           1091   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:294: pwmSig4 =99;
021B 75E063    1092            mov     _pwmSig4,#0x63
021E E4        1093            clr     a
021F F5E1      1094            mov     (_pwmSig4 + 1),a
0221 22        1095            ret
0222           1096   ;------------------------------------------------------------
0222           1097   ;Allocation info for local variables in function 'PWMback'
0222           1098   ;------------------------------------------------------------
0222           1099   ;------------------------------------------------------------
0222           1100   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:297: void PWMback(void) {
0222           1101   ;        -----------------------------------------
0222           1102   ;         function PWMback
0222           1103   ;        -----------------------------------------
0222           1104   _PWMback:
0222           1105   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:298: pwmSig1 = 0;
0222 E4        1106            clr     a
0223 F5A0      1107            mov     _pwmSig1,a
0225 F5A1      1108            mov     (_pwmSig1 + 1),a
0227           1109   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:299: pwmSig2 = 99;
0227 756063    1110            mov     _pwmSig2,#0x63
022A E4        1111            clr     a
022B F561      1112            mov     (_pwmSig2 + 1),a
022D           1113   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:301: pwmSig3 = 99;
022D 752063    1114            mov     _pwmSig3,#0x63
0230 E4        1115            clr     a
0231 F521      1116            mov     (_pwmSig3 + 1),a
0233           1117   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:302: pwmSig4 = 0;
0233 E4        1118            clr     a
0234 F5E0      1119            mov     _pwmSig4,a
0236 F5E1      1120            mov     (_pwmSig4 + 1),a
0238 22        1121            ret
0239           1122   ;------------------------------------------------------------
0239           1123   ;Allocation info for local variables in function 'PWMLeft'
0239           1124   ;------------------------------------------------------------
0239           1125   ;------------------------------------------------------------
0239           1126   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:305: void PWMLeft(void) {
0239           1127   ;        -----------------------------------------
0239           1128   ;         function PWMLeft
0239           1129   ;        -----------------------------------------
0239           1130   _PWMLeft:
0239           1131   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:306: pwmSig1 = 0;
0239           1132   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:307: pwmSig2 = 0;
0239 E4        1133            clr     a
023A F5A0      1134            mov     _pwmSig1,a
023C F5A1      1135            mov     (_pwmSig1 + 1),a
023E F560      1136            mov     _pwmSig2,a
0240 F561      1137            mov     (_pwmSig2 + 1),a
0242           1138   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:309: pwmSig3 = 99;
0242 752063    1139            mov     _pwmSig3,#0x63
0245 E4        1140            clr     a
0246 F521      1141            mov     (_pwmSig3 + 1),a
0248           1142   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:310: pwmSig4 = 99;
0248 75E063    1143            mov     _pwmSig4,#0x63
024B E4        1144            clr     a
024C F5E1      1145            mov     (_pwmSig4 + 1),a
024E 22        1146            ret
024F           1147   ;------------------------------------------------------------
024F           1148   ;Allocation info for local variables in function 'PWMRight'
024F           1149   ;------------------------------------------------------------
024F           1150   ;------------------------------------------------------------
024F           1151   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:313: void PWMRight(void) {
024F           1152   ;        -----------------------------------------
024F           1153   ;         function PWMRight
024F           1154   ;        -----------------------------------------
024F           1155   _PWMRight:
024F           1156   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:314: pwmSig1 = 99;
024F 75A063    1157            mov     _pwmSig1,#0x63
0252 E4        1158            clr     a
0253 F5A1      1159            mov     (_pwmSig1 + 1),a
0255           1160   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:315: pwmSig2 = 0;
0255           1161   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:317: pwmSig3 = 0;
0255           1162   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:318: pwmSig4 = 0;
0255 E4        1163            clr     a
0256 F560      1164            mov     _pwmSig2,a
0258 F561      1165            mov     (_pwmSig2 + 1),a
025A F520      1166            mov     _pwmSig3,a
025C F521      1167            mov     (_pwmSig3 + 1),a
025E F5E0      1168            mov     _pwmSig4,a
0260 F5E1      1169            mov     (_pwmSig4 + 1),a
0262 22        1170            ret
0263           1171   ;------------------------------------------------------------
0263           1172   ;Allocation info for local variables in function 'periodcalc'
0263           1173   ;------------------------------------------------------------
0263           1174   ;period1                   Allocated to registers r2 r3 r4 r5 
0263           1175   ;overflow_count            Allocated to registers r2 r3 
0263           1176   ;------------------------------------------------------------
0263           1177   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:323: float periodcalc(void) {
0263           1178   ;        -----------------------------------------
0263           1179   ;         function periodcalc
0263           1180   ;        -----------------------------------------
0263           1181   _periodcalc:
0263           1182   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:327: TL0=0; 
0263 758A00    1183            mov     _TL0,#0x00
0266           1184   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:328: TH0=0;
0266 758C00    1185            mov     _TH0,#0x00
0269           1186   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:329: TF0=0;
0269 C28D      1187            clr     _TF0
026B           1188   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:331: TR0=0;
026B C28C      1189            clr     _TR0
026D           1190   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:335: while(P1_7!=0); // Wait for the signal to be zero
026D           1191   L015001?:
026D 209710    1192            jb      _P1_7,L015001?
0270           1193   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:336: while(P1_7!=1); // Wait for the signal to be one
0270           1194   L015004?:
0270 309750    1195            jnb     _P1_7,L015004?
0273           1196   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:337: TR0=1; // Start the timer
0273 D28C      1197            setb    _TR0
0275           1198   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:339: while(P1_7!=0) // Wait for the signal to be zero
0275 7A00      1199            mov     r2,#0x00
0277 7B00      1200            mov     r3,#0x00
0279           1201   L015009?:
0279 3097D0    1202            jnb     _P1_7,L015011?
027C           1203   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:341: if(TF0==1) // Did the 16-bit timer overflow?
027C           1204   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:343: TF0=0;
027C 108D10    1205            jbc     _TF0,L015024?
027F 8001      1206            sjmp    L015009?
0281           1207   L015024?:
0281           1208   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:344: overflow_count++;
0281 0A        1209            inc     r2
0282 BA0090    1210            cjne    r2,#0x00,L015009?
0285 0B        1211            inc     r3
0286 8001      1212            sjmp    L015009?
0288           1213   L015011?:
0288           1214   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:358: TR0=0; // Stop timer 0, the 24-bit number [overflow_count-TH0-TL0] has the period!
0288 C28C      1215            clr     _TR0
028A           1216   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:359: period1=(overflow_count*65536.0+TH0*256.0+TL0)*(12.0/SYSCLK);
028A 8A82      1217            mov     dpl,r2
028C 8B83      1218            mov     dph,r3
028E 120100    1219            lcall   ___sint2fs
0291 AA82      1220            mov     r2,dpl
0293 AB83      1221            mov     r3,dph
0295 ACF0      1222            mov     r4,b
0297 FD        1223            mov     r5,a
0298 C002      1224            push    ar2
029A C003      1225            push    ar3
029C C004      1226            push    ar4
029E C005      1227            push    ar5
02A0 900000    1228            mov     dptr,#0x0000
02A3 75F080    1229            mov     b,#0x80
02A6 7447      1230            mov     a,#0x47
02A8 120100    1231            lcall   ___fsmul
02AB AA82      1232            mov     r2,dpl
02AD AB83      1233            mov     r3,dph
02AF ACF0      1234            mov     r4,b
02B1 FD        1235            mov     r5,a
02B2 E581      1236            mov     a,sp
02B4 24FC      1237            add     a,#0xfc
02B6 F581      1238            mov     sp,a
02B8 858C82    1239            mov     dpl,_TH0
02BB C002      1240            push    ar2
02BD C003      1241            push    ar3
02BF C004      1242            push    ar4
02C1 C005      1243            push    ar5
02C3 120100    1244            lcall   ___uchar2fs
02C6 AE82      1245            mov     r6,dpl
02C8 AF83      1246            mov     r7,dph
02CA A8F0      1247            mov     r0,b
02CC F9        1248            mov     r1,a
02CD C006      1249            push    ar6
02CF C007      1250            push    ar7
02D1 C000      1251            push    ar0
02D3 C001      1252            push    ar1
02D5 900000    1253            mov     dptr,#0x0000
02D8 75F080    1254            mov     b,#0x80
02DB 7443      1255            mov     a,#0x43
02DD 120100    1256            lcall   ___fsmul
02E0 AE82      1257            mov     r6,dpl
02E2 AF83      1258            mov     r7,dph
02E4 A8F0      1259            mov     r0,b
02E6 F9        1260            mov     r1,a
02E7 E581      1261            mov     a,sp
02E9 24FC      1262            add     a,#0xfc
02EB F581      1263            mov     sp,a
02ED D005      1264            pop     ar5
02EF D004      1265            pop     ar4
02F1 D003      1266            pop     ar3
02F3 D002      1267            pop     ar2
02F5 C006      1268            push    ar6
02F7 C007      1269            push    ar7
02F9 C000      1270            push    ar0
02FB C001      1271            push    ar1
02FD 8A82      1272            mov     dpl,r2
02FF 8B83      1273            mov     dph,r3
0301 8CF0      1274            mov     b,r4
0303 ED        1275            mov     a,r5
0304 120100    1276            lcall   ___fsadd
0307 AA82      1277            mov     r2,dpl
0309 AB83      1278            mov     r3,dph
030B ACF0      1279            mov     r4,b
030D FD        1280            mov     r5,a
030E E581      1281            mov     a,sp
0310 24FC      1282            add     a,#0xfc
0312 F581      1283            mov     sp,a
0314 AE8A      1284            mov     r6,_TL0
0316 7F00      1285            mov     r7,#0x00
0318 8E82      1286            mov     dpl,r6
031A 8F83      1287            mov     dph,r7
031C C002      1288            push    ar2
031E C003      1289            push    ar3
0320 C004      1290            push    ar4
0322 C005      1291            push    ar5
0324 120100    1292            lcall   ___sint2fs
0327 AE82      1293            mov     r6,dpl
0329 AF83      1294            mov     r7,dph
032B A8F0      1295            mov     r0,b
032D F9        1296            mov     r1,a
032E D005      1297            pop     ar5
0330 D004      1298            pop     ar4
0332 D003      1299            pop     ar3
0334 D002      1300            pop     ar2
0336 C006      1301            push    ar6
0338 C007      1302            push    ar7
033A C000      1303            push    ar0
033C C001      1304            push    ar1
033E 8A82      1305            mov     dpl,r2
0340 8B83      1306            mov     dph,r3
0342 8CF0      1307            mov     b,r4
0344 ED        1308            mov     a,r5
0345 120100    1309            lcall   ___fsadd
0348 AA82      1310            mov     r2,dpl
034A AB83      1311            mov     r3,dph
034C ACF0      1312            mov     r4,b
034E FD        1313            mov     r5,a
034F E581      1314            mov     a,sp
0351 24FC      1315            add     a,#0xfc
0353 F581      1316            mov     sp,a
0355 C002      1317            push    ar2
0357 C003      1318            push    ar3
0359 C004      1319            push    ar4
035B C005      1320            push    ar5
035D 90F4FC    1321            mov     dptr,#0xF4FC
0360 75F032    1322            mov     b,#0x32
0363 7434      1323            mov     a,#0x34
0365 120100    1324            lcall   ___fsmul
0368 AA82      1325            mov     r2,dpl
036A AB83      1326            mov     r3,dph
036C ACF0      1327            mov     r4,b
036E FD        1328            mov     r5,a
036F E581      1329            mov     a,sp
0371 24FC      1330            add     a,#0xfc
0373 F581      1331            mov     sp,a
0375           1332   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:363: return period1*1000;
0375 C002      1333            push    ar2
0377 C003      1334            push    ar3
0379 C004      1335            push    ar4
037B C005      1336            push    ar5
037D 900000    1337            mov     dptr,#0x0000
0380 75F07A    1338            mov     b,#0x7A
0383 7444      1339            mov     a,#0x44
0385 120100    1340            lcall   ___fsmul
0388 AA82      1341            mov     r2,dpl
038A AB83      1342            mov     r3,dph
038C ACF0      1343            mov     r4,b
038E FD        1344            mov     r5,a
038F E581      1345            mov     a,sp
0391 24FC      1346            add     a,#0xfc
0393 F581      1347            mov     sp,a
0395 8A82      1348            mov     dpl,r2
0397 8B83      1349            mov     dph,r3
0399 8CF0      1350            mov     b,r4
039B ED        1351            mov     a,r5
039C 22        1352            ret
039D           1353   ;------------------------------------------------------------
039D           1354   ;Allocation info for local variables in function 'main'
039D           1355   ;------------------------------------------------------------
039D           1356   ;v                         Allocated with name '_main_v_1_75'
039D           1357   ;sig1                      Allocated to registers 
039D           1358   ;sig2                      Allocated to registers 
039D           1359   ;peak                      Allocated with name '_main_peak_1_75'
039D           1360   ;voltspeak                 Allocated with name '_main_voltspeak_1_75'
039D           1361   ;periodpwm                 Allocated to registers r2 r3 r4 r5 
039D           1362   ;period                    Allocated with name '_main_period_1_75'
039D           1363   ;overflow_count            Allocated with name '_main_overflow_count_1_75'
039D           1364   ;------------------------------------------------------------
039D           1365   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:366: void main(void)
039D           1366   ;        -----------------------------------------
039D           1367   ;         function main
039D           1368   ;        -----------------------------------------
039D           1369   _main:
039D           1370   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:377: TIMER0_Init();
039D 120100    1371            lcall   _TIMER0_Init
03A0           1372   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:379: InitPinADC(1, 6); // Configure P2.4 as analog input
03A0 755006    1373            mov     _InitPinADC_PARM_2,#0x06
03A3 758201    1374            mov     dpl,#0x01
03A6 120100    1375            lcall   _InitPinADC
03A9           1376   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:380: InitPinADC(2, 1); // Configure P2.5 as analog input
03A9 755001    1377            mov     _InitPinADC_PARM_2,#0x01
03AC 758202    1378            mov     dpl,#0x02
03AF 120100    1379            lcall   _InitPinADC
03B2           1380   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:382: InitADC();
03B2 120100    1381            lcall   _InitADC
03B5           1382   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:383: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
03B5 7410      1383            mov     a,#__str_0
03B7 C0E0      1384            push    acc
03B9 74C4      1385            mov     a,#(__str_0 >> 8)
03BB C0E0      1386            push    acc
03BD 7480      1387            mov     a,#0x80
03BF C0E0      1388            push    acc
03C1 120100    1389            lcall   _printf
03C4 1581      1390            dec     sp
03C6 1581      1391            dec     sp
03C8 1581      1392            dec     sp
03CA           1393   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:385: "Check pins P2.2 and P2.1 with the oscilloscope.\r\n");
03CA 7490      1394            mov     a,#__str_1
03CC C0E0      1395            push    acc
03CE 74C4      1396            mov     a,#(__str_1 >> 8)
03D0 C0E0      1397            push    acc
03D2 7480      1398            mov     a,#0x80
03D4 C0E0      1399            push    acc
03D6 120100    1400            lcall   _printf
03D9 1581      1401            dec     sp
03DB 1581      1402            dec     sp
03DD 1581      1403            dec     sp
03DF           1404   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:387: printf("\n");
03DF 74D0      1405            mov     a,#__str_2
03E1 C0E0      1406            push    acc
03E3 74C4      1407            mov     a,#(__str_2 >> 8)
03E5 C0E0      1408            push    acc
03E7 7480      1409            mov     a,#0x80
03E9 C0E0      1410            push    acc
03EB 120100    1411            lcall   _printf
03EE 1581      1412            dec     sp
03F0 1581      1413            dec     sp
03F2 1581      1414            dec     sp
03F4           1415   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:389: while (1)
03F4           1416   L016002?:
03F4           1417   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:396: periodpwm = periodcalc(); // period for the pwm
03F4 120100    1418            lcall   _periodcalc
03F7 AA82      1419            mov     r2,dpl
03F9 AB83      1420            mov     r3,dph
03FB ACF0      1421            mov     r4,b
03FD FD        1422            mov     r5,a
03FE           1423   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:398: printf("\t\t\tperiod: =%f s\n", periodpwm);
03FE C002      1424            push    ar2
0400 C003      1425            push    ar3
0402 C004      1426            push    ar4
0404 C005      1427            push    ar5
0406 7450      1428            mov     a,#__str_3
0408 C0E0      1429            push    acc
040A 74C5      1430            mov     a,#(__str_3 >> 8)
040C C0E0      1431            push    acc
040E 7480      1432            mov     a,#0x80
0410 C0E0      1433            push    acc
0412 120100    1434            lcall   _printf
0415 E581      1435            mov     a,sp
0417 24F9      1436            add     a,#0xf9
0419 F581      1437            mov     sp,a
041B           1438   ;        C:\Users\allisony\Documents\ElecRobot\robotControl.c:399: waitms(1000);
041B 9003E8    1439            mov     dptr,#0x03E8
041E 120100    1440            lcall   _waitms
0421 8001      1441            sjmp    L016002?
0423           1442            rseg R_CSEG
0423           1443   
0000           1444            rseg R_XINIT
0000           1445   
0000           1446            rseg R_CONST
0000           1447   __str_0:
0000 1B        1448            db 0x1B
0001 5B324A    1449            db '[2J'
0004 00        1450            db 0x00
0005           1451   __str_1:
0005 53717561  1452            db 'Square wave generator for the EFM8LB1.'
     72652077
     61766520
     67656E65
     7261746F
     7220666F
     72207468
     65204546
     4D384C42
     312E
002B 0D        1453            db 0x0D
002C 0A        1454            db 0x0A
002D 43686563  1455            db 'Check pins P2.2 and '
     6B207069
     6E732050
     322E3220
     616E6420
0041 50322E31  1456            db 'P2.1 with the oscilloscope.'
     20776974
     68207468
     65206F73
     63696C6C
     6F73636F
     70652E
005C 0D        1457            db 0x0D
005D 0A        1458            db 0x0A
005E 00        1459            db 0x00
005F           1460   __str_2:
005F 0A        1461            db 0x0A
0060 00        1462            db 0x00
0061           1463   __str_3:
0061 09        1464            db 0x09
0062 09        1465            db 0x09
0063 09        1466            db 0x09
0064 70657269  1467            db 'period: =%f s'
     6F643A20
     3D256620
     73
0071 0A        1468            db 0x0A
0072 00        1469            db 0x00
0073           1470   
002E           1471            CSEG
002E           1472   
002E           1473   end
